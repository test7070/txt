z_lc1:--z_lc1
declare @t_bacc1 nvarchar(30)
declare @t_eacc1 nvarchar(30)
declare @t_floata nvarchar(50)
declare @c_floata float

set @t_bacc1 = case when '#non'=[2] then '' else [2] end
set @t_eacc1 = case when '#non'=[3] then char(255) else [3] end
set @t_floata = case when '#non'=[6] then null else [6] end
------------------------------------------------------------------------------------------------------------------------------------------------
--今天日期
declare @now_date nvarchar(30)
set @now_date=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @now_date=left(@now_date,3)+'/'+substring(@now_date,4,2)+'/'+right(@now_date,2)

set @c_floata=cast(@t_floata as float)

declare @tmp table(
	gno nvarchar(1),
	lc_noa nvarchar(30),
	lc_acc1 nvarchar(30),
	lc_namea nvarchar(90),
	lc_credit float,
	lc_expire float,
	lc_accno1 nvarchar(30),
	lc_rate float,
	lc_datea nvarchar(10),
	lc_accno2 nvarchar(30),
	lc_conrate1 float,
	lc_conrate2 float,
	lc_accno4 nvarchar(30),
	lc_bank nvarchar(50),
	lc_coin nvarchar(50),
	lcs_noa nvarchar(30),
	lcs_noq nvarchar(30),
	lcs_datea nvarchar(10),
	lcs_tgg nvarchar(90),
	lcs_money float,
	lcs_unpay float,
	lcs_memo nvarchar(max),
	lcs_paydate nvarchar(10),
	lcs_lcdate nvarchar(10),
	lcs_lcmoney float,
	lcs_coin nvarchar(90),
	accmoney float,
	acc2money float,
	acc4money float,
	gqbmoney float,
	lcs_usunpay float,
	lcs_uncredit float,
	lcs_unbill float,
	lcs_usunbill float
)
insert into @tmp
select '0' gno,b.noa,b.acc1,b.namea,b.credit,b.expire,b.accno,b.rate,b.datea,b.accno2,b.conrate1,b.conrate2,b.accno4,b.bank,b.coin,
b.noa,a.noq,a.datea,a.tgg,a.money,a.unpay,'' memo,a.paydate,a.lcdate,a.lcmoney,a.coin
,isnull((select sum((dmoney-cmoney)*(case when left(accc5,1)='1' or left(accc5,1)='5' or left(accc5,1)='6' or left(accc5,1)='8' or left(accc5,2)='73' then 1 else -1 end)) from view_acccs[1]_1 where accc5=b.accno),0)
,isnull((select sum((dmoney-cmoney)*(case when left(accc5,1)='1' or left(accc5,1)='5' or left(accc5,1)='6' or left(accc5,1)='8' or left(accc5,2)='73' then 1 else -1 end)) from view_acccs[1]_1 where accc5=b.accno2),0)
,isnull((select sum((dmoney-cmoney)*(case when left(accc5,1)='1' or left(accc5,1)='5' or left(accc5,1)='6' or left(accc5,1)='8' or left(accc5,2)='73' then 1 else -1 end)) from view_acccs[1]_1 where accc5=b.accno4),0)
,isnull((select sum(case when typea='1' then 1 when typea='2' then -1 else 0 end *money) from  gqb where tbankno=b.bankno and isnull(enda,'')=''),0)
,0,0,0,0
from lc b left join lcs a on b.noa=a.noa
where a.unpay > 0 and (b.acc1 between @t_bacc1 and @t_eacc1)

declare @lcs_noa nvarchar(30)
declare @lcs_noq nvarchar(30)
declare @lct_datea nvarchar(10)
declare @lct_pay float
declare @i int = 0
declare @lct_payTmp nvarchar(50) = ''
declare cursor_table cursor for
select lcs_noa,lcs_noq from @tmp
open cursor_table
fetch next from cursor_table
into @lcs_noa,@lcs_noq
while(@@FETCH_STATUS <> -1)
begin
	set @i = 0
	declare cursor_table2 cursor for
		select datea,pay from lct where noa=@lcs_noa+'-'+@lcs_noq order by noq
	open cursor_table2
	fetch next from cursor_table2
	into @lct_datea,@lct_pay
	while(@@FETCH_STATUS <> -1)
	begin
		if(@i = 2)
		begin
			update @tmp set lcs_memo = lcs_memo + '<br>'
			set @i = 0
		end
		else
			set @i +=1
		if(isnull(@lct_datea,'') != '')
		begin
			set @lct_payTmp = reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,@lct_pay),1)),4,12))
			update @tmp set lcs_memo = lcs_memo + '&nbsp' +@lct_datea+' ( ' + @lct_payTmp +' )　' where lcs_noa = @lcs_noa and lcs_noq=@lcs_noq
		end
		fetch next from cursor_table2
		into @lct_datea,@lct_pay
	end
	close cursor_table2
	deallocate cursor_table2
	fetch next from cursor_table
	into @lcs_noa,@lcs_noq
end
close cursor_table
deallocate cursor_table
update @tmp set lcs_memo = replace(lcs_memo,'<br><br>','')
update @tmp set lcs_memo = substring(lcs_memo,5,len(lcs_memo)) where left(lcs_memo,4) = '<br>'
update @tmp set lcs_memo = left(lcs_memo,len(lcs_memo)-6) where right(lcs_memo,6) = '&nbsp&nbsp<br>'

insert into @tmp(gno,lc_acc1,lcs_unpay,lcs_usunpay,lcs_uncredit,lcs_unbill ,lcs_usunbill)
select case when isnull(lc_coin,'')='' then '1' else '2' end,lc_acc1
,sum(case when isnull(lcs_coin,'')='' then 1 else @c_floata end * lcs_unpay ) --台幣 
,sum(case when isnull(lcs_coin,'')!='' then 1 else 0 end * lcs_unpay ) --外幣
,lc_credit
-isnull((select sum(unpay) from lcs where (a.lc_noa = noa) and isnull(coin,'')=''),0) --台幣未還金額
-isnull((select sum(lcmoney-money) from lcs where (a.lc_noa = noa) and isnull(chgdate,'')!='' and @now_date<=isnull(lcdate,'') and isnull(lcno,'')!='' and isnull(lcodate,'')!='' and isnull(coin,'')=''),0)--台幣未押匯
-@c_floata*(isnull((select sum(unpay) from lcs where (a.lc_noa = noa) and isnull(coin,'')!=''),0) --外幣未還金額
+isnull((select sum(lcmoney-money) from lcs where (a.lc_noa = noa) and isnull(chgdate,'')!='' and @now_date<=isnull(lcdate,'') and isnull(lcno,'')!='' and isnull(lcodate,'')!='' and isnull(coin,'')!=''),0)--外幣未押匯
)
,isnull((select sum(lcmoney-money) from lcs where (a.lc_noa = noa) and isnull(chgdate,'')!='' and @now_date<=isnull(lcdate,'') and isnull(lcno,'')!='' and isnull(lcodate,'')!='' and isnull(coin,'')=''),0)--台幣未押匯
,isnull((select sum(lcmoney-money) from lcs where (a.lc_noa = noa) and isnull(chgdate,'')!='' and @now_date<=isnull(lcdate,'') and isnull(lcno,'')!='' and isnull(lcodate,'')!='' and isnull(coin,'')!=''),0)--外幣未押匯
from @tmp a group by lc_noa,lc_acc1,lc_credit,lc_coin

update @tmp set lcs_memo=reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(lc_credit-lcs_money)),1)),4,12)) where gno = '1'

select gno,lc_acc1,lc_namea,lc_bank,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lc_credit),1)),4,30)) lc_credit,
	cast(lc_expire as nvarchar) +' 天' lc_expire,
	lc_accno1
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lc_rate),1)),0,30)) lc_rate
	,lc_datea,lc_accno2,
	'定存 ' + reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lc_conrate1),1)),0,30)) + ' %' lc_conrate1,
	'客票 ' + reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lc_conrate2),1)),0,30)) + ' %' lc_conrate2,
	lc_accno4,lcs_datea,lcs_tgg,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lcs_money),1)),0,30)) lcs_money,
	lcs_memo,lcs_paydate,lcs_lcdate,lcs_coin
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lcs_lcmoney),1)),0,30)) lcs_lcmoney
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lcs_unpay),1)),0,30)) lcs_unpay
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,accmoney),1)),0,30)) accmoney
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,acc2money),1)),0,30)) acc2money
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,acc4money),1)),0,30)) acc4money
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gqbmoney),1)),0,30)) gqbmoney
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lcs_usunpay),1)),0,30)) lcs_usunpay
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lcs_uncredit),1)),0,30)) lcs_uncredit
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lcs_unbill),1)),0,30)) lcs_unbill
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,lcs_usunbill),1)),0,30)) lcs_usunbill
from @tmp order by lc_acc1,gno,lcs_datea;
--******************************************************************************************************
z_lc5:--z_lc5
declare @t_payedate nvarchar(50)
declare @t_floata nvarchar(50)
declare @t_coin nvarchar(50)
declare @c_floata float

set @t_payedate = case when '#non'=[4] then '' else [4] end
set @t_coin = case when '#non'=[5] then '' else [5] end
set @t_floata = case when '#non'=[6] then null else [6] end
------------------------------------------------------------------------------------------------------------------------------------------------
set @c_floata=cast(@t_floata as float)
if(len(@t_payedate)=0)
begin
	--今天日期
	set @t_payedate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
	set @t_payedate=left(@t_payedate,3)+'/'+substring(@t_payedate,4,2)+'/'+right(@t_payedate,2)
end

declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(30),
	noq nvarchar(30),
	coin nvarchar(30),
	mon nvarchar(30),
	paydate nvarchar(30),
	tgg nvarchar(90),
	unpay float,
	usunpay float,
	money float,
	usmoney float,
	datea nvarchar(30),
	floata float,
	paymemo nvarchar(max),
	bank nvarchar(90),
	funpay float,
	rate float
)

insert into @tmp
select '0',a.noa,b.noq,b.coin,left(b.paydate,6),b.paydate,b.tgg,b.unpay,b.unpay*b.float,b.money,b.money*b.float,b.datea,b.float,''
,substring(a.namea,CHARINDEX('-',a.namea)+1,len(a.namea)),b.unpay*@c_floata,b.rate
from lc a left join lcs b on (a.noa = b.noa)
where b.unpay > 0 
and (len(@t_coin)=0 or (case when @t_coin='TWD' then '' else @t_coin end)=b.coin)
--and b.paydate<=@t_payedate

declare @lcs_noa nvarchar(30)
declare @lcs_noq nvarchar(30)
declare @lct_datea nvarchar(10)
declare @lct_pay float
declare @i int = 0
declare @lct_payTmp nvarchar(50) = ''
declare cursor_table cursor for
select noa,noq from @tmp
open cursor_table
fetch next from cursor_table
into @lcs_noa,@lcs_noq
while(@@FETCH_STATUS <> -1)
begin
	set @i = 0
	declare cursor_table2 cursor for
		select datea,pay from lct where noa=@lcs_noa+'-'+@lcs_noq order by noq
	open cursor_table2
	fetch next from cursor_table2
	into @lct_datea,@lct_pay
	while(@@FETCH_STATUS <> -1)
	begin
		if(@i = 2)
		begin
			update @tmp set paymemo = paymemo + '<br>'
			set @i = 0
		end
		else
			set @i +=1
		if(isnull(@lct_datea,'') != '')
		begin
			set @lct_payTmp = reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,@lct_pay),1)),4,12))
			update @tmp set paymemo = paymemo + '&nbsp' +@lct_datea+' ( ' + @lct_payTmp +' )　' where noa = @lcs_noa and noq=@lcs_noq
		end
		fetch next from cursor_table2
		into @lct_datea,@lct_pay
	end
	close cursor_table2
	deallocate cursor_table2
	fetch next from cursor_table
	into @lcs_noa,@lcs_noq
end
close cursor_table
deallocate cursor_table

update @tmp set paymemo = replace(paymemo,'<br><br>','')
update @tmp set paymemo = substring(paymemo,5,len(paymemo)) where left(paymemo,4) = '<br>'
update @tmp set paymemo = left(paymemo,len(paymemo)-6) where right(paymemo,6) = '&nbsp&nbsp<br>'

insert @tmp(gno,coin,mon,unpay,funpay)
select '1',coin,mon,SUM(unpay),SUM(funpay) from @tmp group by coin,mon

insert @tmp(gno,coin,mon,unpay,funpay)
select '3',coin,MAX(mon),SUM(unpay),SUM(funpay) from @tmp where gno='0' group by coin

update @tmp set gno='2'
where gno='1' and mon+'_'+coin in(select mon+'_'+coin from @tmp where gno='3')

select dbo.getcomma(unpay,2) unpay
,dbo.getcomma(case when coin='' then null else usunpay end,2) usunpay
,dbo.getcomma(money,2) money
,dbo.getcomma(case when coin='' then null else usmoney end,2) usmoney
,'@'+dbo.getcomma(floata,4) floata
,dbo.getcomma(funpay,2) funpay
,dbo.getcomma(rate,4) rate
,case when coin='' then 'TWD' else coin end coin
,*
from @tmp order by coin,mon,gno;
--******************************************************************************************************