z_bank1:--z_bank1
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	
	--declare @t_accy nvarchar(20) = [1]
	declare @t_bdate nvarchar(10) = case when '#non'=[2] then '' else [2] end 
	declare @t_edate nvarchar(10) = case when '#non'=[3] then char(255) else [3] end 
	declare @t_baccno nvarchar(25) = case when '#non'=[4] then '' else [4] end 
	declare @t_eaccno nvarchar(25) = case when '#non'=[5] then char(255) else [5] end 
-------------------------------------------------------------------------
	declare @tmp table(
		sel int identity(1,1)
		,tablea nvarchar(20)
		,acc1 nvarchar(20)
		,acc2 nvarchar(50)
		,atitle nvarchar(20)
		,btitle nvarchar(20)
		,account nvarchar(50)
		,dmoney1 float
		,cmoney1 float
		,dmoney2 float
		,cmoney2 float
		,dmoney3 float
		,cmoney3 float
		,[begin] float
		,[current] float
		,[end] float
	)
	declare @accy nvarchar(10)
	declare @acc nvarchar(20)
	declare @accc nvarchar(20)
	declare @acccs nvarchar(20)
	
	declare cursor_table cursor for
	
	select  right(left(a.[name],7),3),a.[name],b.[name],c.[name]
	from sys.tables a
	left join (select [name],RIGHT([name],5) accy from sys.tables where [name] like 'acccs[0-9][0-9][0-9][_][1]') b on RIGHT(a.[name],5)=b.accy
	left join (select [name],RIGHT([name],5) accy from sys.tables where [name] like 'acc[0-9][0-9][0-9][_][1]') c on RIGHT(a.[name],5)=c.accy
	where a.[name] like 'accc[0-9][0-9][0-9][_][1]'
	and b.[name] is not null
	
	order by RIGHT(a.[name],5)
	open cursor_table
	fetch next from cursor_table
	into @accy,@accc,@acccs,@acc
	while(@@FETCH_STATUS <> -1)
	begin 
		set @cmd = "select @accc,a.accc5
			,ISNULL(d.bank,'')
			,isnull(d.account,'')
			,SUM(case when @accy+'/'+isnull(b.accc2,'') < @t_bdate then ISNULL(a.dmoney,0) else 0 end)
			,SUM(case when @accy+'/'+isnull(b.accc2,'') < @t_bdate then ISNULL(a.cmoney,0) else 0 end)
			,SUM(case when @accy+'/'+isnull(b.accc2,'') between @t_bdate and @t_edate then ISNULL(a.dmoney,0) else 0 end)
			,SUM(case when @accy+'/'+isnull(b.accc2,'') between @t_bdate and @t_edate then ISNULL(a.cmoney,0) else 0 end)
			,SUM(case when @accy+'/'+isnull(b.accc2,'') <= @t_edate then ISNULL(a.dmoney,0) else 0 end)
			,SUM(case when @accy+'/'+isnull(b.accc2,'') <= @t_edate then ISNULL(a.cmoney,0) else 0 end)
		from "+@acccs+" a
		left join "+@accc+" b on a.accc3=b.accc3
		left join "+@acc+" c on a.accc5=c.acc1
		outer apply(select top 1 * from bank where acc1=a.accc5) d
		where b.accc3 is not null
		and a.accc5 like '1112%'
		and @accy+'/'+isnull(b.accc2,'') <= @t_edate
		and a.accc5 between @t_baccno and @t_eaccno 
		group by a.accc5,ISNULL(d.bank,''),isnull(d.account,'')"
	
		if @accy between LEFT(@t_bdate,3) and LEFT(@t_edate,3)
			insert into @tmp(tablea,acc1,acc2,account,dmoney1,cmoney1,dmoney2,cmoney2,dmoney3,cmoney3)
			execute sp_executesql @cmd,N'@accc nvarchar(20),@accy nvarchar(20),@t_bdate nvarchar(20),@t_edate nvarchar(20),@t_baccno nvarchar(20),@t_eaccno nvarchar(20)'
			,@accc=@accc,@accy=@accy,@t_bdate=@t_bdate,@t_edate=@t_edate,@t_baccno=@t_baccno,@t_eaccno=@t_eaccno
	
		fetch next from cursor_table
		into @accy,@accc,@acccs,@acc
	end
	close cursor_table
	deallocate cursor_table
	
	update @tmp set [begin] = ISNULL(dmoney1,0)-ISNULL(cmoney1,0)
		,[current] = ISNULL(dmoney2,0)-ISNULL(cmoney2,0)
		,[end] = ISNULL(dmoney3,0)-ISNULL(cmoney3,0)
------------------------------------------------------------------------------
	declare @acc1 nvarchar(20)
	declare @acc2 nvarchar(50)
	declare @atitle nvarchar(50)
	declare @btitle nvarchar(50)
	
	declare cursor_table cursor for 
	select acc1,acc2 from @tmp 
	open cursor_table
	fetch next from cursor_table
	into @acc1,@acc2
	while(@@FETCH_STATUS <> -1) 
	begin 
		
		set @btitle = case when Len(@acc2)=0 then '' else SUBSTRING(@acc2,CHARINDEX('-',@acc2)+1,len(@acc2)) end
		if PATINDEX('%-%',@acc2)<1
		begin
			set @atitle = ''
		end
		else
		begin
			set @atitle = left(@acc2,PATINDEX('%-%',@acc2)-1) 
		end
		update @tmp set atitle = case when (PATINDEX('%甲存%',@acc2)>0)then '甲存' else '活存' end
			,btitle = @btitle
		where acc1 = @acc1

		fetch next from cursor_table
		into @acc1,@acc2
	end 
	close cursor_table
	deallocate cursor_table

	select '1' gno
		,acc2 a01
		,account a02
		,dbo.getComma([begin],-1) a03
		,dbo.getComma([dmoney2],-1) a04
		,dbo.getComma([cmoney2],-1) a05
		,dbo.getComma([end],-1) a06
		,'' a07
		,dbo.getComma([end],-1) a08
	from @tmp 
	order by acc1;
	
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
z_bank2:--z_bank2
declare @t_accy nvarchar(20)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_baccno nvarchar(25)
declare @t_eaccno nvarchar(25)
declare @title nvarchar(200)
set @t_accy = '105_1'
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
set @t_baccno = case when '#non'=[4] then '' else [4] end
set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
set @title = '銀行存款異動明細' + (case when @t_bdate = @t_edate then '日報表' else '月報表' end)

declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	accuname nvarchar(90),
	account nvarchar(50),
	datea nvarchar(10),
	lastmoney float,
	inmoney float,
	outmoney float,
	todaytotal float,
	memo nvarchar(200),
	ctmoney int,-----銀行調節
	ttmoney int-------可用餘額
)
declare @tmpb table(
	gno nvarchar(1),
	idno int identity(0,1),
	accuname nvarchar(90),
	account nvarchar(50),
	datea nvarchar(10),
	lastmoney float,
	inmoney float,
	outmoney float,
	todaytotal float,
	memo nvarchar(max),
	ctmoney int,-----銀行調節
	ttmoney int-------可用餘額
)
declare @tmpa table(  -----放置搜尋日期區間內有的帳戶
	wacc1 nvarchar(50),
	wacc2 nvarchar(50),
	accuname nvarchar(200),
	account nvarchar(50),
	lastmoney float
)
insert into @tmpa(wacc1,accuname,account)
	select 
		distinct a.accc5,b.bank,b.account
	from acccs105_1 a
	left join bank b on (left(a.accc5,4) + substring(a.accc5,6,len(a.accc5)-4) = b.noa)
	where
	(LEFT(accc5,4) = '1112') and
	(accc2 <= @t_edate) and
	(accc5 between @t_baccno and @t_eaccno)
	order by accc5
update @tmpa set lastmoney = isnull((select sum(dmoney-cmoney) from acccs105_1 where (accc2 < @t_bdate) and wacc1 = accc5),0)
---update @tmpa set lastmoney = (select (SUM(ISNULL(dmoney,0)) - SUM(ISNULL(cmoney,0))) from acccs105_1 where (accc2 < @t_bdate) and right(accc6,len(account)) = account)
insert into @tmpb
	select
		'0',
		isnull(b.accuname,case when len(a.accc5) > 99 then (select accuname from @tmpa where wacc1 = left(substring(a.accc5,6,len(a.accc5)-5),4) + '.' + right(substring(a.accc5,6,len(a.accc5)-5),len(substring(a.accc5,6,len(a.accc5)-5))-4)) end) ,
		isnull(b.account,case when len(a.accc5) > 99 then (select account from @tmpa where wacc1 = left(substring(a.accc5,6,len(a.accc5)-5),4) + '.' + right(substring(a.accc5,6,len(a.accc5)-5),len(substring(a.accc5,6,len(a.accc5)-5))-4)) end) ,
		accc2,
		0,
		case when LEFT(accc5,4) = '1112' then dmoney else 0 end,
		case when LEFT(accc5,4) = '1112' then cmoney else 0 end,0,accc7,
		case when LEFT(accc5,4) = '1117' then 
			case when dmoney >0 then dmoney
			when cmoney > 0 then cmoney*(-1) end
		else 0 end,
		0
	from acccs105_1 a
	left join @tmpa b on a.accc5 =  b.wacc1
	where ((LEFT(accc5,4) = '1112') or (LEFT(accc5,4) = '1117')) and 
		  (accc2 between @t_bdate and @t_edate) and
		  ((accc5 between @t_baccno and @t_eaccno) or LEFT(accc5,4) = '1117' )
	order by accuname,account,accc2,cmoney,dmoney
insert into @tmp
	select gno,accuname,account,datea,lastmoney,inmoney,outmoney,todaytotal,memo,ctmoney,ttmoney from @tmpb order by accuname,account


declare @account nvarchar(50)
declare @last_account nvarchar(50)
declare @datea nvarchar(10)
declare @last_datea nvarchar(10)
declare @inmoney float
declare @outmoney float
declare @lastmoney float
declare @idno int
declare @ctmoney int
set @last_account = ''
set @last_datea = ''
set @lastmoney = 0
set @ctmoney = 0
declare cursor_table cursor for
	select idno,account,datea,inmoney,outmoney,ctmoney from @tmp
open cursor_table
fetch next from cursor_table
into @idno,@account,@datea,@inmoney,@outmoney,@ctmoney
while(@@FETCH_STATUS <> -1)
begin
	if(@account = @last_account and @datea = @last_datea)
	begin
		set @lastmoney = (@lastmoney + @inmoney) - @outmoney + @ctmoney
	end
	else if(@account != @last_account)
	begin
		if(@last_account != '' and @last_datea != '')
			update @tmp set todaytotal = @lastmoney where idno = @idno-1
		select @lastmoney = lastmoney from @tmpa where account = @account
		update @tmp set lastmoney = @lastmoney where idno = @idno
		if((select count(account) from @tmp where account = @account and datea = @datea) = 1)
			update @tmp set todaytotal = (lastmoney + inmoney) - outmoney where idno = @idno
		set @last_account = @account
		set @last_datea = @datea
		set @lastmoney = (@lastmoney + @inmoney) - @outmoney/* + @ctmoney*/
	end
	else if(@account = @last_account and @datea != @last_datea)
	begin
		update @tmp set todaytotal = @lastmoney where idno = @idno-1
		update @tmp set lastmoney = @lastmoney where idno = @idno
		if((select count(account) from @tmp where account = @account and datea = @datea) = 1)
			update @tmp set todaytotal = (lastmoney + inmoney) - outmoney where idno = @idno
		set @last_datea = @datea
		set @lastmoney = (@lastmoney + @inmoney) - @outmoney + @ctmoney
	end
	if((select max(idno) from @tmp) = @idno)
		update @tmp set todaytotal = @lastmoney where idno = @idno	
	fetch next from cursor_table
	into @idno,@account,@datea,@inmoney,@outmoney,@ctmoney
end
close cursor_table
deallocate cursor_table
update @tmp set todaytotal = todaytotal - ctmoney where todaytotal != 0
update @tmp set ttmoney = 
		case when todaytotal = 0 and inmoney = 0 and outmoney = 0 then lastmoney + ctmoney 
		else todaytotal + ctmoney end
--暫時不要顯示
-------將本期無紀錄但有結餘的帳戶列出
--insert into @tmp(account,gno,accuname,datea,lastmoney,inmoney,outmoney,todaytotal,ctmoney,ttmoney,memo)
--	select account,'0',accuname,'',lastmoney,0,0,lastmoney,0,lastmoney,'' from @tmpa where lastmoney != 0
--	except
--	select distinct account,'0',accuname,'',lastmoney,0,0,lastmoney,0,lastmoney,'' from @tmp where lastmoney != 0
-------計算本日結餘
declare @totalmoney int
set @totalmoney = 0
declare cursor_table cursor for 
	select distinct account,max(idno) from @tmp 
	group by account
open cursor_table 
fetch next from cursor_table 
into @account,@idno
while(@@FETCH_STATUS <> -1) 
begin 
	set @totalmoney += (select todaytotal from @tmp where account = @account and idno = @idno)
	fetch next from cursor_table 
	into @account,@idno
end 
close cursor_table 
deallocate cursor_table

insert into @tmp(gno,inmoney,outmoney,todaytotal,ctmoney,ttmoney) 
	select '1',SUM(inmoney),SUM(outmoney),@totalmoney,sum(ctmoney),(@totalmoney+sum(ctmoney))
	from @tmp 
	
select
	gno,accuname,account,datea,
	case when lastmoney = 0 then '' else 
		(case when lastmoney < 0 then '(' + reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(lastmoney*-1)),1)),4,12)) + ')'
			else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) end)
		end lastmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmoney),1)),4,12)) inmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,outmoney),1)),4,12)) outmoney,
	case when todaytotal = 0 then '' else 
		(case when todaytotal < 0 then '(' + reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(todaytotal*-1)),1)),4,12)) + ')'
			else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,todaytotal),1)),4,12)) end)
		end todaytotal,
	case when ctmoney = 0 then '' else 
		(case when ctmoney < 0 then '(' + reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(ctmoney*-1)),1)),4,12)) + ')'
			else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ctmoney),1)),4,12)) end)
		end ctmoney,
	case when ttmoney = 0 then '' else 
		(case when ttmoney < 0 then '(' + reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,(ttmoney*-1)),1)),4,12)) + ')'
			else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ttmoney),1)),4,12)) end)
		end ttmoney,
	memo,@title title
from @tmp;