z_welfare1:--z_welfare1
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_storeno nvarchar(50)
set @t_bdate = case when '#non'=[1] then '' else [1] end
set @t_edate = case when '#non'=[2] then char(255) else [2] end
set @t_storeno = case when '#non'=[3] then '' else [3] end

declare @tmp table( 
	gno nvarchar(1),
	recno int, 
	noa nvarchar(20),
	storeno nvarchar(50),
	stores nvarchar(90),
	noq nvarchar(10),
	datea nvarchar(10), 
	product nvarchar(50), 
	income int, 
	pay int, 
	total float 
) 

insert into @tmp 
select '0' gno,
ROW_NUMBER()over(partition by a.storeno order by a.storeno,a.datea,a.noa,b.noq,b.product)as recno,
a.noa noa,a.storeno,a.store,b.noq noq,a.datea datea,b.product product,isnull(b.income,0) income,isnull(b.pay,0) pay,0 total
from welfare a
left join welfares b on a.noa = b.noa 
where (datea <= @t_edate ) and (len(@t_storeno)=0 or isnull(storeno,'')=@t_storeno)
	
declare @gno nvarchar(20)
declare @t_gno nvarchar(20)
declare @noa nvarchar(20)
declare @noq nvarchar(20)
declare @storeno nvarchar(50)
declare @stores nvarchar(90)
declare @recno int
declare @datea nvarchar(20)
declare @product nvarchar(20)
declare @income int
declare @pay int
declare @total int
declare @t_income int
declare @t_pay int
declare @t_total int
set @t_gno = 'qwert'
set @t_income = 0
set @t_pay = 0
set @t_total = 0

declare cursor_table cursor for 
	select gno,noa,noq,storeno,stores,datea,product,income,pay,total,recno from @tmp 
open cursor_table 
fetch next from cursor_table 
into @gno,@noa,@noq,@storeno,@stores,@datea,@product,@income,@pay,@total,@recno
while(@@FETCH_STATUS <> -1) 
begin 
	if (@t_storeno != @storeno) 
	begin 
		set @t_income = @income
		set @t_pay = @pay
		set @t_total = @income - @pay 
	end 
	else 
	begin 
		set @t_income = @t_income +@income
		set @t_pay = @t_pay +@pay 
		set @t_total = @t_total + @income - @pay 
	end 
	update @tmp set total = @t_total where recno= @recno  
	
	set @t_storeno=@storeno
	
	fetch next from cursor_table 
	into @gno,@noa,@noq,@storeno,@stores,@datea,@product,@income,@pay,@total,@recno	
end 
close cursor_table 
deallocate cursor_table 

declare @tmpa table( 
	gno nvarchar(1),
	recno int, 
	noa nvarchar(20),
	noq nvarchar(10),
	storeno nvarchar(50),
	stores nvarchar(50),
	datea nvarchar(10), 
	product nvarchar(50), 
	income int, 
	pay int, 
	total float 
)
insert into @tmpa
	select
		gno,recno,noa,noq,storeno,stores,datea,product,income,pay,total
	from @tmp
	where (datea between @t_bdate and @t_edate)

insert into @tmpa
	select '1',0,'2','',storeno,stores,'','',SUM(income),SUM(pay),0
	from @tmpa
	group by storeno,stores
select 
	gno,noa,noq,datea,product,storeno,stores,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(income,0)),1)),4,12)) income, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(pay,0)),1)),4,12)) pay, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(total,0)),1)),4,12)) total 
from @tmpa order by storeno,gno,datea;

--*****************************************************************************************************
z_welfare2:--z_welfare2
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_storeno nvarchar(50)
set @t_bdate = case when '#non'=[1] then '' else [1] end
set @t_edate = case when '#non'=[2] then char(255) else [2] end
set @t_storeno = case when '#non'=[3] then '' else [3] end
declare @tmp table( 
	gno nvarchar(1), 
	recno int,
	noa nvarchar(20),
	storeno nvarchar(50),
	stores nvarchar(90),
	datea nvarchar(10),
	income float, 
	pay float, 
	total float, 
	inpaymemo nvarchar(200) 
) 
insert into @tmp
	select
		'0' gno,ROW_NUMBER()over(order by noa,memo)as recno,R1.noa,R1.storeno,R1.store,
		R1.datea,R1.income,R1.pay,R1.total,R1.memo
	from( 
		select
			'0' gno,'1' noa,'' storeno,'' store,'' datea,0 income
			,0 pay,0 total,'期初金額' memo
		from welfare 
		where (datea< @t_bdate) and (len(@t_storeno)=0 or isnull(storeno,'')=@t_storeno)
		union 
		select
			'0' gno,a.noa noa,a.storeno,a.store,a.datea datea,isnull(a.income,0) income,isnull(a.pay,0) pay,0 total,a.Inpaymemo memo
		from welfare a
		where (datea <= @t_edate) and (len(@t_storeno)=0 or isnull(storeno,'')=@t_storeno)
	) as R1 

declare @gno nvarchar(20)
declare @t_gno nvarchar(20)
declare @noa nvarchar(20)
declare @recno int
declare @storeno nvarchar(50)
declare @stores nvarchar(90)
declare @memo nvarchar(20)
declare @income int
declare @pay int
declare @total int
declare @t_income int
declare @t_pay int
declare @t_total int
set @t_gno = 'qwert'
set @t_income = 0
set @t_pay = 0
set @t_total = 0

declare cursor_table cursor for 
	select gno,noa,storeno,stores,inpaymemo,income,pay,total,recno from @tmp 
open cursor_table 
fetch next from cursor_table 
into @gno,@noa,@storeno,@stores,@memo,@income,@pay,@total,@recno
while(@@FETCH_STATUS <> -1) 
begin 
	if (@t_gno != @gno) 
	begin 
		set @t_gno = @gno
		set @t_income = @income
		set @t_pay = @pay
		set @t_total = @income - @pay 
	end 
	else 
	begin 
		set @t_income = @t_income +@income
		set @t_pay = @t_pay +@pay 
		set @t_total = @t_total + @income - @pay 
	end 
	update @tmp set total = @t_total where recno= @recno  
	fetch next from cursor_table 
	into @gno,@noa,@storeno,@stores,@memo,@income,@pay,@total,@recno
end 
close cursor_table 
deallocate cursor_table 
insert into @tmp
	select
		'1',0,'2',storeno,stores,'',SUM(income),SUM(pay),0,''
	from @tmp group by storeno,stores
select
	gno,datea,inpaymemo, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(income,0)),1)),4,12)) income, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(pay,0)),1)),4,12)) pay, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(total,0)),1)),4,12)) total 
from @tmp 
where (datea between @t_bdate and @t_edate);