z_acccp08:--z_acccp08 不分部門
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10) = '[1]'
	declare @t_rank nvarchar(20) = '[2]'
	declare @t_bno nvarchar(20) = [3]
	declare @t_eno nvarchar(20) = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),'','',a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	
	declare @tmpaccc table(
			acc1 nvarchar(30),
			acc2 nvarchar(50)
	)

	set @cmd = " select acc1,acc2 from acc"+@t_accy+" order by acc1"
	insert @tmpaccc
	execute sp_executesql @cmd
	
	insert @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	select accc1,accc2,accc3,'借'accc4
	,(select top 1 acc1 from @tmpaccc where acc2 like '現金%' order by (case when acc2='現金' then 1 when acc2='現金收入' then 2 else 3 end),acc1) accc5
	,(select top 1 acc2 from @tmpaccc where acc2 like '現金%' order by (case when acc2='現金' then 1 when acc2='現金收入' then 2 else 3 end),acc1) accc6
	,'' accc7,SUM(cmoney) dmoney,SUM(dmoney)cmoney,'' partno,'' part,MAX(noq)+'z'noq,''zno,MAX(worker)worker
	from @tmp 
	group by accc1,accc2,accc3,partno,part
	having accc1='1'
	
	insert @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	select accc1,accc2,accc3,'貸'accc4
	,(select top 1 acc1 from @tmpaccc where acc2 like '現金%' order by (case when acc2='現金' then 1 when acc2='現金收入' then 2 else 3 end),acc1) accc5
	,(select top 1 acc2 from @tmpaccc where acc2 like '現金%' order by (case when acc2='現金' then 1 when acc2='現金收入' then 2 else 3 end),acc1) accc6
	,'' accc7,SUM(cmoney) dmoney,SUM(dmoney)cmoney,'' partno,'' part,MAX(noq)+'z'noq,''zno,MAX(worker)worker
	from @tmp 
	group by accc1,accc2,accc3,partno,part
	having accc1='2'
	
	--------------------------------------------------------------------------------------------------
	declare @n int
	declare @m int
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	--------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare cursor_table cursor for
	select accc3,noq,accc5,rtrim(ltrim(accc6)) from @tmp where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@noq,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and noq=@noq
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and noq=@noq
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@noq,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount_accc6 int
	set @maxcount_accc6 = 16
	declare @maxcount_accc7 int
	set @maxcount_accc7 = 30
	declare @string nvarchar(max)
	
	set @noq = ''
	declare cursor_table cursor for
	select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,b.accc7,a.partno,a.part,a.zno,a.worker
	,a.dmoney,a.cmoney
	,row_number()over(order by a.accc3)
	from(
		select accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker,sum(isnull(dmoney,0)) dmoney,sum(isnull(cmoney,0)) cmoney
		from @tmp
		group by accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker) a
	outer apply (select top(1) accc7 from @tmp where accc3=a.accc3 and accc5=a.accc5  
		order by case when a.dmoney>a.cmoney and dmoney>0 then 1
					  when a.cmoney>a.dmoney and cmoney>0 then 2
					  else 3 end	
			,noq) b
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	while(@@FETCH_STATUS <> -1)
	begin	
		insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
		values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,0)
		--accc6
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6,@tmpString="",@cn2=0
		
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc6)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc6=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		--accc7
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc7)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc7=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 12
	set @endline = 4
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	select a.* 
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')'+'</a>' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc6+'</a>' caccc6
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc7+'</a>' caccc7
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.zno+'</a>' czno
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;
	
z_acccp07:--z_acccp07 不分部門
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10) = '[1]'
	declare @t_rank nvarchar(20) = '[2]'
	declare @t_bno nvarchar(20) = [3]
	declare @t_eno nvarchar(20) = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		proj nvarchar(30)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),'',a.part,a.noq,b.zno,b.worker"+
	",a.proj from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,proj)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	
	declare @tmpaccc table(
			acc1 nvarchar(30),
			acc2 nvarchar(50)
	)

	set @cmd = " select acc1,acc2 from acc"+@t_accy+" order by acc1"
	insert @tmpaccc
	execute sp_executesql @cmd
	
	insert @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,proj)
	select accc1,accc2,accc3,'借'accc4
	,(select top 1 acc1 from @tmpaccc where acc2 like '現金%' order by (case when acc2='現金' then 1 when acc2='現金收入' then 2 else 3 end),acc1) accc5
	,(select top 1 acc2 from @tmpaccc where acc2 like '現金%' order by (case when acc2='現金' then 1 when acc2='現金收入' then 2 else 3 end),acc1) accc6
	,'' accc7,SUM(cmoney) dmoney,SUM(dmoney)cmoney,'' partno,'' part,MAX(noq)+'z'noq,''zno,MAX(worker)worker,''proj
	from @tmp 
	group by accc1,accc2,accc3,partno,part
	having accc1='1'
	
	insert @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,proj)
	select accc1,accc2,accc3,'貸'accc4
	,(select top 1 acc1 from @tmpaccc where acc2 like '現金%' order by (case when acc2='現金' then 1 when acc2='現金收入' then 2 else 3 end),acc1) accc5
	,(select top 1 acc2 from @tmpaccc where acc2 like '現金%' order by (case when acc2='現金' then 1 when acc2='現金收入' then 2 else 3 end),acc1) accc6
	,'' accc7,SUM(cmoney) dmoney,SUM(dmoney)cmoney,'' partno,'' part,MAX(noq)+'z'noq,''zno,MAX(worker)worker,''proj
	from @tmp 
	group by accc1,accc2,accc3,partno,part
	having accc1='2'
	
	--------------------------------------------------------------------------------------------------
	declare @n int
	declare @m int
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	declare @proj nvarchar(max)
	--------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare cursor_table cursor for
	select accc3,noq,accc5,rtrim(ltrim(accc6)) from @tmp where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@noq,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and noq=@noq
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and noq=@noq
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@noq,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int,
		proj nvarchar(30)
	)
	declare @tmpString nvarchar(max)
	declare @maxcount_accc6 int
	set @maxcount_accc6 = 16
	declare @maxcount_accc7 int
	set @maxcount_accc7 = 30
	declare @string nvarchar(max)
	
	declare cursor_table cursor for
	select accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker
		,row_number()over(order by accc3,noq),proj
	from @tmp
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,@proj
	while(@@FETCH_STATUS <> -1)
	begin	
		insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2,proj)
		values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,0,@proj)
		--accc6
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6,@tmpString="",@cn2=0
		
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc6)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc6=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2,proj)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2,@proj)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		--accc7
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc7)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc7=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2,proj)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2,@proj)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,@proj
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		proj nvarchar(30)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 12
	set @endline = 4
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2,proj from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2,@proj
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,proj)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@proj
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2,@proj
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker,proj)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker,@proj
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	select a.* 
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')'+'</a>' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc6+'</a>' caccc6
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc7+'</a>' caccc7
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.zno+'</a>' czno
	,a.proj
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn
;
	
z_acccp06:--z_acccp06
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10) = '[1]'
	declare @t_rank nvarchar(20) = '[2]'
	declare @t_bno nvarchar(20) = [3]
	declare @t_eno nvarchar(20) = [4]
	declare @t_part nvarchar(max) = case when '#non'=[5] then '' else [5] end
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @string nvarchar(max)
	declare @n int
	--解析要計算的種類
	--zzzzz@無部門
	IF OBJECT_ID('tempdb..#part')is not null
	BEGIN
		set @cmd = 'drop table #part'
		EXECUTE sp_executesql @cmd
	END
	create table #part(
		noa nvarchar(20)
	)
	set @string = @t_part
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #part select case when @string='zzzzz' then '' else @string end
			end
			break
		end
		insert into #part select case when LEFT(@string,@n-1)='zzzzz' then '' else LEFT(@string,@n-1) end 	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	----------------------------------------------------------------------------------------------	
	declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),a.part,c.part,a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" left join #part d on a.part=d.noa"+
	" where (a.accc3 between @t_bno and @t_eno) "+
	" and a.accc3 in(select accc3 from acccs"+@t_accy+" aa left join #part ad on aa.part=ad.noa where (accc3 between @t_bno and @t_eno) and ad.noa is not null )"+ 
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	--declare @n int
	declare @m int
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	--------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare cursor_table cursor for
	select accc3,noq,accc5,rtrim(ltrim(accc6)) from @tmp where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@noq,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and noq=@noq
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and noq=@noq
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@noq,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount_accc6 int
	set @maxcount_accc6 = 16
	declare @maxcount_accc7 int
	set @maxcount_accc7 = 30

	set @noq = ''
	declare cursor_table cursor for
	select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,b.accc7,a.partno,a.part,a.zno,a.worker
	,a.dmoney,a.cmoney
	,row_number()over(order by a.accc3)
	from(
		select accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker,sum(isnull(dmoney,0)) dmoney,sum(isnull(cmoney,0)) cmoney
		from @tmp
		group by accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker) a
	outer apply (select top(1) accc7 from @tmp where accc3=a.accc3 and accc5=a.accc5  
		order by case when a.dmoney>a.cmoney and dmoney>0 then 1
					  when a.cmoney>a.dmoney and cmoney>0 then 2
					  else 3 end	
			,noq) b
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	while(@@FETCH_STATUS <> -1)
	begin	
		insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
		values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,0)
		--accc6
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6,@tmpString="",@cn2=0
		
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc6)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc6=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		--accc7
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc7)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc7=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 14
	set @endline = 4
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	select a.* 
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')'+'</a>' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc6+'</a>' caccc6
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc7+'</a>' caccc7
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.zno+'</a>' czno
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;
	
z_acccp05:--z_acccp05
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10) = '[1]'
	declare @t_rank nvarchar(20) = '[2]'
	declare @t_bno nvarchar(20) = [3]
	declare @t_eno nvarchar(20) = [4]
	declare @t_part nvarchar(max) = case when '#non'=[5] then '' else [5] end
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @string nvarchar(max)
	declare @n int
	--解析要計算的種類
	--zzzzz@無部門
	IF OBJECT_ID('tempdb..#part')is not null
	BEGIN
		set @cmd = 'drop table #part'
		EXECUTE sp_executesql @cmd
	END
	create table #part(
		noa nvarchar(20)
	)
	set @string = @t_part
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #part select case when @string='zzzzz' then '' else @string end
			end
			break
		end
		insert into #part select case when LEFT(@string,@n-1)='zzzzz' then '' else LEFT(@string,@n-1) end 	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	----------------------------------------------------------------------------------------------
	declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),a.part,c.part,a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" left join #part d on a.part=d.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and a.accc3 in(select accc3 from acccs"+@t_accy+" aa left join #part ad on aa.part=ad.noa where (accc3 between @t_bno and @t_eno) and ad.noa is not null )"+ 
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	--declare @n int
	declare @m int
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	--------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare cursor_table cursor for
	select accc3,noq,accc5,rtrim(ltrim(accc6)) from @tmp where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@noq,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and noq=@noq
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and noq=@noq
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@noq,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount_accc6 int
	set @maxcount_accc6 = 16
	declare @maxcount_accc7 int
	set @maxcount_accc7 = 30
	--declare @string nvarchar(max)
	
	declare cursor_table cursor for
	select accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker
		,row_number()over(order by accc3,noq)
	from @tmp
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1
	while(@@FETCH_STATUS <> -1)
	begin	
		insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
		values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,0)
		--accc6
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6,@tmpString="",@cn2=0
		
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc6)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc6=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		--accc7
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc7)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc7=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 14
	set @endline = 4
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	select a.* 
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')'+'</a>' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc6+'</a>' caccc6
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc7+'</a>' caccc7
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.zno+'</a>' czno
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;

z_acccp04:--z_acccp04     SQL與z_acccp02 一樣,  XLS格式不同而已
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10)
	declare @t_rank nvarchar(20)
	declare @t_bno nvarchar(20)
	declare @t_eno nvarchar(20)

	set @t_accy = '[1]'
	set @t_rank = '[2]'
	set @t_bno = [3]
	set @t_eno = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,d.acc2,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),a.part,c.part,a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" left join acc"+@t_accy+" d on a.accc5=d.acc1"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount int
	set @maxcount = 34
	declare @n int
	declare @string nvarchar(max)
	
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)

	declare cursor_table cursor for
	select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,b.accc7,a.partno,a.part,a.zno,a.worker
	,a.dmoney,a.cmoney
	,row_number()over(order by a.accc3)
	from(
		select accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker,sum(isnull(dmoney,0)) dmoney,sum(isnull(cmoney,0)) cmoney
		from @tmp
		group by accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker) a
	outer apply (select top(1) accc7 from @tmp where accc3=a.accc3 and accc5=a.accc5 order by noq desc) b
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	while(@@FETCH_STATUS <> -1)
	begin		
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		if(LEN(@string)=0)
		begin
			insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@zno,@worker,@cn1,@cn2)
		end
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount)
			begin
				if(@cn2=0)
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@tmpString,@dmoney,@cmoney,@partno,@part,@zno,@worker,@cn1,@cn2)
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,null,@tmpString,0,0,@partno,@part,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	end
	close cursor_table
	deallocate cursor_table
	----------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 12
	set @endline = 4
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare @m int
	
	declare cursor_table cursor for
	select accc3,page,nn,accc5,rtrim(ltrim(accc6)) from @tmp3 where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@page,@n,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m>0)
				begin
					update @tmp3 set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and page=@page and nn=@n
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m>0)
				begin
					update @tmp3 set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and page=@page and nn=@n
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@page,@n,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	select a.* 
	,case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;

z_acccp03:--z_acccp03     SQL與z_acccp01 一樣,  XLS格式不同而已
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10)
	declare @t_rank nvarchar(20)
	declare @t_bno nvarchar(20)
	declare @t_eno nvarchar(20)

	set @t_accy = '[1]'
	set @t_rank = '[2]'
	set @t_bno = [3]
	set @t_eno = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),a.part,c.part,a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount int
	set @maxcount = 34
	declare @n int
	declare @string nvarchar(max)
	
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	
	declare cursor_table cursor for
	select accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker
		,row_number()over(order by accc3,noq)
	from @tmp
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1
	while(@@FETCH_STATUS <> -1)
	begin		
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		if(LEN(@string)=0)
		begin
			insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
		end
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount)
			begin
				if(@cn2=0)
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@tmpString,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,null,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1
	end
	close cursor_table
	deallocate cursor_table
	----------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 12
	set @endline = 4
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare @m int
	
	declare cursor_table cursor for
	select accc3,page,nn,accc5,rtrim(ltrim(accc6)) from @tmp3 where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@page,@n,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp3 set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and page=@page and nn=@n
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp3 set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and page=@page and nn=@n
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@page,@n,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	select a.* 
	,case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;
z_acccp02:--z_acccp02
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10)
	declare @t_rank nvarchar(20)
	declare @t_bno nvarchar(20)
	declare @t_eno nvarchar(20)

	set @t_accy = '[1]'
	set @t_rank = '[2]'
	set @t_bno = [3]
	set @t_eno = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,d.acc2,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),a.part,c.part,a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" left join acc"+@t_accy+" d on a.accc5=d.acc1"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount int
	set @maxcount = 31
	declare @n int
	declare @string nvarchar(max)
	
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)

	declare cursor_table cursor for
	select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,b.accc7,a.partno,a.part,a.zno,a.worker
	,a.dmoney,a.cmoney
	,row_number()over(order by a.accc3)
	from(
		select accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker,sum(isnull(dmoney,0)) dmoney,sum(isnull(cmoney,0)) cmoney
		from @tmp
		group by accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker) a
	outer apply (select top(1) accc7 from @tmp where accc3=a.accc3 and accc5=a.accc5  
		order by case when a.dmoney>a.cmoney and dmoney>0 then 1
					  when a.cmoney>a.dmoney and cmoney>0 then 2
					  else 3 end	
			,noq) b
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	while(@@FETCH_STATUS <> -1)
	begin		
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		if(LEN(@string)=0)
		begin
			insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@zno,@worker,@cn1,@cn2)
		end
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount)
			begin
				if(@cn2=0)
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@tmpString,@dmoney,@cmoney,@partno,@part,@zno,@worker,@cn1,@cn2)
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,null,@tmpString,0,0,@partno,@part,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	end
	close cursor_table
	deallocate cursor_table
	----------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 14
	set @endline = 4
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare @m int
	
	declare cursor_table cursor for
	select accc3,page,nn,accc5,rtrim(ltrim(accc6)) from @tmp3 where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@page,@n,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m>0)
				begin
					update @tmp3 set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and page=@page and nn=@n
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m>0)
				begin
					update @tmp3 set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and page=@page and nn=@n
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@page,@n,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	select a.* 
	,case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;

z_acccp01:--z_acccp01
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10)
	declare @t_rank nvarchar(20)
	declare @t_bno nvarchar(20)
	declare @t_eno nvarchar(20)

	set @t_accy = '[1]'
	set @t_rank = '[2]'
	set @t_bno = [3]
	set @t_eno = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),a.part,c.part,a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount int
	set @maxcount = 31
	declare @n int
	declare @string nvarchar(max)
	
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	
	declare cursor_table cursor for
	select accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker
		,row_number()over(order by accc3,noq)
	from @tmp
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1
	while(@@FETCH_STATUS <> -1)
	begin		
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		if(LEN(@string)=0)
		begin
			insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
		end
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount)
			begin
				if(@cn2=0)
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@tmpString,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,null,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1
	end
	close cursor_table
	deallocate cursor_table
	----------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 14
	set @endline = 4
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare @m int
	
	declare cursor_table cursor for
	select accc3,page,nn,accc5,rtrim(ltrim(accc6)) from @tmp3 where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@page,@n,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp3 set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and page=@page and nn=@n
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp3 set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and page=@page and nn=@n
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@page,@n,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	declare @nn int
	--accc5 accc6 字太長 就縮小顯示
	declare cursor_table cursor for
	select page,nn,gno,accc5,accc6 from @tmp3
	open cursor_table
	fetch next from cursor_table
	into @page,@nn,@gno,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6

		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @string = substring(@string,2,len(@string)-1)
		end
		
		update @tmp3 set gno = case when gno='1' and len(accc5)>10 and @n>20 then '10'
		 when gno='2' and len(accc5)>10 and @n>20 then '11'
		 when gno='1' and len(accc5)>10 then '12'
		 when gno='2' and len(accc5)>10 then '13'
		 when gno='1' and @n>20 then '14'
		 when gno='2' and @n>20 then '15'
		 else gno end
		 where page=@page and nn=@nn
		
		fetch next from cursor_table
		into @page,@nn,@gno,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	select a.* 
	,case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;
----------------------------------------------------------------------------------------------------------------------------------------
--底下義橋
z_acccp_yc08:--z_acccp_yc08 ref. z_acccp08 不分部門
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10) = '[1]'
	declare @t_rank nvarchar(20) = '[2]'
	declare @t_bno nvarchar(20) = [3]
	declare @t_eno nvarchar(20) = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),'','',a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	declare @n int
	declare @m int
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	--------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare cursor_table cursor for
	select accc3,noq,accc5,rtrim(ltrim(accc6)) from @tmp where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@noq,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and noq=@noq
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and noq=@noq
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@noq,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount_accc6 int
	set @maxcount_accc6 = 16
	declare @maxcount_accc7 int
	set @maxcount_accc7 = 30
	declare @string nvarchar(max)
	
	set @noq = ''
	declare cursor_table cursor for
	select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,b.accc7,a.partno,a.part,a.zno,a.worker
	,a.dmoney,a.cmoney
	,row_number()over(order by a.accc3)
	from(
		select accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker,sum(isnull(dmoney,0)) dmoney,sum(isnull(cmoney,0)) cmoney
		from @tmp
		group by accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker) a
	outer apply (select top(1) accc7 from @tmp where accc3=a.accc3 and accc5=a.accc5  
		order by case when a.dmoney>a.cmoney and dmoney>0 then 1
					  when a.cmoney>a.dmoney and cmoney>0 then 2
					  else 3 end	
			,noq) b
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	while(@@FETCH_STATUS <> -1)
	begin	
		insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
		values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,0)
		--accc6
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6,@tmpString="",@cn2=0
		
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc6)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc6=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		--accc7
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc7)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc7=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 12
	set @endline = 4
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	select a.* 
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')'+'</a>' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc6+'</a>' caccc6
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc7+'</a>' caccc7
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.zno+'</a>' czno
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;
	
z_acccp_yc07:--z_acccp_yc07 ref. z_acccp07 不分部門
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10) = '[1]'
	declare @t_rank nvarchar(20) = '[2]'
	declare @t_bno nvarchar(20) = [3]
	declare @t_eno nvarchar(20) = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @tmp table(
		cno nvarchar(50), 
		acomp nvarchar(100), 
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.proj,isnull((select top 1 acomp from acomp where noa=a.proj),'')"+
	" ,a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,left(a.accc6,11),a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),'','',a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	insert into @tmp(cno,acomp,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	declare @n int
	declare @m int
	declare @cno nvarchar(50) 
	declare @acomp nvarchar(100) 
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	--------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare cursor_table cursor for
	select accc3,noq,accc5,rtrim(ltrim(accc6)) from @tmp where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@noq,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and noq=@noq
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and noq=@noq
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@noq,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		cno nvarchar(50), 
		acomp nvarchar(100), 
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount_accc6 int
	set @maxcount_accc6 = 20
	declare @maxcount_accc7 int
	set @maxcount_accc7 = 35
	declare @string nvarchar(max)
	
	declare cursor_table cursor for
	select cno,acomp,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker
		,row_number()over(order by accc3,noq)
	from @tmp
	open cursor_table
	fetch next from cursor_table
	into @cno,@acomp,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1
	while(@@FETCH_STATUS <> -1)
	begin	
		insert into @tmp2(cno,acomp,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
		values(@cno,@acomp,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,0)
		--accc6
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6,@tmpString="",@cn2=0
		
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc6)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc6=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(cno,acomp,accc1,accc2,accc3,accc4,accc5,accc6,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@cno,@acomp,@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		--accc7
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc7)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc7=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(cno,acomp,accc1,accc2,accc3,accc4,accc5,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@cno,@acomp,@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @cno,@acomp,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
		
		cno nvarchar(50), 
		acomp nvarchar(100), 
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 20
	set @endline = 1
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select cno,acomp,accc3,accc2,accc1 from @tmp2 group by cno,acomp,accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @cno,@acomp,@accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno,cno,acomp
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno,@cno,@acomp
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,cno,acomp,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,
			@cno,@acomp,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,cno,acomp,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@cno,@acomp,@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		--insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		--select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		--set @curline = @curline + 1
		--insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		--select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		--set @curline = @curline + 1
		--insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		--select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		--set @curline = @curline + 1
		
		fetch next from cursor_table
		into @cno,@acomp,@accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	update @tmp3 set acomp = case when LEN(acomp)=0 then (select top 1 acomp from acomp) else acomp end
	
	select a.* 
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')'+'</a>' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc6+'</a>' caccc6
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc7+'</a>' caccc7
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.zno+'</a>' czno
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;


z_acccp_rb07:--z_acccp_rb07 不分部門
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10) = '[1]'
	declare @t_rank nvarchar(20) = '[2]'
	declare @t_bno nvarchar(20) = [3]
	declare @t_eno nvarchar(20) = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		proj nvarchar(30)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),'',a.part,a.noq,b.zno,b.worker"+
	",a.proj from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,proj)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	declare @n int
	declare @m int
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	declare @proj nvarchar(max)
	--------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare cursor_table cursor for
	select accc3,noq,accc5,rtrim(ltrim(accc6)) from @tmp where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@noq,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and noq=@noq
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and noq=@noq
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@noq,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int,
		proj nvarchar(30)
	)
	declare @tmpString nvarchar(max)
	declare @maxcount_accc6 int
	set @maxcount_accc6 = 18
	declare @maxcount_accc7 int
	set @maxcount_accc7 = 26
	declare @string nvarchar(max)
	
	declare cursor_table cursor for
	select accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker
		,row_number()over(order by accc3,noq),proj
	from @tmp
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,@proj
	while(@@FETCH_STATUS <> -1)
	begin	
		insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2,proj)
		values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,0,@proj)
		--accc6
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6,@tmpString="",@cn2=0
		
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc6)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc6=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2,proj)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2,@proj)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		--accc7
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc7)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc7=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2,proj)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2,@proj)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,@proj
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		proj nvarchar(30)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 20
	set @endline = 2 
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2,proj from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2,@proj
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,proj)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@proj
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2,@proj
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker,proj)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker,@proj
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		set @curline = @curline + 1
		--insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		--select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		--set @curline = @curline + 1
		--insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		--select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		--set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	select a.* 
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+'年)'+'</a>' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc6+'</a>' caccc6
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc7+'</a>' caccc7
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.zno+'</a>' czno
	,a.proj
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn
;

z_acccp_rb08:--z_acccp_rb08 不分部門
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10) = '[1]'
	declare @t_rank nvarchar(20) = '[2]'
	declare @t_bno nvarchar(20) = [3]
	declare @t_eno nvarchar(20) = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		proj nvarchar(30)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),'',a.part,a.noq,b.zno,b.worker"+
	",a.proj from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,proj)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	declare @n int
	declare @m int
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	declare @proj nvarchar(max)
	--------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare cursor_table cursor for
	select accc3,noq,accc5,rtrim(ltrim(accc6)) from @tmp where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@noq,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and noq=@noq
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and noq=@noq
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@noq,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int,
		proj nvarchar(30)
	)
	declare @tmpString nvarchar(max)
	declare @maxcount_accc6 int
	set @maxcount_accc6 = 18
	declare @maxcount_accc7 int
	set @maxcount_accc7 = 26
	declare @string nvarchar(max)
	
	declare cursor_table cursor for
	select accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker
		,row_number()over(order by accc3,noq),proj
	from @tmp
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,@proj
	while(@@FETCH_STATUS <> -1)
	begin	
		insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2,proj)
		values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,0,@proj)
		--accc6
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6,@tmpString="",@cn2=0
		
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc6)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc6=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2,proj)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2,@proj)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		--accc7
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc7)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc7=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2,proj)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2,@proj)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,@proj
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		proj nvarchar(30)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 20
	set @endline = 2
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2,proj from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2,@proj
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,proj)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@proj
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2,@proj
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker,proj)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker,@proj
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		set @curline = @curline + 1
		--insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		--select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		--set @curline = @curline + 1
		--insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		--select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		--set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker,part,proj)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker,@part,@proj
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	select a.* 
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+'年)'+'</a>' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc6+'</a>' caccc6
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc7+'</a>' caccc7
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.zno+'</a>' czno
	,a.proj
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn
;

z_acccp_vu07:--z_acccp_vu07 ref. z_acccp07 不分部門
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10) = '[1]'
	declare @t_rank nvarchar(20) = '[2]'
	declare @t_bno nvarchar(20) = [3]
	declare @t_eno nvarchar(20) = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @tmp table(
		cno nvarchar(50), 
		acomp nvarchar(100), 
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.proj,isnull((select top 1 acomp from acomp where noa=a.proj),'')"+
	" ,a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),'','',a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	insert into @tmp(cno,acomp,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	declare @n int
	declare @m int
	declare @cno nvarchar(50) 
	declare @acomp nvarchar(100) 
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	--------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare cursor_table cursor for
	select accc3,noq,accc5,rtrim(ltrim(accc6)) from @tmp where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@noq,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and noq=@noq
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and noq=@noq
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@noq,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		cno nvarchar(50), 
		acomp nvarchar(100), 
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount_accc6 int
	set @maxcount_accc6 = 20
	declare @maxcount_accc7 int
	set @maxcount_accc7 = 35
	declare @string nvarchar(max)
	
	declare cursor_table cursor for
	select cno,acomp,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker
		,row_number()over(order by accc3,noq)
	from @tmp
	open cursor_table
	fetch next from cursor_table
	into @cno,@acomp,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1
	while(@@FETCH_STATUS <> -1)
	begin	
		insert into @tmp2(cno,acomp,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
		values(@cno,@acomp,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,0)
		--accc6
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6,@tmpString="",@cn2=0
		
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc6)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc6=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(cno,acomp,accc1,accc2,accc3,accc4,accc5,accc6,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@cno,@acomp,@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		--accc7
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc7)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc7=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(cno,acomp,accc1,accc2,accc3,accc4,accc5,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@cno,@acomp,@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @cno,@acomp,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
		
		cno nvarchar(50), 
		acomp nvarchar(100), 
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 16
	set @endline = 1
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select cno,acomp,accc3,accc2,accc1 from @tmp2 group by cno,acomp,accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @cno,@acomp,@accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno,cno,acomp
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno,@cno,@acomp
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,cno,acomp,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,
			@cno,@acomp,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,cno,acomp,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@cno,@acomp,@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		--insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		--select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		--set @curline = @curline + 1
		--insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		--select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		--set @curline = @curline + 1
		--insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		--select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		--set @curline = @curline + 1
		
		fetch next from cursor_table
		into @cno,@acomp,@accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	update @tmp3 set acomp = case when LEN(acomp)=0 then (select top 1 acomp from acomp) else acomp end
	
	select a.* 
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')'+'</a>' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc6+'</a>' caccc6
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc7+'</a>' caccc7
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.zno+'</a>' czno
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;

z_acccp_vu08:--z_acccp_vu08 ref. z_acccp08 不分部門
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @islock int

	declare @t_accy nvarchar(10) = '[1]'
	declare @t_rank nvarchar(20) = '[2]'
	declare @t_bno nvarchar(20) = [3]
	declare @t_eno nvarchar(20) = [4]
	----------------------------------------------------------------------------------------------	
	set @islock = case when cast(@t_rank as int)>=8 then 0 else 1 end --鎖定的不顯示
	----------------------------------------------------------------------------------------------	
	declare @tmp table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	set @cmd =
	" select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7"+
	" 	,isnull(a.dmoney,0),isnull(a.cmoney,0),'','',a.noq,b.zno,b.worker"+
	" from acccs"+@t_accy+" a "+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join acpart"+@t_accy+" c on a.part=c.noa"+
	" where (a.accc3 between @t_bno and @t_eno)"+
	" and (b.accc3 is not null) "+
	" and ((@islock=0) or (@islock=1 and isnull(b.lok,0)=0))"+
	""
	insert into @tmp(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20),@islock int'
	,@t_bno=@t_bno,@t_eno=@t_eno,@islock=@islock
	--------------------------------------------------------------------------------------------------
	declare @n int
	declare @m int
	declare @accc1 nvarchar(10)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float 
	declare @partno nvarchar(20)
	declare @part nvarchar(20)
	declare @noq nvarchar(20)
	declare @cn1 int
	declare @cn2 int
	declare @zno nvarchar(max)
	declare @worker nvarchar(max)
	--------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare cursor_table cursor for
	select accc3,noq,accc5,rtrim(ltrim(accc6)) from @tmp where len(isnull(accc6,''))>0
	open cursor_table
	fetch next from cursor_table
	into @accc3,@noq,@accc5,@accc6
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@accc5,4)='1112')
		begin
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,6) where accc3=@accc3 and noq=@noq
				end
			end	
			if(@accc6 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@accc6)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@accc6)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp set accc6 = SUBSTRING(@accc6,1,@m) + right(@accc6,7) where accc3=@accc3 and noq=@noq
				end
			end	
		end

		fetch next from cursor_table
		into @accc3,@noq,@accc5,@accc6
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	--摘要太長分多行
	declare @tmp2 table(
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount_accc6 int
	set @maxcount_accc6 = 16
	declare @maxcount_accc7 int
	set @maxcount_accc7 = 30
	declare @string nvarchar(max)
	
	set @noq = ''
	declare cursor_table cursor for
	select a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,b.accc7,a.partno,a.part,a.zno,a.worker
	,a.dmoney,a.cmoney
	,row_number()over(order by a.accc3)
	from(
		select accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker,sum(isnull(dmoney,0)) dmoney,sum(isnull(cmoney,0)) cmoney
		from @tmp
		group by accc1,accc2,accc3,accc4,accc5,accc6,partno,part,zno,worker) a
	outer apply (select top(1) accc7 from @tmp where accc3=a.accc3 and accc5=a.accc5  
		order by case when a.dmoney>a.cmoney and dmoney>0 then 1
					  when a.cmoney>a.dmoney and cmoney>0 then 2
					  else 3 end	
			,noq) b
	open cursor_table
	fetch next from cursor_table
	into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	while(@@FETCH_STATUS <> -1)
	begin	
		insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
		values(@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker,@cn1,0)
		--accc6
		set @accc6=REPLACE(@accc6,'  ','')
		select @n=0,@string=@accc6,@tmpString="",@cn2=0
		
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc6)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc6=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc6,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		--accc7
		set @accc7=REPLACE(@accc7,'  ','')
		select @n=0,@string=@accc7,@tmpString="",@cn2=0
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount_accc7)
			begin
				if exists(select * from @tmp2 where accc3=@accc3 and cn1=@cn1 and cn2=@cn2)
				begin
					update @tmp2 set accc7=@tmpString where accc3=@accc3 and cn1=@cn1 and cn2=@cn2
				end
				else
				begin
					insert into @tmp2(accc1,accc2,accc3,accc4,accc5,accc7,dmoney,cmoney,partno,part,noq,zno,worker,cn1,cn2)
					values(@accc1,@accc2,@accc3,@accc4,@accc5,@tmpString,0,0,@partno,@part,@noq,@zno,@worker,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@partno,@part,@zno,@worker,@dmoney,@cmoney,@cn1
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zno nvarchar(max),
		worker nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 12
	set @endline = 4
	
	declare @gno nvarchar(10)
	
	set @curline = 0
	declare cursor_table cursor for
	select accc3,accc2,accc1 from @tmp2 group by accc3,accc2,accc1
	open cursor_table
	fetch next from cursor_table
	into @accc3,@accc2,@accc1
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0,@zno='',@worker=''
		select @zno=zno,@worker=worker from @tmp2 where accc3=@accc3
		
		declare cursor_table2 cursor for
		select accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,cn1,cn2 from @tmp2 where accc3=@accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(@cn2) from @tmp2 where accc3=@accc3 and noq=@noq
			
			if(@cn2=0)
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '2' else '1' end --最後一行格線有所不同
			end
			else
			begin
				set @gno = case when (@curline+1)%@rowline=0 then '4' else '3' end --最後一行格線有所不同
			end			
			insert into @tmp3(page,nn,gno
				,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zno,worker)
			select @page,@curline%@rowline,@gno		
				,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@zno,@worker
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno,accc1,accc2,accc3,zno,worker)
			select @page,@curline%@rowline,case when (@curline+1)%@rowline=0 then '9' else '0' end,@accc1,@accc2,@accc3,@zno,@worker
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--合計
		select @dmoney=0,@cmoney=0
		select @dmoney=SUM(dmoney),@cmoney=SUM(cmoney) from @tmp2 where accc3=@accc3

		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'5',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'6',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'7',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		insert into @tmp3(page,nn,gno,accc1,accc2,accc3,dmoney,cmoney,zno,worker)
		select @page,@curline%@rowline,'8',@accc1,@accc2,@accc3,@dmoney,@cmoney,@zno,@worker
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @accc3,@accc2,@accc1
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------------------------------------------------------
	select a.* 
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +case a.accc1 when '1' then '現金收入傳票' when '2' then '現金支出傳票' when '3' then '轉帳傳票' end +'('+LEFT(@t_accy,3)+')'+'</a>' titela 
	,a.page+1 pp1
	,b.page+1 pp2
	,case when isnull(a.dmoney,0)=0 and a.accc4='借' then '0' when isnull(a.dmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.dmoney),1)),4,17)) end dd
	,case when isnull(a.cmoney,0)=0 and a.accc4!='借' then '0' when isnull(a.cmoney,0)=0 then '' else reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,a.cmoney),1)),4,17)) end cc
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc6+'</a>' caccc6
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.accc7+'</a>' caccc7
	,'<a style="font-family: Times New Roman,標楷體, serif'+CHAR(59)+'">' +a.zno+'</a>' czno
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where accc3=a.accc3) b
	order by a.accc3,a.page,a.nn;	