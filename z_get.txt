z_get1:--z_get1
declare @pagecount int
declare @t_accy nvarchar(20)
declare @t_bnoa nvarchar(20)
declare @t_enoa nvarchar(20)
set @pageCount = 10
set @t_accy = '[3]'
set @t_bnoa = case when '#non' = [4] then ' ' else [4] end
set @t_enoa = case when '#non' = [5] then CHAR(255) else [5] end
declare @tmpa table(
		gno nvarchar(1),
		noa nvarchar(30),
		datea nvarchar(10),
		stationno nvarchar(20),
		stations nvarchar(50),
		storeno nvarchar(20),
		stores nvarchar(50),
		custno nvarchar(20),
		comp nvarchar(50),
		typea nvarchar(10),
		tel nvarchar(20),
		fax nvarchar(20),
		addr nvarchar(90),
		trantype nvarchar(20),
		uno nvarchar(20),
		pno nvarchar(20),
		product nvarchar(50),
		unit nvarchar(20),
		mount float,
		atype nvarchar(20),
		memo nvarchar(200),
		cardeal nvarchar(50),
		carno nvarchar(20),
		tmemo nvarchar(200),
		totmount float
)
insert into @tmpa
select '0' gno,a.noa,a.datea,a.stationno,a.station,a.storeno,a.store,a.custno,a.comp,a.typea,c.tel,c.fax,c.addr_comp,a.trantype,b.uno,b.productno,b.product
,b.unit,b.mount,b.typea,b.memo,a.cardeal,a.carno,a.memo,0
from view_get a
left join view_gets b on a.noa = b.noa
left join cust c on a.custno = c.noa 
where a.noa between @t_bnoa and @t_enoa

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		datea nvarchar(10),
		stationno nvarchar(20),
		stations nvarchar(50),
		storeno nvarchar(20),
		stores nvarchar(50),
		custno nvarchar(20),
		comp nvarchar(50),
		typea nvarchar(10),
		tel nvarchar(20),
		fax nvarchar(20),
		addr nvarchar(90),
		trantype nvarchar(20),
		uno nvarchar(20),
		pno nvarchar(20),
		product nvarchar(50),
		unit nvarchar(20),
		mount float,
		atype nvarchar(20),
		memo nvarchar(200),
		cardeal nvarchar(50),
		carno nvarchar(20),
		tmemo nvarchar(200),
		totmount float,
		recno int,
		currecno int,
		curpage int,
		totpage int
)
insert into @tmp
select a.*,ROW_NUMBER()over(order by gno) recno,0 currecno,0 curpage,0 totpage 
				 from( 
				select *
				from @tmpa a
				 )a
	declare @noa nvarchar(30)
	declare @count int
	declare @t_count int
	declare @recno int
	declare @mount float
	declare @weightb float
	declare @currecno int
	declare @curpage int
	declare @totpage int
	declare @t_noa nvarchar(30)
	declare @t_currecno float
	set @t_currecno = 0
	
	declare cursor_table cursor for
	select noa,min(recno) from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@recno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set currecno = recno - @recno +1 where noa=@noa
		fetch next from cursor_table
		into @noa,@recno
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------
	declare @count1 int
	declare @count2 int
	declare cursor_table cursor for
	select noa,sum(mount),count(*) count1,(count(*)/@pageCount+1)*@pageCount count2 from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@mount,@count1,@count2
	while(@@FETCH_STATUS <> -1)
	begin
		while(@count1<@count2) and not(@count1 % @pagecount = 0)
		begin
			insert into @tmp (gno,noa,totmount,currecno)VALUES(0,@noa,@mount,@count1+1)
			set @count1=@count1+1
		end
		fetch next from cursor_table
		into @noa,@mount,@count1,@count2
	end
	close cursor_table
	deallocate cursor_table
	
	---------------------------------------------------
	declare cursor_table cursor for
	select noa,max(currecno) from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@currecno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set totpage = (@currecno-@currecno%@pagecount)/@pagecount where noa=@noa
		fetch next from cursor_table
		into @noa,@currecno
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select noa,recno,currecno from @tmp
	open cursor_table
	fetch next from cursor_table
	into @noa,@recno,@currecno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set curpage = FLOOR((@currecno-1)/@pagecount)+1 where noa=@noa and recno=@recno
		fetch next from cursor_table
		into @noa,@recno,@currecno
	end
		close cursor_table
	deallocate cursor_table

insert @tmp (gno,noa,mount)
select '1',noa,SUM(mount) from @tmp group by noa

select gno,noa,datea,custno,comp,typea,tel,fax,addr,trantype,uno,pno,product,unit,storeno,stores,stationno,stations,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
atype,memo,cardeal,carno,tmemo,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,totmount),1)),4,12)) totmount
,CONVERT(nvarchar(5),curpage)+'/'+CONVERT(nvarchar(5),totpage) page 
from @tmp 
order by noa,gno,datea desc;
---------------------------------------------------------------------------------------------------------
z_get2:--z_get2
--z_get2
declare @t_accy nvarchar(20)
declare @t_itype nvarchar(10)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bdime decimal(7,3)
declare @t_edime decimal(7,3)
set @t_accy = '[3]'
set @t_itype = case when '#non' = [6] then '' when '全部'=[6] then '' else [6] end
set @t_bdate = case when '#non' = [7] then '' else [7] end
set @t_edate = case when '#non' = [8] then CHAR(255) else [8] end
set @t_bdime = case when '#non' = [9] then 0 else [9] end
set @t_edime = case when '#non' = [10] then 999.999 else [10] end
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(30),
		noq nvarchar(20),
		typea nvarchar(20),
		datea nvarchar(10),
		comp nvarchar(50),
		uno nvarchar(20),
		pno nvarchar(20),
		product nvarchar(90),
		unit nvarchar(20),
		mount float,
		atype nvarchar(20),
		memo nvarchar(200)
)
insert into @tmp
select '0' gno,a.noa,b.noq,a.typea,a.datea,a.comp,b.uno,b.productno,b.product,b.unit,
b.mount,b.typea,b.memo
from view_get a
left join  view_gets b on a.noa = b.noa
where  (LEN(@t_itype)= 0 or @t_itype = a.typea) and
(a.datea between @t_bdate and @t_edate ) and
(b.dime between @t_bdime and @t_edime)

insert into @tmp
select '1' gno,'','','','','','','','','',sum(mount),'',''
from @tmp

select gno,noa,noq,typea,datea,comp,uno,pno,product,unit,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
atype,memo
from @tmp;
------------------------------------------------------------------------------------------------
z_getyd3:--z_getyd3
--z_getydst3
declare @pagecount int
declare @t_tel nvarchar(20)
declare @t_addr nvarchar(50)
declare @t_accy nvarchar(20)
declare @t_bnoa nvarchar(20)
declare @t_enoa nvarchar(20)
set @pageCount = 4
set @t_tel ='[1]'
set @t_addr ='[2]'
set @t_accy = '[3]'
set @t_bnoa = case when '#non' = [4] then ' ' else [4] end
set @t_enoa = case when '#non' = [5] then CHAR(255) else [5] end
declare @tmpa table(
		gno nvarchar(1),
		noa nvarchar(20),
		custno nvarchar(20),
		comp nvarchar(50),
		datea nvarchar(20),
		tel nvarchar(20),
		addr nvarchar(50),
		serial nvarchar(20),
		uno nvarchar(20),
		pno nvarchar(20),
		product nvarchar(50),
		mount int,
		unit nvarchar(20),
		memo nvarchar(200),
		carno nvarchar(20),
		trantype nvarchar(20),
		atype nvarchar(20),
		tmount int
)
insert into @tmpa
select '0' gno,a.noa,a.custno,a.comp,a.datea,c.tel,c.addr_fact,c.serial,b.uno,b.productno,b.product,
b.mount,b.unit,b.memo,a.carno,a.trantype,b.typea,0
from view_get a
left join view_gets b on a.noa = b.noa
left join cust c on a.custno = c.noa
where (a.noa between @t_bnoa and @t_enoa)

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(20),
		custno nvarchar(20),
		comp nvarchar(50),
		datea nvarchar(20),
		tel nvarchar(20),
		addr nvarchar(50),
		serial nvarchar(20),
		uno nvarchar(20),
		pno nvarchar(20),
		product nvarchar(50),
		mount int,
		unit nvarchar(20),
		memo nvarchar(200),
		carno nvarchar(20),
		trantype nvarchar(20),
		atype nvarchar(20),
		tmount int,
		recno int,
		currecno int,
		curpage int,
		totpage int
)
insert into @tmp
select a.*,ROW_NUMBER()over(order by gno) recno,0 currecno,0 curpage,0 totpage 
				 from( 
				select  gno,noa,custno,comp,datea,tel,addr,serial,uno,pno,product,
				mount,unit,memo,carno,trantype,atype,tmount
				from @tmpa a
				 )a
	declare @noa nvarchar(30)
	declare @trantype nvarchar(20)
	declare @carno nvarchar(20)
	declare @count int
	declare @t_count int
	declare @recno int
	declare @mount float
	declare @currecno int
	declare @curpage int
	declare @totpage int
	declare @t_noa nvarchar(30)
	declare @t_currecno float
	set @t_currecno = 0
	
	declare cursor_table cursor for
	select noa,min(recno) from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@recno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set currecno = recno - @recno +1 where noa=@noa
		fetch next from cursor_table
		into @noa,@recno
	end
	close cursor_table
	deallocate cursor_table
	--------------------------------------------------
	declare @count1 int
	declare @count2 int
	declare cursor_table cursor for
	select noa,sum(mount),max(trantype),max(carno),count(*) count1,(count(*)/@pageCount+1)*@pageCount count2 from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@mount,@trantype,@carno,@count1,@count2
	while(@@FETCH_STATUS <> -1)
	begin
		while not(@count1 % @pagecount = 0) and (@count1<@count2) 
		begin
			insert into @tmp (gno,noa,trantype,carno,tmount,currecno)VALUES(0,@noa,@trantype,@carno,@mount,@count1+1)
			set @count1=@count1+1
		end
		fetch next from cursor_table
		into @noa,@mount,@trantype,@carno,@count1,@count2
		update @tmp set  tmount = @mount where noa = @noa
	end
	close cursor_table
	deallocate cursor_table
	
	---------------------------------------------------
	declare cursor_table cursor for
	select noa,max(currecno) from @tmp group by noa
	open cursor_table
	fetch next from cursor_table
	into @noa,@currecno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set totpage = (@currecno-@currecno%@pagecount)/@pagecount where noa=@noa
		fetch next from cursor_table
		into @noa,@currecno
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select noa,recno,currecno from @tmp
	open cursor_table
	fetch next from cursor_table
	into @noa,@recno,@currecno
	while(@@FETCH_STATUS <> -1)
	begin
		update @tmp set curpage = FLOOR((@currecno-1)/@pagecount)+1 where noa=@noa and recno=@recno
		fetch next from cursor_table
		into @noa,@recno,@currecno
	end
		close cursor_table
	deallocate cursor_table
select gno,noa,custno,comp,datea,tel,addr,serial,uno,pno,product,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,unit,
memo,carno,trantype,atype,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tmount),1)),4,12)) tmount,CONVERT(nvarchar(5),curpage)+'/'+CONVERT(nvarchar(5),totpage) page 
from @tmp 
order by noa,currecno;
--------------------------------------------------------------------------------------------------------------------
z_get3:--z_get3
declare @t_accy nvarchar(20)
declare @t_typea nvarchar(20)
--declare @t_btypea nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_accy = '[3]'
set @t_typea = case when '#non' = [6] then '' when '全部'=[6] then '' else [6] end
--set @t_btypea = case when '#non' = [3] then '' when '全部'=[3] then '' else [3] end
set @t_bdate = case when '#non' = [7] then '' else [7] end
set @t_edate = case when '#non' = [8] then CHAR(255) else [8] end

declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(20),
	noq nvarchar(20),
	storeno nvarchar(50),
	stores nvarchar(100),
	datea nvarchar(10),
	atype nvarchar(10),
	comp nvarchar(50),
	uno nvarchar(20),
	pno nvarchar(20),
	product nvarchar(50),
	unit nvarchar(20),	
	mount float,
	memo nvarchar(200),
	qhref nvarchar(max)
)
insert into @tmp
	select
		'0' gno,a.noa,b.noq,a.storeno,a.store,a.datea,b.typea,(case when c.nick!='' then c.nick else left(a.comp,4) end)
		,b.uno,b.productno,b.product,b.unit,b.mount,b.memo,'get'+a.accy
	from view_get a
	left join view_gets b on a.noa = b.noa
	left join cust c on a.custno=c.noa
	where -- (LEN(@t_btypea) = 0 or @t_btypea = a.typea) and
	(LEN(@t_typea) = 0 or @t_typea = a.typea) and
	(isnull(a.datea,'') between @t_bdate and @t_edate)

insert into @tmp
	select '1' gno,'','',storeno,MAX(stores),'','','','','','','',sum(mount),'','get'
	from @tmp group by storeno

insert into @tmp
	select '2' gno,'','','ZZZZZZ','','','','','','','','',sum(mount),'','getst'
	from @tmp where gno='1'
update @tmp set qhref = substring(qhref,0,len(qhref)-2)+'?left(noa,'+cast(len(noa) as nvarchar)+')=$noa?'+substring(qhref,len(qhref)-2,len(qhref))
select
	gno,noa,noq,storeno,stores,datea,atype,comp,uno,pno,product,unit,memo	
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,qhref
from @tmp order by storeno,gno,datea;
