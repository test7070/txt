acshare2accc:--acshare2accc
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_name nvarchar(max) = [1]
	declare @t_noa nvarchar(max) = [2]
	-------------------------------------------------------------------------------
	declare @t_accy nvarchar(10) = ''
	declare @t_dc nvarchar(20) = ''
	declare @t_accc2 nvarchar(20) = ''
	declare @t_accno2 nvarchar(20) = ''
	select @t_accy=accy,@t_dc=dc,@t_accc2=RIGHT(datea,5),@t_accno2=accno2 from acshare where noa=@t_noa
	
	IF OBJECT_ID('tempdb..#acshare2accc')is not null
	BEGIN
		drop table #acshare2accc
	END
	create table #acshare2accc (
		sel int identity(1,1)
		,accc1 nvarchar(10)
		,accc2 nvarchar(10)
		,accc3 nvarchar(20)
		,worker nvarchar(20)
		,zno nvarchar(max)
		,cmoney float
		,dmoney float
	)
	IF OBJECT_ID('tempdb..#acshare2acccs')is not null
	BEGIN
		drop table #acshare2acccs
	END
	create table #acshare2acccs(
		sel int identity(1,1)
		,accc1 nvarchar(10)
		,accc2 nvarchar(10)
		,accc3 nvarchar(20)
		,accc4 nvarchar(20)
		,accc5 nvarchar(20)
		,accc6 nvarchar(50)
		,accc7 nvarchar(max)
		,accc8 float
		,zno nvarchar(max)
		,noq nvarchar(10)
		,part nvarchar(20)
		,dc nvarchar(10)
		,cmoney float
		,dmoney float
		,proj nvarchar(20)
	)
	---------------------------------------------------------------------------------
	declare @string nvarchar(max)='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
	declare @n int
	declare @maxnoa nvarchar(20) = @t_accno2
	if len(@maxnoa)=0
	begin
		select top 1 @maxnoa=accc3 from accc105_1 where accc3 like replace(@t_accc2,'/','')+'[0-9,A-Z][0-9][0-9]' order by accc3 desc
		if len(@maxnoa)=0
		begin
			set @maxnoa = replace(@t_accc2,'/','')+'001'
		end
		else
		begin
			set @n = (charindex(left(RIGHT(@maxnoa,3),1),@string)-1)*10+CAST(RIGHT(@maxnoa,3) as int)+1
			set @maxnoa = replace(@t_accc2,'/','') + SUBSTRING(@string,floor(@n/100)+1,1)+CAST(@n%100 as nvarchar)
		end
	end
	-------------------------------------------------------------------------------------
	insert into #acshare2acccs(noq,dc,accc1,accc2,accc3,accc4,accc5,accc6,accc7,accc8,dmoney,cmoney,zno)
	select '000','3',dc
		,@t_accc2,@maxnoa,case when @t_dc='1' then '借' else '貸' end
		,acc1,acc2,'傳票費用分攤：'+accno,[money]
		,case when @t_dc='1' then [money] else 0 end
		,case when @t_dc='1' then 0 else [money] end
		,@t_noa+'傳票分攤'
	from acshare
	where noa=@t_noa
	
	insert into #acshare2acccs(noq,dc,accc1,accc2,accc3,accc4,accc5,accc6,accc7,accc8,dmoney,cmoney,zno,part,proj)
	select noq,'3',@t_dc
		,@t_accc2,@maxnoa,case when @t_dc='1' then '貸' else '借' end
		,acc1,acc2,memo,[money]
		,case when @t_dc='1' then 0 else [money] end
		,case when @t_dc='1' then [money] else 0 end
		,@t_noa+'傳票分攤'
		,part,proj
	from acshares
	where noa=@t_noa
	-------------------------------------------------------------------------------------
	insert into #acshare2accc(accc1,accc2,accc3,worker,zno,dmoney,cmoney)
	select '3',@t_accc2,@maxnoa,'',@t_noa+'傳票分攤',SUM(ISNULL(dmoney,0)),SUM(ISNULL(cmoney,0))
	from #acshare2acccs
	--------------------------------------------------------------------------------------
	DECLARE @chk tinyint = 0
	Begin Transaction [Trans_Name]
	
	begin try
		set @cmd=
		"delete accc"+@t_accy+"_1 where accc3=@maxnoa
		delete acccs"+@t_accy+"_1 where accc3=@maxnoa
		insert into accc"+@t_accy+"_1(accc1,accc2,accc3,worker,zno,cmoney,dmoney)
		select accc1,accc2,accc3,worker,zno,cmoney,dmoney
		from #acshare2accc
		insert into acccs"+@t_accy+"_1(accc1,accc2,accc3,accc4,accc5,accc6,accc7,accc8,zno,noq,part,dc,cmoney,dmoney,proj)
		select accc1,accc2,accc3,accc4,accc5,accc6,accc7,accc8,zno,noq,part,dc,cmoney,dmoney,proj from #acshare2acccs"
		execute sp_executesql @cmd,N'@maxnoa nvarchar(20)',@maxnoa=@maxnoa
		IF @@Error <> 0 BEGIN SET @chk = 1 END 
		
		update acshare set accno2=@maxnoa where noa=@t_noa
		
		insert into drun(datea,timea,usera,[action],noa,tablea,accno,title,memo)
		select left(CONVERT(nvarchar,getdate(),111),10) ,left(CONVERT(nvarchar,getdate(),108),5)
			,'','Insert',isnull(@t_noa,''),'acshare',@maxnoa,'傳票費用分攤',@t_accy
		IF @@Error <> 0 BEGIN SET @chk = 1 END
	end try
	begin catch
		Rollback Transaction [Trans_Name] -- 復原所有操作所造成的變更
		select 0 [status], ERROR_MESSAGE() msg
		return
	end catch
	
	IF @chk <> 0 BEGIN -- 若是新增資料發生錯誤
		Rollback Transaction [Trans_Name] -- 復原所有操作所造成的變更
		select 0 [status],'錯誤' msg
		return
	END
	ELSE BEGIN
		Commit Transaction [Trans_Name] -- 提交所有操作所造成的變更
	END
	select 1 [status],@maxnoa msg;
	
	