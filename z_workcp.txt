z_workcp1:--z_workcp1
declare @t_noa nvarchar(50)
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)
declare @t_merger nvarchar(30)

set @t_noa = case when '#non' = [2] then '' else [2] end
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_merger = case when '#non' = [7] then '' else [7] end

------------報表設定<<Start>>------------
declare @pageline int = case when len(@t_merger)>0 then 35 else 19 end--每頁幾行
------------報表設定<<End>>------------
declare @tmp table(
	gno nvarchar(10),
	idno int identity(0,1),
	pageno int,
	noa nvarchar(30),
	workno nvarchar(30),
	tggno nvarchar(30), 
	tggs nvarchar(90), 
	storeno nvarchar(30), 
	stores nvarchar(90), 
	productno nvarchar(30), 
	products nvarchar(90), 
	unit nvarchar(12),
	memo nvarchar(max) ,
	wk_mount float,
	wk_gmount float,
	bmount float,
	wk_emount float
)
insert into @tmp
	select
		'0',0 pageno,a.noa,a.workno,b.tggno,b.tgg,b.storeno,b.store,a.productno,a.product,a.unit,a.memo,
		isnull(d.mount,0) wk_mount,(isnull(d.gmount,0)-isnull(a.mount,0)) wk_gmount,a.mount,isnull(d.mount,0)-isnull(d.gmount,0) wk_emount
	from view_workcs a
	left join view_workc b on a.noa = b.noa
	left join view_work c on a.workno = c.noa
	outer apply(select top 1 mount,gmount from view_works where noa=a.workno and productno=a.productno) d
	where (len(@t_noa)=0 or a.noa=@t_noa) and (b.tggno between @t_btggno and @t_etggno)
	order by a.noa,a.productno 
------------更新頁數<<Start>>------------
declare @idno int
declare @pageno int
declare @recCount int = 1
declare @pageno_int int = 0
declare @tggno nvarchar(max)
declare @lasttggno nvarchar(max) = ''
declare @storeno nvarchar(max)
declare @laststoreno nvarchar(max) = ''
declare @nextidno int

declare cursor_table cursor for
	select
		a.idno,a.tggno,a.storeno
	from @tmp a order by a.tggno,a.storeno
open cursor_table
fetch next from cursor_table
into @idno,@tggno,@storeno
while(@@FETCH_STATUS <> -1)
begin
	if((@recCount > @pageline) or (@tggno != @lasttggno) or (@storeno != @laststoreno))
	begin
		set @recCount = 1
		set @pageno_int = @pageno_int+1
	end
	if(@recCount = @pageline)
	begin
		set @nextidno = @idno+1
	end
	update @tmp set pageno=@pageno_int where idno=@idno
	set @lasttggno = @tggno
	set @laststoreno = @storeno
	set @recCount = @recCount+1
	fetch next from cursor_table
	into @idno,@tggno,@storeno
end
close cursor_table
deallocate cursor_table
------------更新頁數<<End>>-------------
------------插入表頭及表尾<<Start>>-------------
if(len(@t_merger)=0) -----1,2,5
begin
	insert into @tmp(gno,pageno,tggno,tggs,storeno,stores)
		select
			'1',pageno,tggno,tggs,storeno,stores
		from @tmp a
		where (gno='0')
		group by pageno,tggno,tggs,storeno,stores
	insert into @tmp(gno,pageno,tggno,tggs,storeno,stores)
		select
			'5',pageno,tggno,tggs,storeno,stores
		from @tmp a
		where (gno='0')
		group by pageno,tggno,tggs,storeno,stores
	update @tmp set gno='2' where gno='0'
end
else -----3,4,6
begin
	insert into @tmp(gno,pageno,tggno,tggs,storeno,stores)
		select
			'3',pageno,tggno,tggs,storeno,stores
		from @tmp a
		where (gno='0')
		group by pageno,tggno,tggs,storeno,stores
	insert into @tmp(gno,pageno,tggno,tggs,storeno,stores)
		select
			'6',pageno,tggno,tggs,storeno,stores
		from @tmp a
		where (gno='0')
		group by pageno,tggno,tggs,storeno,stores
	insert into @tmp(gno,pageno,tggno,storeno,productno,products,unit,wk_mount,wk_gmount,bmount,wk_emount)
		select
			'4',pageno,tggno,storeno,productno,products,unit,sum(wk_mount),sum(wk_gmount),sum(bmount),sum(wk_emount)
		from @tmp where gno='0'
		group by pageno,tggno,storeno,productno,products,unit
	delete @tmp where gno='0'
end
------------插入表頭及表尾<<End>>-------------
select 
	*,Convert(varchar(10),getdate(),111) wtoday
from @tmp a
order by a.pageno,tggno,storeno,gno;
--******************************************************************************************************
z_workcp2:--z_workcp2
declare @t_noa nvarchar(50)
declare @t_btggno nvarchar(20)
declare @t_etggno nvarchar(20)

set @t_noa = case when '#non' = [2] then '' else [2] end
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end

declare @tmp table( 
gno nvarchar(1), 
tggno nvarchar(30), 
tggs nvarchar(90), 
addrs_comp nvarchar(max), 
addrs_fact nvarchar(max), 
addrs_invo nvarchar(max), 
tel nvarchar(50), 
fax nvarchar(50), 
procesno nvarchar(30), 
process nvarchar(30), 
bproductno nvarchar(30), 
bproducts nvarchar(90), 
bcuadate nvarchar(10), 
buindate nvarchar(10), 
bmount float, 
bunit nvarchar(12), 
bprice float, 
btotal float, 
aworkno nvarchar(60), 
aproductno nvarchar(30), 
aproducts nvarchar(90), 
acuadate nvarchar(10), 
amount float, 
aunit nvarchar(12) 
) 
insert into @tmp (gno,tggno,tggs,addrs_comp,addrs_fact,addrs_invo,tel,fax,aworkno) 
select '0',wc.tggno,tgg.comp,tgg.addr_comp,tgg.addr_fact,tgg.addr_invo,tgg.tel,tgg.fax,''
from view_workc wc left join view_work wa on wc.workno=wa.noa 
left join tgg on wc.tggno=tgg.noa 
where (len(@t_noa)=0 or wc.noa=@t_noa) and wc.tggno between @t_btggno and @t_etggno 
group by wc.tggno,tgg.comp,tgg.addr_comp,tgg.addr_fact,tgg.addr_invo,tgg.tel,tgg.fax 

insert into @tmp 
select '1',wc.tggno,tgg.comp,tgg.addr_comp,tgg.addr_fact,tgg.addr_invo,tgg.tel,tgg.fax, 
wa.processno,wa.process,wa.productno,wa.product,wa.cuadate,wa.uindate,wa.mount,wa.unit,wa.price,wa.mount*wa.price total 
,wc.workno,'','','','','' 
from view_workcs wc left join view_work wa on wc.workno=wa.noa 
left join tgg on wc.tggno=tgg.noa 
where (len(@t_noa)=0 or wc.noa=@t_noa) and wc.tggno between @t_btggno and @t_etggno 
group by wc.tggno,tgg.comp,tgg.addr_comp,tgg.addr_fact,tgg.addr_invo,tgg.tel,tgg.fax,wa.processno,wa.process,wa.productno,wa.product,wa.cuadate,wa.uindate,wa.mount,wa.unit,wa.price 
,wc.workno
insert into @tmp 
select '2',wc.tggno,tgg.comp,tgg.addr_comp,tgg.addr_fact,tgg.addr_invo,tgg.tel,tgg.fax, 
wa.processno,wa.process,wa.productno,wa.product,wa.cuadate,wa.uindate,wa.mount,wa.unit,wa.price,wa.mount*wa.price total 
,wc.workno,wc.productno,wc.product,wc.datea,wc.mount,wc.unit 
from view_workcs wc left join view_work wa on wc.workno=wa.noa 
left join tgg on wc.tggno=tgg.noa 
where (len(@t_noa)=0 or wc.noa=@t_noa) and wc.tggno between @t_btggno and @t_etggno 

insert into @tmp (gno,tggno,aworkno) 
select '3',wc.tggno,'ZZZZZZZZZ'
from view_workcs wc left join view_work wa on wc.workno=wa.noa 
left join tgg on wc.tggno=tgg.noa 
where (len(@t_noa)=0 or wc.noa=@t_noa) and wc.tggno between @t_btggno and @t_etggno 
group by wc.tggno 

select * from @tmp order by tggno,aworkno,gno,procesno,process;
-----------------------------------------------------------------------------------------------------------------------------------------------
z_workcp3:--z_workcp3 ref z_workap2
declare @t_xbdate nvarchar(10)
declare @t_xedate nvarchar(10)
declare @t_btggno nvarchar(10)
declare @t_etggno nvarchar(10)
declare @t_bseno nvarchar(10)
declare @t_eseno nvarchar(10)
declare @t_bpno nvarchar(10)
declare @t_epno nvarchar(10)

set @t_xbdate = case when '#non' = [3] then '' else [3] end
set @t_xedate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bseno = case when '#non' = [8] then '' else [8] end
set @t_eseno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bpno = case when '#non' = [10] then '' else [10] end
set @t_epno = case when '#non' = [11] then CHAR(255) else [11] end

declare @t_stkdate nvarchar(30) --倉庫運算日期
set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)

declare @tmpa table(
	pno nvarchar(50),
	product nvarchar(200),
	tggno nvarchar(50),
	tgg nvarchar(100),
	mount float,
	gmount float,
	emount float,
	stktmount float,
	diffmount float
)

declare @tmp table(
	gno nvarchar(2),
	pno nvarchar(50),
	product nvarchar(200),
	tggno nvarchar(50),
	tgg nvarchar(100),
	mount float,
	gmount float,
	emount float,
	stktmount float,
	diffmount float,
	storeno nvarchar(50),
	store nvarchar(100),
	stkmount float
)

insert @tmpa (pno,product,tggno,tgg,mount,gmount,emount,stktmount)
select b.productno,MAX(b.product),a.tggno,MAX(a.comp)
,round(SUM(b.mount),2),round(SUM(b.gmount),2) mount,round(SUM(b.mount-b.gmount),2) mount
,(select SUM(mount) mount from stkucc(@t_stkdate,'','') where productno=b.productno and storeno between @t_bseno and @t_eseno)stktmount
from view_work a left join view_works b on a.noa=b.noa 
where a.enda!='1' and a.tggno!=''
and (a.cuadate between @t_xbdate and @t_xedate)
and (a.tggno between @t_btggno and @t_etggno)
and (b.productno between @t_bpno and @t_epno)
group by b.productno,a.tggno
order by b.productno,a.tggno

update @tmpa set diffmount=-1*(stktmount-emount)
update @tmpa set diffmount=0 where diffmount<0

insert @tmp
select '0',a.pno,a.product,a.tggno,a.tgg,a.mount,a.gmount,a.emount,a.stktmount,a.diffmount,b.storeno,b.store,b.mount
from @tmpa a left join (select * from stkucc(@t_stkdate,'','') where mount!=0 and storeno between @t_bseno and @t_eseno) b 
on a.pno=b.productno 
order by a.pno,a.tggno,b.storeno

update @tmp set store='(無)' where store is null or store=''

select gno,pno,product,tggno,tgg,storeno,store
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) mount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gmount),1)),0,30)) gmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,emount),1)),0,30)) emount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stktmount),1)),0,30)) stktmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,diffmount),1)),0,30)) diffmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stkmount),1)),0,30)) stkmount
from @tmp order by gno,tggno,pno;
--********************************************************************************
z_workcp4:--z_workcp4 ref z_workap3
declare @t_xbdate nvarchar(10)
declare @t_xedate nvarchar(10)
declare @t_btggno nvarchar(10)
declare @t_etggno nvarchar(10)
declare @t_bseno nvarchar(10)
declare @t_eseno nvarchar(10)
declare @t_bpno nvarchar(10)
declare @t_epno nvarchar(10)

set @t_xbdate = case when '#non' = [3] then '' else [3] end
set @t_xedate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bseno = case when '#non' = [8] then '' else [8] end
set @t_eseno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bpno = case when '#non' = [10] then '' else [10] end
set @t_epno = case when '#non' = [11] then CHAR(255) else [11] end

declare @t_stkdate nvarchar(30) --倉庫運算日期
set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)
--****************************************************************************
declare @tmp table(
	gno nvarchar(2),
	pno nvarchar(50),
	product nvarchar(200),
	tggno nvarchar(50),
	tgg nvarchar(100),
	workno nvarchar(100),
	mount float,
	gmount float,
	emount float,
	stktmount float,
	diffmount float,
	storeno nvarchar(50),
	store nvarchar(100),
	stkmount float
)

insert @tmp (gno,pno,product,tggno,tgg,workno,mount,gmount,emount)
select '0',b.productno,b.product,a.tggno,a.comp,a.noa
,round(b.mount,2)mount,round(b.gmount,2)mount,round(b.mount-b.gmount,2)mount
from view_work a left join view_works b on a.noa=b.noa 
where a.enda!='1' and a.tggno!=''
and (a.cuadate between @t_xbdate and @t_xedate)
and (a.tggno between @t_btggno and @t_etggno)
and (b.productno between @t_bpno and @t_epno)
and round(b.mount-b.gmount,2)>0
order by a.tggno,b.productno

insert @tmp (gno,tggno,tgg,pno,product,mount,gmount,emount,stktmount)
select '1',tggno,MAX(tgg),pno,MAX(product),SUM(mount),SUM(gmount),SUM(emount)
,(select SUM(mount) from stkucc(@t_stkdate,'','') where productno=a.pno and storeno between @t_bseno and @t_eseno) 
from @tmp a group by tggno,pno

update @tmp set diffmount=-1*(stktmount-emount) where gno='1'
update @tmp set diffmount=0 where diffmount<0 and gno='1'

insert @tmp (gno,tggno,tgg,pno,product) 
select '2',tggno,MAX(tgg),pno,MAX(product) from @tmp a group by tggno,pno

insert @tmp (gno,tggno,tgg,pno,product,storeno,store,stkmount) 
select '3',tggno,tgg,a.pno,a.product,b.storeno,b.store,b.mount from (select * from @tmp where gno='2')a 
left join (select * from stkucc(@t_stkdate,'','') where mount!=0 and storeno between @t_bseno and @t_eseno) b 
on a.pno=b.productno 

insert @tmp (gno,tggno,tgg,pno,product) 
select '4',tggno,MAX(tgg),pno,MAX(product)from @tmp a group by tggno,pno 

--insert @tmp (gno,tggno,tgg,pno,product) 
--select '4',tggno,MAX(tgg),CHAR(255),CHAR(255) from @tmp a group by tggno 

update @tmp
set store='(無)'
where store is null or store='' and gno='3'

select gno,pno,product,tggno,tgg,storeno,store,workno
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) mount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gmount),1)),0,30)) gmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,emount),1)),0,30)) emount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stktmount),1)),0,30)) stktmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,diffmount),1)),0,30)) diffmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stkmount),1)),0,30)) stkmount
from @tmp order by tggno,pno,gno,storeno;
---**********************************************************************************
z_workcp5:--z_workcp5 ref z_workap4
declare @t_xbdate nvarchar(10)
declare @t_xedate nvarchar(10)
declare @t_btggno nvarchar(10)
declare @t_etggno nvarchar(10)
declare @t_bseno nvarchar(10)
declare @t_eseno nvarchar(10)
declare @t_bpno nvarchar(10)
declare @t_epno nvarchar(10)

set @t_xbdate = case when '#non' = [3] then '' else [3] end
set @t_xedate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_btggno = case when '#non' = [5] then '' else [5] end
set @t_etggno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bseno = case when '#non' = [8] then '' else [8] end
set @t_eseno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bpno = case when '#non' = [10] then '' else [10] end
set @t_epno = case when '#non' = [11] then CHAR(255) else [11] end

--****************************************************************************
declare @tmp table(
	gno nvarchar(2),
	pno nvarchar(50),
	product nvarchar(200),
	tggno nvarchar(50),
	tgg nvarchar(100),
	workno nvarchar(100),
	ordeno nvarchar(100),
	mount float,
	gmount float,
	smount float,
	memo nvarchar(50)
)

insert @tmp
select '0',b.productno,b.product,a.tggno,a.comp,a.noa,a.ordeno,b.mount,b.gmount
,-1*(b.mount-b.gmount) smount
,STUFF((select ','+memo from(
	--select memo from view_workas where a.noa=productno and b.productno=workno
	--union all
	select memo from view_workcs where a.noa=productno and b.productno=workno
)tmp FOR xml path('')),1,1,'') memo
from view_work a left join view_works b on a.noa=b.noa
where (b.mount-b.gmount)<0 and a.tggno!=''
and (a.cuadate between @t_xbdate and @t_xedate)
and (a.tggno between @t_btggno and @t_etggno)
and (b.productno between @t_bpno and @t_epno)

insert @tmp
select '1','','',tggno,MAX(tgg),'','',sum(mount),sum(gmount),sum(smount),''
from @tmp where gno='0' group by tggno

select gno,pno,product,tggno,tgg,workno,ordeno,memo
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) mount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gmount),1)),0,30)) gmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,smount),1)),0,30)) smount
from @tmp order by tggno,gno,pno;