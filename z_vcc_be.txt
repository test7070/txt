z_vcc_be01:--z_vcc_be01
SET QUOTED_IDENTIFIER OFF
declare @t_bcustno nvarchar(100)
declare @t_ecustno  nvarchar(100)	
set @t_bcustno = case when '#non'=[5] then '' else [5] end
set @t_ecustno = case when '#non'=[6] then char(255) else [6] end
declare @tmp table(
	rr int,
	acount nvarchar(100),
	boss nvarchar(100),
	team nvarchar(100),
	teamname nvarchar(100),
	line nvarchar(100),
	datea nvarchar(10)
)

declare @result table(
	team nvarchar(100),
	teamname nvarchar(100),
	acount nvarchar(100),
	boss nvarchar(100),
	line nvarchar(100),
	datea nvarchar(10),
	tmppathno nvarchar(100),
	tmppath nvarchar(100),
	tmpLEVEL nvarchar(100)

)

declare @tmp1 table(
	gno nvarchar(2),
	idno int,
	team nvarchar(100),
	teamname nvarchar(100),
	acount nvarchar(100),
	boss nvarchar(100),
	tmppathno nvarchar(100),
	tmppath nvarchar(100),
	tmpLEVEL nvarchar(100),
	line1 nvarchar(100),
	boss1 nvarchar(100),
	line2 nvarchar(100),
	boss2 nvarchar(100),
	line3 nvarchar(100),
	boss3 nvarchar(100),
	line4 nvarchar(100),
	boss4 nvarchar(100),
	line5 nvarchar(100),
	boss5 nvarchar(100),
	rr int,
	rr2 int,
	rr3 int,
	rr31 int,
	rr32 int,
	rr4 int,
	rr5 int
)

insert @tmp
select '1',team,boss,zip_fact,addr_fact,unit,kdate
from cust
where  team!=''
and (noa between @t_bcustno and @t_ecustno)

declare @rr int='1'

while(@rr<4)
begin
	insert @tmp
	select @rr+1,a.team,a.teamname,b.zip_fact,b.addr_fact,b.unit,b.kdate
	from @tmp a left join cust b on a.team=b.team 
	where rr=@rr and a.team!=''
	set @rr+=1
end

insert @tmp
select '0',acount,boss,team,teamname,line,datea
from @tmp
group by acount,boss,team,teamname,line,datea

delete @tmp where rr=1 or rr=2 or rr=3 or rr=4

update @tmp set team=NULL where team=''

WITH tmp_CTE (team,teamname,acount,boss,line,datea,tmppathno,tmppath,tmpLEVEL) AS
(    
    --頂層
    select team,teamname,acount,boss,line,datea,CAST(acount as varchar(MAX)),CAST(boss as varchar(MAX)),1
    from @tmp
    where team is null
     
    union all   
     
    --成員
    select a.team,a.teamname,a.acount,a.boss,a.line,a.datea,b.tmppathno,b.tmppath,b.tmpLEVEL+1
    from @tmp a INNER JOIN tmp_CTE b on a.team=b.acount
    
    
)
insert @result 
select team,teamname,acount,boss,min(line),min(datea),tmppathno,tmppath,tmpLEVEL 
from tmp_CTE 
group by team,teamname,acount,boss,tmppathno,tmppath,tmpLEVEL
 
insert @tmp1(gno,idno,team,teamname,acount,boss,tmppathno,tmppath,tmpLEVEL,line5,boss5,rr5)
select '1','5',team,teamname,a.acount,boss,tmppathno,tmppath,tmpLEVEL,line,boss,b.rr
from @result a
left join (select ROW_NUMBER()over (partition by team order by line)rr,acount from @result group by tmppathno,team,line,acount) b on a.acount=b.acount
where tmpLEVEL='5'

insert @tmp1(gno,idno,team,teamname,acount,boss,tmppathno,tmppath,tmpLEVEL,line4,boss4,rr4,line5,boss5,rr5)
select '1','4',a.team,a.teamname,a.acount,a.boss,a.tmppathno,a.tmppath,a.tmpLEVEL,a.line,a.boss,c.rr,b.line5,b.boss5,rr5
from @result a left join @tmp1 b on a.acount=b.team
left join (select ROW_NUMBER()over (partition by team order by line)rr,acount from @result group by tmppathno,team,line,acount)c on a.acount=c.acount
where a.tmpLEVEL='4'

insert @tmp1(gno,idno,team,teamname,acount,boss,tmppathno,tmppath,tmpLEVEL,line3,boss3,rr3,line4,boss4,rr4,line5,boss5,rr5)
select '1','3',a.team,a.teamname,a.acount,a.boss,a.tmppathno,a.tmppath,a.tmpLEVEL,a.line,a.boss,c.rr,b.line4,b.boss4,b.rr4,b.line5,b.boss5,rr5
from @result a left join @tmp1 b on a.acount=b.team
left join (select ROW_NUMBER()over (partition by team order by line)rr,acount from @result group by tmppathno,team,line,acount)c on a.acount=c.acount
where a.tmpLEVEL='3'

insert @tmp1(gno,idno,team,teamname,acount,boss,tmppathno,tmppath,tmpLEVEL,line2,boss2,rr2,line3,boss3,rr3,rr31,line4,boss4,rr4,line5,boss5,rr5)
select '1','2',a.team,a.teamname,a.acount,a.boss,a.tmppathno,a.tmppath,a.tmpLEVEL,a.line,a.boss,c.rr,b.line3,b.boss3,b.rr3,ROW_NUMBER()over (partition by a.acount order by a.line),b.line4,b.boss4,b.rr4,b.line5,b.boss5,rr5
from @result a left join @tmp1 b on a.acount=b.team
left join (select ROW_NUMBER()over (partition by team order by line)rr,acount from @result group by tmppathno,team,line,acount)c on a.acount=c.acount
where a.tmpLEVEL='2'

update @tmp1
set rr32=b.rr
from @tmp1 a left join (select acount,rr31,ROW_NUMBER()over(partition by rr3,line2 order by line3,line4,line5)rr from @tmp1 where idno=2)b on a.acount=b.acount and a.rr31=b.rr31

insert @tmp1(gno,idno,team,teamname,acount,boss,tmppathno,tmppath,tmpLEVEL,line1,boss1,rr,line2,boss2,rr2,line3,boss3,rr3,rr31,rr32,line4,boss4,rr4,line5,boss5,rr5)
select '1','1',a.team,a.teamname,a.acount,a.boss,a.tmppathno,a.tmppath,a.tmpLEVEL,a.line,a.boss,ROW_NUMBER()over(partition by a.tmppathno order by b.line2,b.line3,b.line3,b.line3),b.line2,b.boss2,b.rr2,b.line3,b.boss3,b.rr3,b.rr31,b.rr32,b.line4,b.boss4,b.rr4,b.line5,b.boss5,rr5
from @result a left join @tmp1 b on a.acount=b.team
where a.tmpLEVEL='1'

update @tmp1
set rr31=line
from @tmp1 a left join (select tmppathno,line2,MAX(line3)line from @tmp1 group by tmppathno,line2)b on a.tmppathno=b.tmppathno and a.line2=b.line2

delete @tmp1 where idno!=1

update @tmp1
set idno=xidno
from (select ROW_NUMBER()over(partition by acount order by line2)xidno,idno from @tmp1) a

update @tmp1
set boss5= case when rr5=1 then '─── '+boss5 else '  └─ '+boss5  end

update @tmp1
set boss4= case when rr5!=1 then '  │' else(case when rr4=1 then '─── '+boss4 else '  └─ '+boss4  end)end

update @tmp1
set boss3= case when rr3=1 then '─── '+boss3 else (case when rr3!=1 and rr32=1 then '  └─ '+boss3 else (case when rr3!=rr31 then '  │' else '' end) end ) end

update @tmp1
set boss2= case when  rr3!=1 then '  │' else(case when rr2=1 then '─── '+boss2 else '  └─ '+boss2  end)end

update @tmp1
set boss1= case when  rr!=1 then '' else boss1 end

insert @tmp1(gno,idno,tmppath)
select '2','99',tmppath
from @tmp1
group by tmppath

select 
*
from @tmp1
order by tmppath,idno,line2,line3,line4,line5
;
----------------------------------------------------------------------------------------------------------------------------------------
z_vcc_be02:--z_vcc_be02
SET QUOTED_IDENTIFIER OFF
declare @t_bnoa nvarchar(100)
declare @t_enoa  nvarchar(100)
declare @t_bdatea nvarchar(100)
declare @t_edatea  nvarchar(100)		
set @t_bnoa= case when '#non'=[1] then '#non' else [1] end
set @t_enoa= case when '#non'=[2] then char(255) else [2] end
set @t_bdatea= case when '#non'=[3] then '' else [3] end
set @t_edatea= case when '#non'=[4] then char(255) else [4] end

declare @tmp table(
	rr int,
	datea nvarchar(100),
	custno nvarchar(100),
	cust nvarchar(100),
	acount nvarchar(100),
	team nvarchar(100),
	line nvarchar(2),
	custno1 nvarchar(100),
	cust1 nvarchar(100)
	
)

declare @result table(
	datea nvarchar(100),
	custno nvarchar(100),
	cust nvarchar(100),
	acount nvarchar(100),
	team nvarchar(100),
	line nvarchar(2),
	custno1 nvarchar(100),
	cust1 nvarchar(100),
	tmppathno nvarchar(100),
	tmppath nvarchar(100),
	tmpLEVEL nvarchar(100)
)

declare @tmp1 table(
	idno nvarchar(50),
	rr int,
	datea nvarchar(10),
	custno nvarchar(100),
	cust nvarchar(100),
	acount nvarchar(100),
	team nvarchar(100),
	line nvarchar(100),
	tmppathno nvarchar(100),
	tmppath nvarchar(100),
	tmpLEVEL nvarchar(100),
	custno1 nvarchar(100),
	cust1 nvarchar(100),
	line2 nvarchar(2),
	custno2 nvarchar(100),
	cust2 nvarchar(100),
	line3 nvarchar(2),
	custno3 nvarchar(100),
	cust3 nvarchar(100),
	line4 nvarchar(2),
	custno4 nvarchar(100),
	cust4 nvarchar(100),
	line5 nvarchar(2),
	custno5 nvarchar(100),
	cust5 nvarchar(100)
)


insert @tmp
select '1',b.kdate,a.custno,a.comp,b.team,b.zip_fact,b.unit,c.noa,case when c.nick!='' then c.nick else c.comp end
from view_vcc a left join cust b on a.custno=b.noa
left join cust c on c.team=b.zip_fact and c.team!=''
where (a.noa between @t_bnoa and @t_enoa)
and (a.datea between @t_bdatea and @t_edatea)
group by b.kdate,a.custno,b.team,a.comp,b.zip_fact,b.unit,c.noa,c.comp,c.nick

declare @rr int=1
while(@rr<5)
begin
	insert @tmp
	select @rr+1,b.kdate,a.custno1,a.cust1,b.team,b.zip_fact,b.unit,c.noa,case when c.nick!='' then c.nick else c.comp end
	from @tmp a left join cust b on a.custno1=b.noa
	left join cust c on c.team=b.zip_fact and c.team!=''
	where custno1!='' and rr=@rr
	set @rr+=1
end

insert @tmp
select '0',datea,custno,cust,acount,team,line,custno1,cust1
from @tmp 
group by datea,custno,cust,acount,team,line,custno1,cust1

delete @tmp where rr=1 or rr=2 or rr=3 or rr=4 or rr=5


WITH tmp_CTE (datea,custno,cust,acount,team,line,custno1,cust1,tmppathno,tmppath,tmpLEVEL) AS
(    
    --頂層
    select datea,custno,cust,acount,team,line,custno1,cust1,CAST(custno as varchar(MAX)),CAST(cust as varchar(MAX)),1
    from @tmp
    where custno1 is null
     
	union all 
	  
    --成員
    select a.datea,a.custno,a.cust,a.acount,a.team,a.line,a.custno1,a.cust1,b.tmppathno,b.tmppath,b.tmpLEVEL+1
    from @tmp a INNER JOIN tmp_CTE b on a.custno1=b.custno    
)

insert @result
select MIN(datea),custno,cust,acount,team,min(line),custno1,cust1,tmppathno,tmppath,tmpLEVEL 
from tmp_CTE
group by custno,cust,acount,team,custno1,cust1,tmppathno,tmppath,tmpLEVEL

insert @tmp1(rr,datea,custno,cust,acount,team,line,tmppathno,tmppath,tmpLEVEL,custno1,cust1)
select'1',datea,custno,cust,acount,team,line,tmppathno,tmppath,tmpLEVEL,tmppathno,tmppath
from @result a

update @tmp1
set line2=line,custno2=custno,cust2=cust
where tmpLEVEL=2

update @tmp1
set line2=b.line,custno2=b.custno,cust2=b.cust,line3=a.line,custno3=a.custno,cust3=a.cust
from @tmp1 a left join @result b on a.team=b.acount
where a.tmpLEVEL=3

update @tmp1
set line2=c.line,custno2=c.custno,cust2=c.cust,line3=b.line,custno3=b.custno,cust3=b.cust,line4=a.line,custno4=a.custno,cust4=a.cust
from @tmp1 a left join @result b on a.team=b.acount
left join @result c on b.team=c.acount
where a.tmpLEVEL=4

update @tmp1
set line2=d.line,custno2=d.custno,cust2=d.cust,line3=c.line,custno3=c.custno,cust3=c.cust,line4=b.line,custno4=b.custno,cust4=b.cust,line5=a.line,custno5=a.custno,cust5=a.cust
from @tmp1 a left join @result b on a.team=b.acount
left join @result c on b.team=c.acount
left join @result d on c.team=d.acount
where a.tmpLEVEL=5

insert @tmp1
select ROW_NUMBER()over(partition by tmppathno order by line2,line3,line4,line5),'0',datea,custno,cust,acount,team,line,tmppathno,tmppath,tmpLEVEL
		,custno1,cust1,line2,custno2,cust2,line3,custno3,cust3,line4,custno4,cust4,line5,custno5,cust5
from @tmp1

delete @tmp1 where rr=1

declare @result1 table(
	gno nvarchar(1),
	rr int,
	rr2 int,
	idno nvarchar(50),
	ocustno nvarchar(100),
	ocust nvarchar(100),
	noa nvarchar(100),
	odatea nvarchar(100),
	typea nvarchar(100),
	stotal float,
	productno nvarchar(100),
	product nvarchar(100),
	unit nvarchar(50),
	price float,
	mount float,
	total float,
	money3 float,
	inte float,--第一代總積分
	inte1 float,--第一代積分
	inte2 float,--第二代積分
	inte3 float,--第三代積分
	inte4 float,--第四代積分
	custno nvarchar(100),
	cust nvarchar(100),
	tmppathno nvarchar(100),
	tmpLEVEL nvarchar(100),
	custno1 nvarchar(100),
	cust1 nvarchar(100),
	line2 nvarchar(2),
	custno2 nvarchar(100),
	cust2 nvarchar(100),
	line3 nvarchar(2),
	custno3 nvarchar(100),
	cust3 nvarchar(100),
	line4 nvarchar(2),
	custno4 nvarchar(100),
	cust4 nvarchar(100),
	line5 nvarchar(2),
	custno5 nvarchar(100),
	cust5 nvarchar(100)
)

insert @result1
select '0',ROW_NUMBER()over(partition by b.custno order by a.idno),ROW_NUMBER()over(partition by b.noa order by a.idno),a.idno,b.custno,b.comp,b.noa,b.datea,case when b.typea='1' then '出' else '退' end,(case when b.typea=1 then 1 else -1 end)*b.benifit,c.productno,c.product,c.unit,c.price
		,(case when b.typea=1 then 1 else -1 end)*c.mount,(case when b.typea=1 then 1 else -1 end)*c.total,'',''
		,(case when b.typea=1 then 1 else -1 end)*(case when tmpLEVEL='2' then b.benifit/800*4 else (case when tmpLEVEL='3' then b.benifit/800*8 else (case when tmpLEVEL='4' then b.benifit/800*16 else (case when tmpLEVEL='5' then b.benifit/800*30 else '' end) end) end) end)
		,(case when b.typea=1 then 1 else -1 end)*(case when tmpLEVEL='3' then b.benifit/800*4 else (case when tmpLEVEL='4' then b.benifit/800*8 else (case when tmpLEVEL='5' then b.benifit/800*16 else '' end) end) end)
		,(case when b.typea=1 then 1 else -1 end)*(case when tmpLEVEL='3' then b.benifit/800*15 else (case when tmpLEVEL='4' then b.benifit/800*8 else (case when tmpLEVEL='5' then b.benifit/800*4 else '' end) end) end)
		,(case when b.typea=1 then 1 else -1 end)*(case when tmpLEVEL='5' then b.benifit/800*4 else '' end)
		,a.custno,a.cust,a.tmppathno
		,a.tmpLEVEL
		,a.custno1,a.cust1,a.line2,a.custno2,a.cust2
		,a.line3,a.custno3,a.cust3,a.line4,a.custno4,a.cust4,a.line5,a.custno5,a.cust5
from @tmp1 a left join view_vcc b on a.custno=b.custno
left join view_vccs c on b.noa=c.noa
where (b.noa between @t_bnoa and @t_enoa)
and (b.datea between @t_bdatea and @t_edatea)

update @result1 set inte=stotal/800*15 where tmpLEVEL=1

update @result1 set gno=case when rr='1' and rr='1' then 1 else(case when rr>'1' and rr2='1' then 2 else 3 end)end
update @result1 set inte1='',inte2='',inte3='',inte4='',stotal='' where rr2!=1


update @result1
set money3=a.money3
from (select custno1,line2,SUM(stotal)money3 from @result1 where tmpLEVEL='3' group by custno1,line2)a left join @result1 b on a.custno1=b.custno1 and a.line2=b.line2

--第一代(判斷第三代是否有消費,沒有消費不計算四五代積分)
update @result1 set inte=inte1 where tmpLEVEL=2
update @result1 set inte=inte1 where tmpLEVEL=3
update @result1 set inte=case when money3!=0 then inte1 else 0 end where tmpLEVEL=4
update @result1 set inte=case when money3!=0 then inte1 else 0 end where tmpLEVEL=5

insert @result1(gno,idno,rr,ocustno,tmpLEVEL,line2,stotal,mount,total)
select '4',idno,'9998',ocustno,tmpLEVEL,line2,SUM(stotal),SUM(mount),SUM(total)
from @result1 a
where tmpLEVEL!='1'
group by idno,ocustno,line2,tmpLEVEL

update @result1
set inte2=a.inte2
from (select custno2,case when money3=0 then 0 else sum(inte2) end inte2 from @result1 group by custno2,money3)a left join @result1 b on a.custno2=b.ocustno
where gno='4'

update @result1
set inte3=a.inte3
from (select custno3,SUM(inte3)inte3 from @result1 group by custno3)a left join @result1 b on a.custno3=b.ocustno
where gno='4'

update @result1
set inte4=a.inte4
from (select custno4,SUM(inte4)inte4 from @result1 group by custno4)a left join @result1 b on a.custno4=b.ocustno
where gno='4'

insert @result1(gno,tmpLEVEL,idno,rr,custno1,stotal,mount,total,inte)
select '5','1','999999','9999',a.custno1,SUM(stotal),SUM(mount),SUM(total),SUM(a.inte)
from @result1 a
where gno!='4'
group by a.custno1

select 
custno cname
,case when tmpLEVEL='1' then tmpLEVEL else (case when tmpLEVEL='2' then '-- '+tmpLEVEL else (case when tmpLEVEL='3' then '---- '+tmpLEVEL else (case when tmpLEVEL='4' then '------ '+tmpLEVEL else '-------- '+tmpLEVEL end) end) end) end tmpLEVEL
,case when tmpLEVEL='2' then cust1 else (case when tmpLEVEL='3' then cust2 else (case when tmpLEVEL='4' then cust3 else (case when tmpLEVEL='5' then cust4 else '' end) end) end) end name
,case when tmpLEVEL='2' and gno=4 then inte2 else (case when tmpLEVEL='3' and gno=4 then inte3 else (case when tmpLEVEL='4' and gno=4 then inte4 else (case when gno=5 then inte else NULL end) end) end) end inte
,case when tmpLEVEL!=5 then '積分：' else '' end intename
,@t_bdatea bdatea
,@t_edatea edatea
,dbo.getComma(stotal,0)stotal
,dbo.getComma(price,0)price
,dbo.getComma(mount,0)mount
,dbo.getComma(total,0)total
,* from @result1
order by idno,rr
;
-------------------------------------------------------------------------------------------------------------------------------------------------------------
z_vcc_be03:--z_vcc_be03
SET QUOTED_IDENTIFIER OFF
declare @t_bnoa nvarchar(100)
declare @t_enoa  nvarchar(100)
declare @t_bdatea nvarchar(100)
declare @t_edatea  nvarchar(100)		
set @t_bnoa= case when '#non'=[1] then '#non' else [1] end
set @t_enoa= case when '#non'=[2] then char(255) else [2] end
set @t_bdatea= case when '#non'=[3] then '' else [3] end
set @t_edatea= case when '#non'=[4] then char(255) else [4] end

declare @tmp table(
	rr int,
	datea nvarchar(100),
	custno nvarchar(100),
	cust nvarchar(100),
	acount nvarchar(100),
	team nvarchar(100),
	line nvarchar(2),
	custno1 nvarchar(100),
	cust1 nvarchar(100)
	
)

declare @result table(
	datea nvarchar(100),
	custno nvarchar(100),
	cust nvarchar(100),
	acount nvarchar(100),
	team nvarchar(100),
	line nvarchar(2),
	custno1 nvarchar(100),
	cust1 nvarchar(100),
	tmppathno nvarchar(100),
	tmppath nvarchar(100),
	tmpLEVEL nvarchar(100)
)

declare @tmp1 table(
	idno nvarchar(50),
	rr int,
	datea nvarchar(10),
	custno nvarchar(100),
	cust nvarchar(100),
	acount nvarchar(100),
	team nvarchar(100),
	line nvarchar(100),
	tmppathno nvarchar(100),
	tmppath nvarchar(100),
	tmpLEVEL nvarchar(100),
	custno1 nvarchar(100),
	cust1 nvarchar(100),
	line2 nvarchar(2),
	custno2 nvarchar(100),
	cust2 nvarchar(100),
	line3 nvarchar(2),
	custno3 nvarchar(100),
	cust3 nvarchar(100),
	line4 nvarchar(2),
	custno4 nvarchar(100),
	cust4 nvarchar(100),
	line5 nvarchar(2),
	custno5 nvarchar(100),
	cust5 nvarchar(100)
)


insert @tmp
select '1',b.kdate,a.custno,a.comp,b.team,b.zip_fact,b.unit,c.noa,case when c.nick!='' then c.nick else c.comp end
from view_vcc a left join cust b on a.custno=b.noa
left join cust c on c.team=b.zip_fact and c.team!=''
where (a.noa between @t_bnoa and @t_enoa)
and (a.datea between @t_bdatea and @t_edatea)
group by b.kdate,a.custno,b.team,a.comp,b.zip_fact,b.unit,c.noa,c.comp,c.nick

declare @rr int=1
while(@rr<5)
begin
	insert @tmp
	select @rr+1,b.kdate,a.custno1,a.cust1,b.team,b.zip_fact,b.unit,c.noa,case when c.nick!='' then c.nick else c.comp end
	from @tmp a left join cust b on a.custno1=b.noa
	left join cust c on c.team=b.zip_fact and c.team!=''
	where custno1!='' and rr=@rr
	set @rr+=1
end

insert @tmp
select '0',datea,custno,cust,acount,team,line,custno1,cust1
from @tmp 
group by datea,custno,cust,acount,team,line,custno1,cust1

delete @tmp where rr=1 or rr=2 or rr=3 or rr=4 or rr=5


WITH tmp_CTE (datea,custno,cust,acount,team,line,custno1,cust1,tmppathno,tmppath,tmpLEVEL) AS
(    
    --頂層
    select datea,custno,cust,acount,team,line,custno1,cust1,CAST(custno as varchar(MAX)),CAST(cust as varchar(MAX)),1
    from @tmp
    where custno1 is null
     
	union all 
	  
    --成員
    select a.datea,a.custno,a.cust,a.acount,a.team,a.line,a.custno1,a.cust1,b.tmppathno,b.tmppath,b.tmpLEVEL+1
    from @tmp a INNER JOIN tmp_CTE b on a.custno1=b.custno    
)

insert @result
select MIN(datea),custno,cust,acount,team,min(line),custno1,cust1,tmppathno,tmppath,tmpLEVEL 
from tmp_CTE
group by custno,cust,acount,team,custno1,cust1,tmppathno,tmppath,tmpLEVEL

insert @tmp1(rr,datea,custno,cust,acount,team,line,tmppathno,tmppath,tmpLEVEL,custno1,cust1)
select'1',datea,custno,cust,acount,team,line,tmppathno,tmppath,tmpLEVEL,tmppathno,tmppath
from @result a

update @tmp1
set line2=line,custno2=custno,cust2=cust
where tmpLEVEL=2

update @tmp1
set line2=b.line,custno2=b.custno,cust2=b.cust,line3=a.line,custno3=a.custno,cust3=a.cust
from @tmp1 a left join @result b on a.team=b.acount
where a.tmpLEVEL=3

update @tmp1
set line2=c.line,custno2=c.custno,cust2=c.cust,line3=b.line,custno3=b.custno,cust3=b.cust,line4=a.line,custno4=a.custno,cust4=a.cust
from @tmp1 a left join @result b on a.team=b.acount
left join @result c on b.team=c.acount
where a.tmpLEVEL=4

update @tmp1
set line2=d.line,custno2=d.custno,cust2=d.cust,line3=c.line,custno3=c.custno,cust3=c.cust,line4=b.line,custno4=b.custno,cust4=b.cust,line5=a.line,custno5=a.custno,cust5=a.cust
from @tmp1 a left join @result b on a.team=b.acount
left join @result c on b.team=c.acount
left join @result d on c.team=d.acount
where a.tmpLEVEL=5

insert @tmp1
select ROW_NUMBER()over(partition by tmppathno order by line2,line3,line4,line5),'0',datea,custno,cust,acount,team,line,tmppathno,tmppath,tmpLEVEL
		,custno1,cust1,line2,custno2,cust2,line3,custno3,cust3,line4,custno4,cust4,line5,custno5,cust5
from @tmp1

delete @tmp1 where rr=1

declare @result1 table(
	gno nvarchar(1),
	rr int,
	rr2 int,
	idno nvarchar(50),
	name nvarchar(100),
	ocustno nvarchar(100),
	ocust nvarchar(100),
	noa nvarchar(100),
	odatea nvarchar(100),
	typea nvarchar(100),
	productno nvarchar(100),
	product nvarchar(100),
	mount float,
	total float,
	money1 float,
	custno nvarchar(100),
	cust nvarchar(100),
	tmppathno nvarchar(100),
	tmpLEVEL nvarchar(100),
	line2 nvarchar(2)
)

insert @result1
select '0',ROW_NUMBER()over(partition by b.custno order by a.idno),ROW_NUMBER()over(partition by b.noa order by a.idno),a.idno,case when e.nick!='' then e.nick else e.comp end
		,b.custno,b.comp,b.noa,b.datea,case when b.typea='1' then '出' else '退' end,c.productno,c.product,c.mount
		,c.total,'',a.custno,a.cust,a.tmppathno
		,case when a.tmpLEVEL='1' then a.tmpLEVEL else (case when a.tmpLEVEL='2' then '-- '+a.tmpLEVEL else (case when a.tmpLEVEL='3' then '---- '+a.tmpLEVEL else (case when a.tmpLEVEL='4' then '------ '+a.tmpLEVEL else '-------- '+a.tmpLEVEL end) end) end) end
		,a.line2
from @tmp1 a left join view_vcc b on a.custno=b.custno
left join view_vccs c on b.noa=c.noa
left join cust d on b.custno=d.noa
left join cust e on d.zip_fact=e.team and e.team!=''
where (b.noa between @t_bnoa and @t_enoa)
and (b.datea between @t_bdatea and @t_edatea)

update @result1 set gno=case when rr='1' and rr='1' then 1 else 2 end

insert @result1(gno,idno,rr,ocustno,tmppathno,mount,total)
select '3',idno,'9998',ocustno,tmppathno,SUM(mount),SUM(total)
from @result1 a
where tmpLEVEL!='1'
group by idno,ocustno,tmppathno

insert @result1(gno,idno,rr,tmppathno,mount,total)
select '4','9999','9999',tmppathno,SUM(mount),SUM(total)
from @result1 a
where gno=3
group by tmppathno

select 
custno cname
,@t_bdatea bdatea
,@t_edatea edatea
,dbo.getComma(mount,0)mount
,dbo.getComma(total,0)total
,dbo.getComma(money1,0)money1
,* from @result1
order by idno,rr
;