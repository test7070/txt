z_vccneed1:--z_vccneed1
declare @t_noa nvarchar(50)
declare @t_no2 nvarchar(50)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bpno nvarchar(max)
declare @t_epno nvarchar(max)
declare @t_need nvarchar(30)

set @t_noa = case when '#non'=[2] then '' else [2] end
set @t_no2 = case when '#non'=[3] then '' else [3] end
set @t_bdate = case when '#non'=[4] then '' else [4] end
set @t_edate = case when '#non'=[5] then char(255) else [5] end
set @t_bpno = case when '#non'=[6] then '' else [6] end
set @t_epno = case when '#non'=[7] then char(255) else [7] end
set @t_need = case when '#non'=[8] then '' else [8] end
--	--*****************************************************************************************	
declare @t_now_date nvarchar(10)
set @t_now_date=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_now_date=left(@t_now_date,3)+'/'+substring(@t_now_date,4,2)+'/'+right(@t_now_date,2)

declare @tmp table(
	gno nvarchar(2),
	ordeno nvarchar(50),
	no2 nvarchar(50),
	pno nvarchar(max),
	product nvarchar(max),
	mount float,		--訂單數量
	stkmount float,		--庫存數量
	avamount float,		--可用庫存
	workmount float,	--在途數量
	ordcmount float,	--採購數量
	salemount float,	--庫存預定銷售量
	tmount float		--本期計畫產量
)
--插入訂單資料
insert @tmp (gno,ordeno,no2,pno,product,mount)
	select
		'9',noa,no2,productno,product,mount
	from view_ordes 
	where (enda!='1') and (cancel!='1') and (productno between @t_bpno and @t_epno)

--插入庫存數量
insert @tmp (gno,pno,product,stkmount)
	select
		'8',productno,product,sum(mount)
	from stkucc(@t_now_date,'','')
	where (productno between @t_bpno and @t_epno)
	group by productno,product

--插入在途數量(生產製造數量)
insert @tmp (gno,pno,product,workmount)
	select
		'8',productno,product,sum(mount-inmount)
	from view_work
	where (enda!='1') and (isfreeze!='1') and (productno between @t_bpno and @t_epno)
	group by productno,product

--插入採購數量
insert @tmp (gno,pno,product,ordcmount)
	select
		'8',productno,product,sum(mount-c1)
	from view_ordcs
	where (enda!='1') and (cancel!='1') and (productno between @t_bpno and @t_epno)
	group by productno,product

--插入庫存預定銷售量
insert @tmp (gno,pno,product,ordcmount)
	select
		'8',productno,product,sum(salemount)
	from view_workgt
	where ((ordeno+'_'+no2) in (select (ordeno+'_'+no2) from @tmp where gno='9'))
	group by productno,product

--合計
insert @tmp (gno,pno,product,mount,stkmount,workmount,ordcmount,salemount)
	select
		'0',pno,MAX(product),isnull(SUM(mount),0),isnull(SUM(stkmount),0)
		,isnull(SUM(workmount),0),isnull(SUM(ordcmount),0),isnull(SUM(salemount),0)
	from @tmp group by pno

delete @tmp where gno!='0'

update @tmp set avamount=stkmount-mount
update @tmp set tmount=-1*(avamount+workmount+ordcmount-salemount)
update @tmp set tmount=0 where tmount<0

if(len(@t_need)>0)
begin
	delete @tmp where tmount<=0
end

insert @tmp (gno,tmount)
	select '1',SUM(tmount) from @tmp 

select
	gno,pno,product
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),0,12)) mount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,stkmount),1)),0,12)) stkmount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,avamount),1)),0,12)) avamount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,workmount),1)),0,12)) workmount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ordcmount),1)),0,12)) ordcmount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salemount),1)),0,12)) salemount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tmount),1)),0,12)) tmount
from @tmp order by gno,pno
;
--↓↓↓↓之前版本↓↓↓↓
--declare @tmp table(
--	gno nvarchar(2),
--	ordeno nvarchar(50),
--	no2 nvarchar(50),
--	pno nvarchar(50),
--	product nvarchar(50),
--	mount float,
--	stkmount float,
--	inmount float,
--	salemount float,
--	outmount float,
--	ninmount float,
--	ncuamount float,
--	avaitotal float,
--	total float
--)


--if(len(@t_noa)>0)
--begin
--	insert @tmp
--	select '0'gno,a.noa,a.no2,a.productno pno,a.product,a.mount 
--	,(select sum(mount) from stkucc(@t_now_date,'','') where productno=a.productno) --'庫存量' 
--	,isnull((select sum(wa.inmount) from view_work wa where charindex(a.noa+'-'+a.no2,wa.ordeno)>0 and a.enda!='1'),0) --'生產入庫' 
--	,isnull((select sum(wg.salemount) from view_workgs wg where charindex(a.noa+'-'+a.no2,wg.ordeno)>0),0) --'庫存預定銷售量' 
--	,a.c1 --'已出貨量' 
--	,(select sum(mount-inmount) from view_work where charindex(a.noa+'-'+a.no2,ordeno)>0 and productno=a.productno) --'排程未入庫量' 
--	,isnull((select b.mount from view_ordes b left join view_workgs c on charindex(b.noa+'-'+b.no2,c.ordeno)>0 where b.noa=a.noa and b.no2=a.no2 and c.noa is null),0) --'訂單未排程' 
--	+isnull((select sum(b.mount-c.mount-c.salemount) from view_ordes b left join view_workgs c on charindex(b.noa+'-'+b.no2,c.ordeno)>0 where b.noa=a.noa and b.no2=a.no2 and c.noa!=''),0) 
--	,0,0 from view_ordes a where noa=@t_noa and (len(@t_no2)=0 or no2=@t_no2)
--end
--else
--begin
--	insert @tmp
--	select '0'gno,a.noa,a.no2,a.productno pno,a.product,a.mount 
--	,(select sum(mount) from stkucc(@t_now_date,'','') where productno=a.productno) --'庫存量' 
--	,isnull((select sum(wa.inmount) from view_work wa where charindex(a.noa+'-'+a.no2,wa.ordeno)>0 and a.enda!='1'),0) --'生產入庫' 
--	,isnull((select sum(wg.salemount) from view_workgs wg where charindex(a.noa+'-'+a.no2,wg.ordeno)>0),0) --'庫存預定銷售量' 
--	,a.c1 --'已出貨量' 
--	,isnull((select sum(mount-inmount) from view_work where charindex(a.noa+'-'+a.no2,ordeno)>0 and productno=a.productno),0) --'排程未入庫量' 
--	,isnull((select b.mount from view_ordes b left join view_workgs c on charindex(b.noa+'-'+b.no2,c.ordeno)>0 where b.noa=a.noa and b.no2=a.no2 and c.noa is null),0) --'訂單未排程' 
--	+isnull((select sum(b.mount-c.mount-c.salemount) from view_ordes b left join view_workgs c on charindex(b.noa+'-'+b.no2,c.ordeno)>0 where b.noa=a.noa and b.no2=a.no2 and c.noa!=''),0) 
--	,0,0 from view_ordes a
--	where (a.datea between @t_bdate and @t_edate) and (enda='0' or enda is null) 
--end

--update @tmp
--set total=-1*(stkmount-(inmount+salemount-outmount)-ncuamount)
--,avaitotal=(stkmount-(inmount+salemount-outmount)-ncuamount)

--update @tmp set total=0 where total<0
--update @tmp set avaitotal=0 where avaitotal<0

--if(len(@t_need)>0)
--begin
--	delete @tmp where total<=0
--end

--insert @tmp (gno,total)
--select '1'gno,sum(total) from @tmp

--select
--gno,ordeno,pno,product,no2
--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount
--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,stkmount),1)),4,12)) stkmount
--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmount),1)),4,12)) inmount
--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salemount),1)),4,12)) salemount
--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,outmount),1)),4,12)) outmount
--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ninmount),1)),4,12)) ninmount
--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ncuamount),1)),4,12)) ncuamount
--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,avaitotal),1)),4,12)) avaitotal
--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
--from @tmp order by gno,ordeno desc,no2