z_worklp1:--z_worklp1
declare @t_noa nvarchar(50)
set @t_noa = [2]
declare @tmp table(
	gno nvarchar(10),
	noa nvarchar(50),
	datea nvarchar(10),
	tggno nvarchar(50),
	tggs nvarchar(90),
	bdate nvarchar(10),
	edate nvarchar(10),
	storeno nvarchar(50),
	stores nvarchar(90),
	storeinno nvarchar(50),
	storeins nvarchar(90),
	amemo nvarchar(max),
	cngno nvarchar(50),
	productno nvarchar(max),
	products nvarchar(max),
	unit nvarchar(15),
	mount float,
	bmemo nvarchar(max)
)
insert into @tmp
	select
		'0',a.noa,a.datea,a.tggno,a.tgg,a.bdate,a.edate,a.storeno,a.store,a.storeinno,a.storein,
		a.memo,a.cngno,b.productno,b.product,b.unit,b.mount,b.memo
	from view_workl a
	left join view_workls b on (a.noa=b.noa)
	where a.noa=@t_noa
insert into @tmp(gno,noa)
	select '1',noa from @tmp where gno='0' group by noa
select
	*
from @tmp order by noa,gno;
--------------------------------------------------------------------------------------------------*
z_worklp2:--z_worklp2
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bstationno nvarchar(50)
declare @t_estationno nvarchar(50)
declare @t_btggno nvarchar(50)
declare @t_etggno nvarchar(50)
declare @t_bpno nvarchar(50)
declare @t_epno nvarchar(50)
declare @t_bstoreno nvarchar(50)
declare @t_estoreno nvarchar(50)

set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bstationno = case when '#non' = [5] then '' else [5] end
set @t_estationno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_btggno = case when '#non' = [7] then '' else [7] end
set @t_etggno = case when '#non' = [8] then char(255) else [8] end
set @t_bpno = case when '#non' = [9] then '' else [9] end
set @t_epno = case when '#non' = [10] then CHAR(255) else [10] end
set @t_bstoreno = case when '#non' = [11] then '' else [11] end
set @t_estoreno = case when '#non' = [12] then CHAR(255) else [12] end

declare @t_stkdate nvarchar(30) --倉庫運算日期
set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)

--*********************************************************************
declare @store table( 
	sno nvarchar(MAX), 
	pno nvarchar(50), 
	mount float
) 

insert @store
select storeno,productno,mount from stkucc(@t_stkdate,'','')
where (productno between @t_bpno and @t_epno) 
and storeno not in (select storeno from tgg where isnull(storeno,'')!='' ) 
and storeno not in (select storeno from station where isnull(storeno,'')!='')
and (storeno between @t_bstoreno and @t_estoreno)

declare @tmp table(
	gno nvarchar(1),
	tggno nvarchar(50),
	tgg nvarchar(100),
	sno nvarchar(50),
	store nvarchar(100),
	pno nvarchar(50),
	product nvarchar(100),
	gmount float,
	inmount float,
	unmount float,--製令未領量
	smount float,--撥料庫存量
	stmount float, --倉庫可領量
	diffmount float,--撥料不足量
	scmount float--撥料倉餘量
)

declare @tmpa table(
	gno nvarchar(1),
	tggno nvarchar(50),
	tgg nvarchar(100),
	sno nvarchar(50),
	store nvarchar(100),
	pno nvarchar(50),
	product nvarchar(100),
	gmount float,
	inmount float,
	unmount float,--製令未領量
	smount float,--撥料庫存量
	stmount float, --倉庫可領量
	diffmount float,--撥料不足量
	scmount float--撥料倉餘量
)

insert @tmp 
	select
		'0',a.tggno,c.nick,'','',b.productno,MAX(b.product)
		,isnull(round(SUM(isnull(b.mount,0)),2),0) mount
		,isnull(round(SUM(isnull(b.gmount,0)),2),0) inmount
		,isnull(round(SUM(case when isnull(b.emount,0)=0 and isnull(b.gmount,0)=0 then isnull(b.mount,0) else isnull(b.emount,0) end),2),0) unmount
		,isnull((select SUM(mount) mount from stkucc(@t_stkdate,'','') where productno=b.productno and storeno=d.noa),0)
		,0,0,0
	from view_work a
	left join view_works b on a.noa=b.noa
	left join tgg c on a.tggno=c.noa 
	left join store d on a.tggno=d.tggno
	where (isnull(a.enda,0)!='1') and (a.cuadate between @t_bdate and @t_edate)
		and (b.productno between @t_bpno and @t_epno) and a.tggno!=''
		and (a.tggno between @t_btggno and @t_etggno)
		and isnull(a.stationno,'')=''
		and (isnull(a.isfreeze,0)!= '1')
		and a.noa like 'W[0-9]%' 
		--and left(a.noa,2)!='WJ'
	group by a.tggno,c.nick,b.productno,d.noa
	

insert @tmpa
select  b.gno,b.tggno,b.tgg,a.sno,'',b.pno,b.product,b.gmount,b.inmount,b.unmount,b.smount,a.mount,0,0
from @store a,@tmp b where a.pno=b.pno

update a
set a.store=isnull(b.store,'')
from @tmpa a left join store b on a.sno=b.noa
	
update @tmpa set scmount=smount-unmount
update @tmpa set scmount=0 where scmount<0
update @tmpa set diffmount=-1*(smount-unmount)
update @tmpa set diffmount=0 where diffmount<0
update @tmpa set stmount=stmount-smount
delete @tmpa where diffmount=0
delete @tmpa where stmount<=0

insert @tmpa(gno,sno)
select '1',sno from @tmpa group by sno

select
	gno,ROW_NUMBER()over(PARTITION BY sno order by sno,gno,tggno,pno) recno
	,tggno,tgg,pno,product,sno,store
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gmount),1)),0,30)) gmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,inmount),1)),0,30)) inmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unmount),1)),0,30)) unmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,smount),1)),0,30)) smount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stmount),1)),0,30)) stmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,diffmount),1)),0,30)) diffmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,scmount),1)),0,30)) scmount
from @tmpa order by sno,gno,tggno,pno
;
----------------------------------------------------------------------------------------------------------*
z_worklp3:--z_worklp3
declare @t_noa nvarchar(50) = case when '#non' = [2] then '' else [2] end
declare @t_btggno nvarchar(50) = case when '#non' = [7] then '' else [7] end
declare @t_etggno nvarchar(50) = case when '#non' = [8] then char(255) else [8] end
------------報表設定<<Start>>------------
declare @pageline int = 7 --每頁幾行
------------報表設定<<End>>------------
declare @tmp table(
	gno nvarchar(10),
	idno int identity(0,1),
	pageno int,
	noapageno int,
	noatotpno int,
	recno int,
	tggno nvarchar(50),
	tggs nvarchar(90),
	datea nvarchar(10),
	noa nvarchar(50),
	instoreno nvarchar(50),
	instores nvarchar(90),
	outstoreno nvarchar(50),
	outstores nvarchar(90),
	productno nvarchar(max),
	products nvarchar(max),
	spec nvarchar(max),
	unit nvarchar(15),
	amount float,
	rackmount float,
	memo nvarchar(max)
)
insert into @tmp
	select
		'0' gno,0 pageno,0 noapageno,0 noatotpno,0 recno,
		a.tggno,a.tgg,a.datea,a.noa,a.storeinno,a.storein,a.storeno,a.store,
		b.productno,b.product,b.spec,b.unit,b.mount,0 rackmount,b.memo
	from view_workl a
	left join view_workls b on (a.noa=b.noa)
	where (len(@t_noa)=0 or a.noa=@t_noa) and
		  (a.tggno between @t_btggno and @t_etggno)
	order by a.noa,b.noq
------gno-> 1=空白行,2=加總
declare @idno int
declare @noa nvarchar(50)
declare @pageno int
declare @recCount int
declare @noapageno int
------------更新頁數<<Start>>------------
declare @pageno_int int = 0
declare @lastidno int
declare @lastnoa nvarchar(50) = ''
declare cursor_table cursor for
	select idno,noa from @tmp order by idno
open cursor_table
fetch next from cursor_table
into @idno,@noa
while(@@FETCH_STATUS <> -1)
begin
	if((@recCount > @pageline) or (@noa != @lastnoa))
	begin
		if(@noa != @lastnoa)
			set @noapageno = 1
		else if((@recCount > @pageline))
			set @noapageno = @noapageno + 1
		set @pageno_int = @pageno_int+1
		set @recCount = 1
	end
	update @tmp set pageno=@pageno_int,recno=@recCount,noapageno=@noapageno where idno=@idno
	set @lastnoa = @noa
	set @recCount = @recCount+1
	fetch next from cursor_table
	into @idno,@noa
end
close cursor_table
deallocate cursor_table
------------更新頁數<<End>>-------------
------------插入空白行<<Start>>------------
set @recCount = 0
declare cursor_table cursor for
	select pageno,noapageno,noa,max(recno) from @tmp where (gno='0') group by pageno,noapageno,noa
open cursor_table
fetch next from cursor_table
into @pageno,@noapageno,@noa,@recCount
while(@@FETCH_STATUS <> -1)
begin
	if(@recCount<@pageline)
	begin
		while(@recCount<@pageline)
		begin
			set @recCount = @recCount+1
			insert into @tmp(gno,noa,pageno,noapageno,recno)
				values('1',@noa,@pageno,@noapageno,@recCount)
		end
	end
	fetch next from cursor_table
	into @pageno,@noapageno,@noa,@recCount
end
close cursor_table
deallocate cursor_table
------------插入空白行<<End>>-------------
------------插入合計<<Start>>-------------
insert into @tmp(gno,noa,pageno,noapageno,recno,amount,rackmount)
	select
		'2' gno,noa,pageno,noapageno,max(recno)+1,b.amount,b.rackmount
	from @tmp a
	outer apply(select sum(amount) amount,sum(rackmount) rackmount from @tmp where (gno='0') and (noa=a.noa)) b
	group by noa,pageno,noapageno,b.amount,b.rackmount
------------插入合計<<End>>-------------
update a
	set noatotpno = b.pageno
from @tmp a
outer apply(select max(noapageno) pageno from @tmp where a.noa=noa) b
select
	a.gno,a.idno,a.pageno,a.noapageno npno1,a.noatotpno npno2,a.recno,
	a.tggno,a.tggs,a.datea,a.noa,a.instoreno,a.instores,a.outstoreno,a.outstores,
	a.productno,a.products,a.spec,a.unit,a.amount,a.rackmount,a.memo,
	isnull(a.instoreno,'') + '→' + isnull(a.outstoreno,'') usestore
from @tmp a
order by a.pageno,a.gno,a.recno;
----------------------------------------------------------------------------------------------------------*
z_worklp4:--z_worklp4

declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bstationno nvarchar(50)
declare @t_estationno nvarchar(50)
declare @t_bpno nvarchar(50)
declare @t_epno nvarchar(50)
declare @t_btggno nvarchar(50)
declare @t_etggno nvarchar(50)

set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bstationno = case when '#non' = [5] then '' else [5] end
set @t_estationno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_btggno = case when '#non' = [7] then '' else [7] end
set @t_etggno = case when '#non' = [8] then char(255) else [8] end
set @t_bpno = case when '#non' = [9] then '' else [9] end
set @t_epno = case when '#non' = [10] then CHAR(255) else [10] end


declare @t_stkdate nvarchar(30) --倉庫運算日期
set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)

--*********************************************************************
declare @tmp table(
	gno nvarchar(1),
	cuadate nvarchar(10),
	workno nvarchar(90),
	tggno nvarchar(50),
	tgg nvarchar(100),
	pno nvarchar(50),
	product nvarchar(100),
	gmount float,
	inmount float,
	unmount float,
	smount float,
	stmount float, 
	diffmount float
)


insert @tmp (gno,cuadate,workno,tggno,tgg,pno,product,gmount,inmount,unmount)
select '0',a.cuadate,a.noa,a.tggno,c.nick,b.productno,b.product,isnull(b.mount,0) mount,isnull(b.gmount,0) inmount
,case when isnull(b.emount,0)=0 and isnull(b.gmount,0)=0 then isnull(b.mount,0) else isnull(b.emount,0) end unmount
from view_work a left join view_works b on a.noa=b.noa left join tgg c on a.tggno=c.noa
where (isnull(a.enda,0)!='1') and (a.cuadate between @t_bdate and @t_edate)
and (b.productno between @t_bpno and @t_epno) 
and a.tggno!='' and (a.tggno between @t_btggno and @t_etggno)
and isnull(a.stationno,'')=''	and (isnull(a.isfreeze,0)!= '1') 
and a.noa like 'W[0-9]%'
--and left(a.noa,2)!='WJ'

insert @tmp (gno,tggno,tgg,pno,product,gmount,inmount,unmount,smount,stmount,diffmount)
select '1',a.tggno,MAX(a.tgg),pno,MAX(product),sum(gmount),sum(inmount),sum(unmount)
,isnull((select SUM(mount) mount from stkucc(@t_stkdate,'','') where productno=a.pno and storeno=b.noa),0)
,isnull((select SUM(mount) mount from stkucc(@t_stkdate,'','') where productno=a.pno),0),0
from @tmp a left join store b on a.tggno=b.tggno group by a.tggno,a.pno,b.noa

update @tmp set diffmount=-1*(smount-unmount) where gno='1'
update @tmp set diffmount=0 where diffmount<0 and gno='1'

insert @tmp (gno,tggno,tgg,pno)
select '2',tggno,MAX(tgg),CHAR(255) from @tmp group by tggno

select gno,cuadate,workno,tggno,tgg,pno,product
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gmount),1)),0,30)) gmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,inmount),1)),0,30)) inmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unmount),1)),0,30)) unmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,smount),1)),0,30)) smount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stmount),1)),0,30)) stmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,diffmount),1)),0,30)) diffmount
from @tmp order by tggno,pno,gno
;
--------------------------------------------------------------------------------------------------*
z_worklp5:--z_worklp5
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bstationno nvarchar(50)
declare @t_estationno nvarchar(50)
declare @t_btggno nvarchar(50)
declare @t_etggno nvarchar(50)
declare @t_bpno nvarchar(50)
declare @t_epno nvarchar(50)
declare @t_bstoreno nvarchar(50)
declare @t_estoreno nvarchar(50)

set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bstationno = case when '#non' = [5] then '' else [5] end
set @t_estationno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_btggno = case when '#non' = [7] then '' else [7] end
set @t_etggno = case when '#non' = [8] then char(255) else [8] end
set @t_bpno = case when '#non' = [9] then '' else [9] end
set @t_epno = case when '#non' = [10] then CHAR(255) else [10] end
set @t_bstoreno = case when '#non' = [11] then '' else [11] end
set @t_estoreno = case when '#non' = [12] then CHAR(255) else [12] end

declare @t_stkdate nvarchar(30) --倉庫運算日期
set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)

--*********************************************************************
declare @tmp table(
	gno nvarchar(1),
	tggno nvarchar(50),
	tgg nvarchar(100),
	pno nvarchar(50),
	product nvarchar(100),
	gmount float,
	inmount float,
	unmount float,
	smount float,
	stmount float, 
	diffmount float,
	scmount float
)

insert @tmp 
	select
		'0',a.tggno,c.nick,b.productno,MAX(b.product)
		,isnull(round(SUM(isnull(b.mount,0)),2),0) mount
		,isnull(round(SUM(isnull(b.gmount,0)),2),0) inmount
		,isnull(round(SUM(case when isnull(b.emount,0)=0 and isnull(b.gmount,0)=0 then isnull(b.mount,0) else isnull(b.emount,0) end),2),0) unmount
		,isnull((select SUM(mount) mount from stkucc(@t_stkdate,'','') where productno=b.productno and storeno=d.noa),0)
		,isnull((select SUM(mount) mount from stkucc(@t_stkdate,'','') where productno=b.productno),0),0,0
	from view_work a
	left join view_works b on a.noa=b.noa
	left join tgg c on a.tggno=c.noa 
	left join store d on a.tggno=d.tggno
	where (isnull(a.enda,0)!='1') and (a.cuadate between @t_bdate and @t_edate)
		and (b.productno between @t_bpno and @t_epno) and a.tggno!=''
		and (a.tggno between @t_btggno and @t_etggno)
		and isnull(a.stationno,'')=''
		and (isnull(a.isfreeze,0)!= '1')
		and a.noa like 'W[0-9]%' 
		and (isnull(d.noa,'') between @t_bstoreno and @t_estoreno)
		--and left(a.noa,2)!='WJ'
	group by a.tggno,c.nick,b.productno,d.noa
	
update @tmp set scmount=smount-unmount
update @tmp set scmount=0 where scmount<0
update @tmp set diffmount=-1*(smount-unmount)
update @tmp set diffmount=0 where diffmount<0
update @tmp set stmount=stmount-smount
delete @tmp where diffmount=0

select
	gno,ROW_NUMBER()over(order by gno,tggno,pno) recno,tggno,tgg,pno,product
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gmount),1)),0,30)) gmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,inmount),1)),0,30)) inmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unmount),1)),0,30)) unmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,smount),1)),0,30)) smount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stmount),1)),0,30)) stmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,diffmount),1)),0,30)) diffmount
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,scmount),1)),0,30)) scmount
from @tmp order by gno,tggno,pno
;
----------------------------------------------------------------------------------------------------------*