getlunarcalendar:--get	lunarcalendar
	declare @t_mon nvarchar(10) = [1]
	---------------------------------------------------------------------------------------------
	declare @tmpa table(
		datea nvarchar(10),
		lunarmonth nvarchar(10),
		[days] int
	)
	insert into @tmpa(datea,lunarmonth,[days])
	select top 1 datea,lunarmonth,[days] from lunarcalendar where datea<=@t_mon+'/01' order by datea desc
	insert into @tmpa(datea,lunarmonth,[days])
	select top 1 datea,lunarmonth,[days] from lunarcalendar where datea>=@t_mon+'/31' order by datea
	insert into @tmpa(datea,lunarmonth,[days])
	select * from lunarcalendar a
	where datea between @t_mon+'/01' and @t_mon+'/31' 
	and not exists(select * from @tmpa where datea=a.datea)
	---------------------------------------------------------------------------------------------
	declare @t_bdate date
	declare @t_edate date
	select top 1 @t_bdate=cast(datea as date) from @tmpa order by datea
	select top 1 @t_edate=cast(datea as date) from @tmpa order by datea desc
	
	declare @t_date date = @t_bdate
	declare @tmpb table(
		n int,
		datea nvarchar(10),
		lunarmonth nvarchar(10),
		[days] int,
		lunardate int
	)
	declare @n int = 1
	while(@t_date<=@t_edate)
	begin
		insert into @tmpb(n,datea)values(@n,CONVERT(nvarchar,@t_date,111))
		set @t_date = DATEADD(dd,1,@t_date)
		set @n = @n + 1
	end
	update @tmpb set lunarmonth = b.lunarmonth,[days]=b.[days]
	from @tmpb a
	outer apply(select top 1 * from @tmpa where a.datea>=datea order by datea desc) b
	update @tmpb set lunardate =b.recno
	from @tmpb a
	left join (select ROW_NUMBER()over(partition by lunarmonth order by datea) recno,* from @tmpb )b on a.datea=b.datea
	-----------------------------------------------------------------------------
	select * from @tmpb where left(datea,len(@t_mon))=@t_mon;

getcalendar:-- get calendar  holiday
	declare @t_mon nvarchar(20) = [1]
	declare @tmp table(
		noa nvarchar(20),
		holiday nvarchar(max),
		memo nvarchar(max)
	)
	insert into @tmp(noa)
	select noa from holiday where LEFT(noa,len(@t_mon)) = @t_mon
	union
	select noa from calendar where LEFT(noa,len(@t_mon)) = @t_mon
	
	update @tmp set holiday=b.memo
	from @tmp a
	left join holiday b on a.noa=b.noa
	
	update @tmp set memo=b.memo
	from @tmp a
	left join calendar b on a.noa=b.noa
	
	select * from @tmp;

holiday:--calendar_holiday
	declare @t_userno nvarchar(max) = [1]
	declare @t_name nvarchar(max) = [2]
	declare @t_noa nvarchar(max) = [3]
	declare @t_memo nvarchar(max) = [4]
	declare @t_memo2 nvarchar(max) = [5]
	
	if exists(select * from holiday where noa=@t_noa)
	begin
		update holiday set memo=@t_memo,worker=@t_name,memo2=@t_memo2 where noa=@t_noa
		
		insert into drun(datea,timea,usera,action,noa,tablea,title,memo)
		select convert(nvarchar,getdate(),111),left(convert(nvarchar,getdate(),108),5)
			,@t_userno,'Update',@t_noa,'holiday','假日設定',@t_memo2
	end
	else
	begin
		insert into holiday(noa,memo,worker,memo2)
		select @t_noa,@t_memo,@t_name,@t_memo2
		
		insert into drun(datea,timea,usera,action,noa,tablea,title,memo)
		select convert(nvarchar,getdate(),111),left(convert(nvarchar,getdate(),108),5)
			,@t_userno,'Insert',@t_noa,'holiday','假日設定',@t_memo2
	end;
	