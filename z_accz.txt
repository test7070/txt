z_accz1:--z_accz1
SET QUOTED_IDENTIFIER OFF
declare @cmd nvarchar(max)

declare @t_baccznoa nvarchar(30)
declare @t_eaccznoa nvarchar(30)
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bindate nvarchar(10)
declare @t_eindate nvarchar(10)
--declare @t_bpartno nvarchar(30)
--declare @t_epartno nvarchar(30)

set @t_baccznoa = case when '#non'=[2] then '' else [2] end 
set @t_eaccznoa = case when '#non'=[3] then CHAR(255) else [3] end
set @t_bdate = case when '#non'=[4] then '' else [4] end 
set @t_edate = case when '#non'=[5] then CHAR(255) else [5] end
set @t_bindate = case when '#non'=[6] then '' else [6] end 
set @t_eindate = case when '#non'=[7] then CHAR(255) else [7] end
--set @t_bpartno = case when '#non'=[6] then '' else [6] end 
--set @t_epartno = case when '#non'=[7] then CHAR(255) else [7] end
declare @t_part nvarchar(max) = case when '#non'=[8] then '' else [8] end
-------------------------------------------------------------------------------------------------------------------------------------
declare @string nvarchar(max)
	declare @n int
	--解析要計算的種類
	--zzzzz@無部門
	IF OBJECT_ID('tempdb..#part')is not null
	BEGIN
		set @cmd = 'drop table #part'
		EXECUTE sp_executesql @cmd
	END
	create table #part(
		noa nvarchar(20)
	)
	set @string = @t_part
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #part select case when @string='zzzzz' then '' else @string end
			end
			break
		end
		insert into #part select case when LEFT(@string,@n-1)='zzzzz' then '' else LEFT(@string,@n-1) end 	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
-------------------------------------------------------------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	orderby int,
	noa nvarchar(20),
	namea nvarchar(50),
	mount float,
	unit nvarchar(4),
	isdepl bit,
	indate nvarchar(10),
	partno nvarchar(30),
	parts nvarchar(50),
	getmoney float,
	fixmoney float,
	endvalue float,
	base float,
	byear nvarchar(50),
	deplc float,
	accumulat float,
	notdepltotal float,
	memo nvarchar(max)
)
insert into @tmp
	select '0',1,a.acc1,a.namea,a.mount,a.unit,a.isdepl,a.indate,a.partno,a.part,a.money,a.fixmoney,
	case a.isdepl when 1 then 0 else a.endvalue end,0,a.year,isnull(b.depl,0),isnull(c.depl,0)+a.accumulat,0,a.memo
	from accz[1]_1 a
	left join (
		select a.acc1,sum(a.depl) depl from view_acczt a
		where a.mon between left(@t_bdate,6) and left(@t_edate,6)
		group by a.acc1
	) b on (a.acc1 = b.acc1)
	left join (
		select acc1,sum(depl) depl from view_acczt a
		where a.mon < left(@t_bdate,6)
		group by a.acc1
	) c on a.acc1 = c.acc1
	left join #part d on isnull(a.partno,'')=d.noa
	where ((a.acc1 between @t_baccznoa and @t_eaccznoa) or (len(@t_baccznoa)=4 and (left(a.acc1,4) between @t_baccznoa and @t_eaccznoa))) and
	 (d.noa is not null ) --(a.partno between @t_bpartno and @t_epartno)
	 and (a.indate between @t_bindate and @t_eindate)
	 and a.acc1 not in (select acczno from acczs[1]_1 where sale_date<=@t_edate)
	 
update @tmp set base = (getmoney+fixmoney)-endvalue where isdepl != 1
update @tmp set accumulat = deplc + accumulat
update @tmp set notdepltotal = (getmoney+fixmoney)-accumulat
---------列出主科目名稱
insert into @tmp(gno,orderby,noa,namea)
	select '0',0,b.acc1,b.acc2 from @tmp a
	left join acc[1]_1 b on left(a.noa,4) = left(b.acc1,4)
	group by b.acc1,b.acc2
---------列出科目小計
insert into @tmp
	select '1',2,left(noa,4),b.acc2,null,'','','','','',sum(getmoney),sum(fixmoney),sum(endvalue),
	sum(base),'',sum(deplc),sum(accumulat),sum(notdepltotal),'' 
	from @tmp a
	left join acc[1]_1 b on left(a.noa,4) = left(b.acc1,4)
	group by left(noa,4),b.acc2
---------列出總計
insert into @tmp
	select '2',3,char(255),'',null,'','','','','',sum(getmoney),sum(fixmoney),sum(endvalue),
	sum(base),'',sum(deplc),sum(accumulat),sum(notdepltotal),'' 
	from @tmp
	where gno=1
select
	gno,orderby,noa,namea,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
	unit,indate,parts,
	case getmoney when 0 then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,getmoney),1)),4,12)) end getmoney,
	case fixmoney when 0 then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,fixmoney),1)),4,12)) end fixmoney,
	case endvalue when 0 then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,endvalue),1)),4,12)) end endvalue,
	case base when 0 then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,base),1)),4,12)) end base,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,byear),1)),4,12)) byear,
	case deplc when 0 then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,deplc),1)),4,12)) end deplc,
	case accumulat when 0 then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,accumulat),1)),4,12)) end accumulat,
	case notdepltotal when 0 then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,notdepltotal),1)),4,12)) end notdepltotal,
	memo
from @tmp order by left(noa,4),orderby,gno;