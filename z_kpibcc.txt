z_kpibcc1:--z_kpibcc1
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bratea float
declare @t_eratea float
declare @t_bdayb float
declare @t_edayb float
declare @t_bratec float
declare @t_eratec float
declare @t_brated float
declare @t_erated float
declare @t_bratee float
declare @t_eratee float
declare @t_bratef float
declare @t_eratef float

set @t_bdate = case when '#non' = [2] then '[1]/01/01' else [2] end
set @t_edate = case when '#non' = [3] then '[1]/12/31' else [3] end

set @t_bratea = case when '#non'=[4] then -9999999 else cast([4] as float) end
set @t_eratea = case when '#non'=[5] then 9999999 else cast([5] as float) end
set @t_bdayb = case when '#non'=[6] then -9999999 else cast([6] as float) end
set @t_edayb = case when '#non'=[7] then 9999999 else cast([7] as float) end
set @t_bratec = case when '#non'=[8] then -9999999 else cast([8] as float) end
set @t_eratec = case when '#non'=[9] then 9999999 else cast([9] as float) end
set @t_brated = case when '#non'=[10] then -9999999 else cast([10] as float) end
set @t_erated = case when '#non'=[11] then 9999999 else cast([11] as float) end
set @t_bratee = case when '#non'=[12] then -9999999 else cast([12] as float) end
set @t_eratee = case when '#non'=[13] then 9999999 else cast([13] as float) end
set @t_bratef = case when '#non'=[14] then -9999999 else cast([14] as float) end
set @t_eratef = case when '#non'=[15] then 9999999 else cast([15] as float) end
--********************************************************************************
declare @kpi_tmp table( 
	gno nvarchar(1), 
	bno nvarchar(max), 
	bcc nvarchar(max), 
	kpi_value1 float, 
	kpi_value2 float, 
	kpi_value3 float, 
	kpi_value4 float, 
	kpi_value5 float, 
	kpi_value6 float  
) 

declare @t_bno nvarchar(50) 
declare @t_bcc nvarchar(90) 
declare @t_value float


insert into @kpi_tmp (gno,bno,bcc,kpi_value1)
select '0',b.bccno,MAX(b.bccname),case when isnull(sum(b.mount),0)=0 then 0 else round((sum(b.mount)-isnull(sum(b.errmount),0))/sum(b.mount),4) end *100 
from bccin a left join bccins b on a.noa=b.noa 
where a.datea between @t_bdate and @t_edate and a.typea='1' and b.bccno!='' --進貨 
group by b.bccno 

-------------------------------------------------------------------------------------------

declare cursor_table cursor for
select productno,MAX(product)product,AVG(xdays) from ( 
select ob.productno,ob.product 
,datediff(d,CONVERT(datetime,case when len(oa.odate)=9 then  CONVERT(nvarchar(10),CONVERT(int,left(oa.odate,3))+1911)+'/'+right(left(oa.odate,6),2)+'/'+right(oa.odate,2) else left(oa.odate,4)+right(left(oa.odate,7),2)+right(oa.odate,2) end) 
,CONVERT(datetime,case when len(bb.datea)=9 then CONVERT(nvarchar(10),CONVERT(int,left(bb.datea,3))+1911)+'/'+right(left(bb.datea,6),2)+'/'+right(bb.datea,2) else left(bb.datea,4)+right(left(bb.datea,7),2)+right(bb.datea,2) end)) xdays 
from view_ordc oa 
left join view_ordcs ob on  oa.accy=ob.accy and oa.noa=ob.noa 
left join bccins bb on ob.noa=bb.ordcno and ob.no2=bb.no2 and bb.ordcno!=''
where oa.odate between @t_bdate and @t_edate 
)tmp group by productno 
open cursor_table
fetch next from cursor_table
into @t_bno,@t_bcc,@t_value
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @kpi_tmp where bno=@t_bno)>0)
		begin
			update @kpi_tmp
			set kpi_value2=@t_value
			where bno=@t_bno
		end
		else
		begin
			insert into @kpi_tmp (gno,bno,bcc,kpi_value2)
			select '0'gno,@t_bno,@t_bcc,@t_value
		end
	
		fetch next from cursor_table
		into @t_bno,@t_bcc,@t_value
	end
close cursor_table
deallocate cursor_table

--------------------------------------------------------------------------------------

declare cursor_table cursor for
select productno,MAX(product)product
,cast((select count(*) 
from view_ordc oc 
left join view_ordcs od on oc.accy=od.accy and oc.noa=od.noa 
left join bccins bs on od.noa=bs.ordcno and od.no2=bs.no2 
where oc.odate between @t_bdate and @t_edate and bs.datea=oc.trandate and od.productno=ob.productno) as float) 
/COUNT(*) *100 
from view_ordc oa 
left join view_ordcs ob on oa.accy=ob.accy and oa.noa=ob.noa 
where oa.odate between @t_bdate and @t_edate  and ob.productno in (select noa from bcc)
group by ob.productno 
open cursor_table
fetch next from cursor_table
into @t_bno,@t_bcc,@t_value
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @kpi_tmp where bno=@t_bno)>0)
		begin
			update @kpi_tmp
			set kpi_value3=@t_value
			where bno=@t_bno
		end
		else
		begin
			insert into @kpi_tmp (gno,bno,bcc,kpi_value3)
			select '0'gno,@t_bno,@t_bcc,@t_value
		end
	
		fetch next from cursor_table
		into @t_bno,@t_bcc,@t_value
	end
close cursor_table
deallocate cursor_table

---------------------------------------------------------------------------------

declare cursor_table cursor for
select b.bccno,MAX(b.bccname), 
case when sum(case when a.typea='1' then b.total else 0 end)=0 and sum(case when a.typea='1' then 0 else b.total end)>0 then 100 
when sum(case when a.typea='1' then b.total else 0 end)=0 and sum(case when a.typea='1' then 0 else b.total end)=0 then 0 
else sum(case when a.typea='1' then 0 else b.total end)/sum(case when a.typea='1' then b.total else 0 end) *100 end 
from bccin a left join bccins b on a.noa=b.noa 
where a.datea between @t_bdate and @t_edate and b.bccno!=''
group by b.bccno
open cursor_table
fetch next from cursor_table
into @t_bno,@t_bcc,@t_value
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @kpi_tmp where bno=@t_bno)>0)
		begin
			update @kpi_tmp
			set kpi_value4=@t_value
			where bno=@t_bno
		end
		else
		begin
			insert into @kpi_tmp (gno,bno,bcc,kpi_value4)
			select '0'gno,@t_bno,@t_bcc,@t_value
		end
	
		fetch next from cursor_table
		into @t_bno,@t_bcc,@t_value
	end
close cursor_table
deallocate cursor_table

-------------------------------------------------------------------------------------------

declare @t_pbdate nvarchar(20) 
declare @t_pedate nvarchar(20) 
set @t_pbdate=right('0'+cast(cast(left(@t_bdate,3) as int)-1 as nvarchar(20)),3)+right(@t_bdate,6) 
set @t_pedate=right('0'+cast(cast(left(@t_edate,3) as int)-1 as nvarchar(20)),3)+right(@t_edate,6) 

declare cursor_table cursor for
select b.bccno,MAX(b.bccname)
	,case when sum((case when a.typea='1' then 1 else -1 end) * b.total) = 0 then 0
	else (isnull((select sum((case when c.typea='1' then 1 else -1 end) * d.total) 
	from bccin c left join bccins d on c.noa=d.noa 
	where c.datea between @t_pbdate and @t_pedate and d.bccno=b.bccno ),0) 
	-sum((case when a.typea='1' then 1 else -1 end) * b.total)) 
	/sum((case when a.typea='1' then 1 else -1 end) * b.total) *100 end 
from bccin a left join bccins b on a.noa=b.noa 
where a.datea between @t_bdate and @t_edate and b.bccno!=''
group by b.bccno 
open cursor_table
fetch next from cursor_table
into @t_bno,@t_bcc,@t_value
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @kpi_tmp where bno=@t_bno)>0)
		begin
			update @kpi_tmp
			set kpi_value5=@t_value
			where bno=@t_bno
		end
		else
		begin
			insert into @kpi_tmp (gno,bno,bcc,kpi_value5)
			select '0'gno,@t_bno,@t_bcc,@t_value
		end
	
		fetch next from cursor_table
		into @t_bno,@t_bcc,@t_value
	end
close cursor_table
deallocate cursor_table

----------------------------------------------------------------------------------------

declare @t_pbdate3 nvarchar(20) 
set @t_pbdate3=
left(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(m,-3,CONVERT(datetime ,CONVERT(nvarchar(10),case when len(@t_bdate)=9 then CONVERT(nvarchar(10),CONVERT(int,left(@t_bdate,3))+1911)+right(left(@t_bdate,6),2)+right(@t_bdate,2) else left(@t_bdate,4)+right(left(@t_bdate,7),2)+right(@t_bdate,2) end)) ),12 )+0890000),7),3)+'/'+
right(left(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(m,-3,CONVERT(datetime ,CONVERT(nvarchar(10),case when len(@t_bdate)=9 then CONVERT(nvarchar(10),CONVERT(int,left(@t_bdate,3))+1911)+right(left(@t_bdate,6),2)+right(@t_bdate,2) else left(@t_bdate,4)+right(left(@t_bdate,7),2)+right(@t_bdate,2) end)) ),12 )+0890000),7),5),2)+'/'+
right(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(m,-3,CONVERT(datetime ,CONVERT(nvarchar(10),case when len(@t_bdate)=9 then CONVERT(nvarchar(10),CONVERT(int,left(@t_bdate,3))+1911)+right(left(@t_bdate,6),2)+right(@t_bdate,2) else left(@t_bdate,4)+right(left(@t_bdate,7),2)+right(@t_bdate,2) end)) ),12 )+0890000),7),2)


declare cursor_table cursor for
--總存貨
select bccno,MAX(bccname),
case when SUM(mount)<=0 then 0 else
	--呆滯存貨
	isnull((select SUM(mount) from (
		--之前進/退貨
		select a.datea,b.bccno,b.bccname
		,(case when a.typea='1' then 1 else -1 end )*b.mount mount
		from bccin a left join bccins b on a.noa=b.noa where a.datea < @t_pbdate3
		union all
		--之前領料
		select a.datea,b.bccno,b.bccname,-1*(mount-bkbcc) mount
		from bccout a left join bccouts b on a.noa=b.noa where a.datea < @t_pbdate3
		union all
		--進期領料
		select a.datea,b.bccno,b.bccname,-1*(mount-bkbcc) mount
		from bccout a left join bccouts b on a.noa=b.noa 
		where a.datea between @t_bdate and @t_edate
	)tmp where tmp.bccno=tmpa.bccno),0)
/SUM(mount) end *100 from (
--進/退貨
select a.datea,b.bccno,b.bccname
,(case when a.typea='1' then 1 else -1 end )*b.mount mount
from bccin a left join bccins b on a.noa=b.noa 
union all
--領料
select a.datea,b.bccno,b.bccname,-1*(mount-bkbcc) mount
from bccout a left join bccouts b on a.noa=b.noa 
)tmpa where datea <= @t_edate and bccno!='' and bccno in (select noa from bcc) group by bccno
open cursor_table
fetch next from cursor_table
into @t_bno,@t_bcc,@t_value
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @kpi_tmp where bno=@t_bno)>0)
		begin
			update @kpi_tmp
			set kpi_value6=@t_value
			where bno=@t_bno
		end
		else
		begin
			insert into @kpi_tmp (gno,bno,bcc,kpi_value6)
			select '0'gno,@t_bno,@t_bcc,@t_value
		end
	
		fetch next from cursor_table
		into @t_bno,@t_bcc,@t_value
	end
close cursor_table
deallocate cursor_table

select gno,bno,bcc
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value1),1)),0,30)) +' %' kpi_value1
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value2),1)),4,30)) +' 天'kpi_value2
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value3),1)),0,30)) +' %' kpi_value3
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value4),1)),0,30)) +' %' kpi_value4
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value5),1)),0,30)) +' %' kpi_value5
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value6),1)),0,30)) +' %' kpi_value6
from @kpi_tmp
where (isnull(kpi_value1,0) between @t_bratea and @t_eratea)
and (isnull(kpi_value2,0) between @t_bdayb and @t_edayb)
and (isnull(kpi_value3,0) between @t_bratec and @t_eratec)
and (isnull(kpi_value4,0) between @t_brated and @t_erated)
and (isnull(kpi_value5,0) between @t_bratee and @t_eratee)
and (isnull(kpi_value6,0) between @t_bratef and @t_eratef)
order by bno ;
--******************************************************************************************
z_kpibcc2:--z_kpibcc2
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bratea float
declare @t_eratea float
declare @t_bdayb float
declare @t_edayb float
declare @t_bratec float
declare @t_eratec float
declare @t_brated float
declare @t_erated float
declare @t_bratee float
declare @t_eratee float

set @t_bdate = case when '#non' = [2] then '[1]/01/01' else [2] end
set @t_edate = case when '#non' = [3] then '[1]/12/31' else [3] end

set @t_bratea = case when '#non'=[4] then -9999999 else cast([4] as float) end
set @t_eratea = case when '#non'=[5] then 9999999 else cast([5] as float) end
set @t_bdayb = case when '#non'=[6] then -9999999 else cast([6] as float) end
set @t_edayb = case when '#non'=[7] then 9999999 else cast([7] as float) end
set @t_bratec = case when '#non'=[8] then -9999999 else cast([8] as float) end
set @t_eratec = case when '#non'=[9] then 9999999 else cast([9] as float) end
set @t_brated = case when '#non'=[10] then -9999999 else cast([10] as float) end
set @t_erated = case when '#non'=[11] then 9999999 else cast([11] as float) end
set @t_bratee = case when '#non'=[12] then -9999999 else cast([12] as float) end
set @t_eratee = case when '#non'=[13] then 9999999 else cast([13] as float) end
--********************************************************************************
declare @kpi_tmp table( 
	gno nvarchar(1), 
	tno nvarchar(max), 
	tgg nvarchar(max), 
	kpi_value1 float, 
	kpi_value2 float, 
	kpi_value3 float, 
	kpi_value4 float, 
	kpi_value5 float
) 

declare @t_tno nvarchar(50) 
declare @t_tgg nvarchar(90) 
declare @t_value float


insert into @kpi_tmp (gno,tno,tgg,kpi_value1)
select '0',a.tggno,MAX(a.tgg),round((sum(b.mount)-sum(b.errmount))/sum(b.mount),4)*100 
from bccin a left join bccins b on a.noa=b.noa 
where a.datea between @t_bdate and @t_edate and a.tggno!='' and a.typea='1'--進貨 
group by tggno 

-------------------------------------------------------------------------------------------

declare cursor_table cursor for
select tggno,MAX(tgg)tggs,AVG(xdays) from ( 
select oa.tggno,oa.tgg 
,datediff(d,CONVERT(datetime,CONVERT(nvarchar(10),CONVERT(int,left(oa.odate,3))+1911)+'/'+right(left(oa.odate,6),2)+'/'+right(oa.odate,2)) 
,CONVERT(datetime,CONVERT(nvarchar(10),CONVERT(int,left(bb.datea,3))+1911)+'/'+right(left(bb.datea,6),2)+'/'+right(bb.datea,2))) xdays 
from view_ordc[1] oa left join bccin bb on oa.noa=bb.ordcno
where oa.odate between @t_bdate and @t_edate and oa.tggno!='' and bb.ordcno!=''
)tmp group by tggno
open cursor_table
fetch next from cursor_table
into @t_tno,@t_tgg,@t_value
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @kpi_tmp where tno=@t_tno)>0)
		begin
			update @kpi_tmp
			set kpi_value2=@t_value
			where tno=@t_tno
		end
		else
		begin
			insert into @kpi_tmp (gno,tno,tgg,kpi_value2)
			select '0'gno,@t_tno,@t_tgg,@t_value
		end
	
		fetch next from cursor_table
		into @t_tno,@t_tgg,@t_value
	end
close cursor_table
deallocate cursor_table

-------------------------------------------------------------------------------------------

declare cursor_table cursor for
select tggno,MAX(tgg), 
cast((select COUNT(*)from bccin a right join ordc[1] b on a.ordcno=b.noa 
where (b.odate between @t_bdate and @t_edate) 
--只有資材的採購單
and b.noa in (select a.noa from view_ordcs[1] a left join bcc b on a.productno=b.noa where b.noa!='' group by a.noa)
and a.datea=b.trandate and b.tggno=tmp.tggno)as float)--准時數 
/COUNT(*)--預計進貨筆數(採購筆數) 
*100 from ordc[1] tmp where odate between @t_bdate and @t_edate and tggno!='' 
--只有資材的採購單
and noa in (select a.noa from view_ordcs[1] a left join bcc b on a.productno=b.noa where b.noa!='' group by a.noa)
group by tmp.tggno 
open cursor_table
fetch next from cursor_table
into @t_tno,@t_tgg,@t_value
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @kpi_tmp where tno=@t_tno)>0)
		begin
			update @kpi_tmp
			set kpi_value3=@t_value
			where tno=@t_tno
		end
		else
		begin
			insert into @kpi_tmp (gno,tno,tgg,kpi_value3)
			select '0'gno,@t_tno,@t_tgg,@t_value
		end
	
		fetch next from cursor_table
		into @t_tno,@t_tgg,@t_value
	end
close cursor_table
deallocate cursor_table

--------------------------------------------------------------------------------------

declare cursor_table cursor for
select a.tggno,MAX(a.tgg),
case when sum(case when a.typea='1' then b.total else 0 end)=0 and sum(case when a.typea='1' then 0 else b.total end)>0 then 100 
when sum(case when a.typea='1' then b.total else 0 end)=0 and sum(case when a.typea='1' then 0 else b.total end)=0 then 0 
else sum(case when a.typea='1' then 0 else b.total end)/sum(case when a.typea='1' then b.total else 0 end) *100 end 
from bccin a left join bccins b on a.noa=b.noa 
where a.datea between @t_bdate and @t_edate and a.tggno!=''
group by a.tggno 
open cursor_table
fetch next from cursor_table
into @t_tno,@t_tgg,@t_value
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @kpi_tmp where tno=@t_tno)>0)
		begin
			update @kpi_tmp
			set kpi_value4=@t_value
			where tno=@t_tno
		end
		else
		begin
			insert into @kpi_tmp (gno,tno,tgg,kpi_value4)
			select '0'gno,@t_tno,@t_tgg,@t_value
		end
	
		fetch next from cursor_table
		into @t_tno,@t_tgg,@t_value
	end
close cursor_table
deallocate cursor_table

--------------------------------------------------------------------------------------

declare @t_pbdate nvarchar(20) 
declare @t_pedate nvarchar(20) 
set @t_pbdate=right('0'+cast(cast(left(@t_bdate,3) as int)-1 as nvarchar(20)),3)+right(@t_bdate,6) 
set @t_pedate=right('0'+cast(cast(left(@t_edate,3) as int)-1 as nvarchar(20)),3)+right(@t_edate,6) 

declare cursor_table cursor for
select tggno,MAX(tgg),
case when sum((case when a.typea='1' then 1 else -1 end) * a.total)!=0 then(
(isnull((select sum((case when c.typea='1' then 1 else -1 end) * c.total) 
from bccin c  where c.datea between @t_pbdate and @t_pedate and a.tggno=c.tggno ),0) 
-sum((case when a.typea='1' then 1 else -1 end) * a.total)) 
/sum((case when a.typea='1' then 1 else -1 end) * a.total) *100) else '' end 
from bccin a where datea between @t_bdate and @t_edate and tggno!='' group by tggno 
open cursor_table
fetch next from cursor_table
into @t_tno,@t_tgg,@t_value
	while(@@FETCH_STATUS <> -1)
	begin
		if((select COUNT(*) from @kpi_tmp where tno=@t_tno)>0)
		begin
			update @kpi_tmp
			set kpi_value5=@t_value
			where tno=@t_tno
		end
		else
		begin
			insert into @kpi_tmp (gno,tno,tgg,kpi_value5)
			select '0'gno,@t_tno,@t_tgg,@t_value
		end
	
		fetch next from cursor_table
		into @t_tno,@t_tgg,@t_value
	end
close cursor_table
deallocate cursor_table

--------------------------------------------------------------------------------------

select gno,tno,tgg
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value1),1)),0,30)) +' %' kpi_value1
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value2),1)),4,30)) +' 天'kpi_value2
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value3),1)),0,30)) +' %' kpi_value3
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value4),1)),0,30)) +' %' kpi_value4
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,kpi_value5),1)),0,30)) +' %' kpi_value5
from @kpi_tmp
where (isnull(kpi_value1,0) between @t_bratea and @t_eratea)
and (isnull(kpi_value2,0) between @t_bdayb and @t_edayb)
and (isnull(kpi_value3,0) between @t_bratec and @t_eratec)
and (isnull(kpi_value4,0) between @t_brated and @t_erated)
and (isnull(kpi_value5,0) between @t_bratee and @t_eratee)
order by tno ;