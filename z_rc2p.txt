z_rc2p1:--z_rc2p1
declare @t_bxnoa nvarchar(20)
declare @t_exnoa nvarchar(20)
declare @t_isspec nvarchar(20)='[12]'
declare @t_pageline int = 5--------一頁幾行
set @t_bxnoa = case when '#non' = [2] then '' else [2] end
set @t_exnoa = case when '#non' = [3] then CHAR(255) else [3] end
declare @tmp table(
	gno nvarchar(1),
	idno int identity(0,1),
	orderno int,
	pageno int,
	a_noa nvarchar(50),
	a_typea nvarchar(50),
	a_comp nvarchar(90),
	a_tel nvarchar(90),
	a_sales nvarchar(50),
	a_addr nvarchar(max),
	a_datea nvarchar(10),
	a_memo nvarchar(max),
	a_tax float,
	a_money float,
	a_total float,
	b_productno nvarchar(50),
	b_products nvarchar(90),
	b_unit nvarchar(50),
	b_mount float,
	b_price float,
	b_total float,
	b_memo nvarchar(max)
)
insert into @tmp
select
	'0',
	ROW_NUMBER()over(partition by a.noa order by a.noa),1
	,a.noa,a.typea,c.comp,a.tel,a.sales,a.addr,a.datea,a.memo
	,(case when a.taxtype='1' then round(a.money*0.05,0) when a.taxtype='3' then round(a.total/1.05*0.05,0) else 0 end)
	,(case when a.taxtype='1' then a.money when a.taxtype='3' then a.total-round(a.total/1.05*0.05,0)else a.money end)
	,(case when a.taxtype='1' then a.money+round(a.money*0.05,0) when a.taxtype='3' then a.total else a.money end)
	,b.productno,b.product+(case when @t_isspec='1' then ' '+b.spec else '' end)
	,b.unit,b.mount,b.price,b.total,b.memo
from view_rc2 a
left join view_rc2s b on a.noa = b.noa
left join tgg c on a.tggno = c.noa
where (a.noa between @t_bxnoa and @t_exnoa)

declare @a_noa nvarchar(30)
declare @a_count int
declare @idno int
declare @k int = 0 ----差幾頁
declare @pageCount int
declare @orderno int
declare @pageno int

declare cursor_table cursor for
	select a_noa,count(*),max(orderno) from @tmp group by a_noa
open cursor_table
fetch next from cursor_table
into @a_noa,@a_count,@orderno
while(@@FETCH_STATUS <> -1)
begin		
	if(@a_count > @t_pageline)
	begin
		set @k = CEILING((cast(@a_count as float)/@t_pageline))
		while(@k > 0)
		begin
			update @tmp set pageno = @k where orderno > ((@k-1)*@t_pageline) and orderno <= (@k*@t_pageline)
			set @k -=1
		end
	end
	fetch next from cursor_table
	into @a_noa,@a_count,@orderno
end
close cursor_table
deallocate cursor_table
update @tmp set orderno = orderno-((pageno-1)*@t_pageline)

declare cursor_table cursor for
	select distinct a_noa,max(orderno),pageno,min(idno),count(*) from @tmp group by a_noa,pageno
open cursor_table
fetch next from cursor_table
into @a_noa,@orderno,@pageno,@idno,@a_count
while(@@FETCH_STATUS <> -1)
begin		
	set @k = @t_pageline -(@a_count%@t_pageline)
	set @pageCount = @a_count/@t_pageline
	if(@k < @t_pageline and (@pageCount =0))
	begin
		while(@k > 0)
		begin
			insert into @tmp(gno,orderno,pageno,a_noa,a_memo,a_typea,a_comp)
				select '0',(@orderno+1),@pageno,@a_noa,a_memo,a_typea,a_comp from @tmp where idno = @idno
			set @k = @k-1
			set @orderno = @orderno +1
		end
	end
	insert into @tmp(gno,orderno,pageno,a_noa,a_typea,a_comp,a_tax,a_money)
		select '1',(@t_pageline+1),pageno,a_noa,a_typea,a_comp,max(a_tax),sum(b_total) from @tmp where gno=0 and a_noa=@a_noa and pageno=@pageno group by a_noa,pageno,a_typea,a_comp
	insert into @tmp(gno,orderno,pageno,a_noa,a_typea,a_memo) 
		select '2',(@t_pageline+2),pageno,a_noa,a_typea,a_memo from @tmp where gno=0 and a_noa=@a_noa and pageno=@pageno group by a_noa,pageno,a_typea,a_memo
	fetch next from cursor_table
	into @a_noa,@orderno,@pageno,@idno,@a_count
end
close cursor_table
deallocate cursor_table
update @tmp set a_total = a_tax + a_money where gno = '1'
update @tmp set a_typea = case a_typea when '1' then '進' when '2' then '退' end
select
	gno,a_noa,a_typea,a_comp,a_tel,a_sales,a_addr,a_datea,replace(a_memo,'chr(10)','<BR>') a_memo,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a_tax),1)),4,12)) a_tax,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a_money),1)),4,12)) a_money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a_total),1)),4,12)) a_total,
	b_productno,b_products,b_unit,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_mount),1)),4,12)) b_mount,b_price,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_total),1)),4,12)) b_total,b_memo
from @tmp order by a_noa desc,pageno,gno,orderno;