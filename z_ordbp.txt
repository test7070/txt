z_ordbpdc1:--z_ordbpdc1
	declare @t_bno nvarchar(20) = case when '#non' = [1] then '' else [1] end
	declare @t_eno nvarchar(20) = case when '#non' = [2] then char(255) else [2] end
declare @t_pageline int = 6
	----------------------------------------------------------------------------------------
declare @tmp table(
		aa int,
		bb int,
		gno nvarchar(10),
		pno nvarchar(10),
		accy nvarchar(10),
		noa nvarchar(20),
		no3 nvarchar(10),
		no4 nvarchar(10),
		odate nvarchar(10),
		
		partno nvarchar(50),
		part nvarchar(100),
		salesno nvarchar(50),
		sales nvarchar(100),
		tggno nvarchar(20),
		tgg nvarchar(50),
		addr nvarchar(max),
		tel nvarchar(max),
		fax nvarchar(max),
		
		kind nvarchar(20),
		trantype nvarchar(20),
		paytype nvarchar(20),
		
		amoney float,
		atax float,
		atotal float,
		
		productno nvarchar(20),
		product nvarchar(50),
		unit nvarchar(20),
		mount float,
		price float,
		total float,
		memo nvarchar(max),
		amemo nvarchar(max),
		memos nvarchar(max)
	)
	insert into @tmp(gno,pno,accy,noa,no3,odate,partno,part,salesno,sales
		,tggno,tgg,addr,tel,fax
		,kind,trantype,paytype,amoney,atax,atotal
		,productno,product,unit,mount,price,total,memo,amemo,memos)
		
	select '1','2',a.accy,a.noa,b.no3,b.odate,a.partno,a.part,a.salesno,a.sales
		,a.tggno,a.tgg,a.addr,c.tel,c.fax
		,a.kind,a.trantype,a.paytype,a.money,a.tax,a.total
		,b.productno,b.product,b.unit,b.mount,b.price,b.total
		,replace(b.memo,'chr(10)','<BR>'),replace(a.memo,'chr(10)','<BR>'),''
	from view_ordb a
	left join view_ordbs b on a.noa=b.noa
	left join tgg c on a.tggno = c.noa
	where a.noa between @t_bno and @t_eno
	
	insert @tmp(gno,pno,accy,noa,no3,partno,part,salesno,sales
		,tggno,tgg,addr,tel,fax
		,kind,trantype,paytype,amoney,atax,atotal,amemo)
		
	select '2','2',a.accy,a.noa,char(255),a.partno,a.part,a.salesno,a.sales
		,a.tggno,a.tgg,a.addr,c.tel,c.fax
		,a.kind,a.trantype,a.paytype,a.money,a.tax,a.total,a.memo
	from view_ordb a
	left join tgg c on a.tggno = c.noa
	where a.noa between @t_bno and @t_eno
	
	update @tmp set tggno=a.tggno,tgg=c.comp,addr=c.addr_comp,tel=c.tel,fax=c.fax 
	from @tmp a 
	left join tgg c on a.tggno=c.noa 
	where len(isnull(a.tggno,''))=0 
	---------------------------------------------------------------------------------------------------------------
	declare @n int 
	declare @accy nvarchar(20)
	declare @noa nvarchar(20)
	declare @tggno nvarchar(20)
	declare @memo1 nvarchar(max)

	declare cursor_table cursor for
	select isnull(noa,''),count(1) from @tmp group by isnull(noa,'')
	open cursor_table
	fetch next from cursor_table
	into @noa,@n
	while(@@FETCH_STATUS <> -1)
	begin		
		if(@n%@t_pageline!=0)
		begin
		
			while (@n+1)%@t_pageline!=0
			begin
				set @memo1 = '－－以下空白－－'
				insert into @tmp(gno,pno,noa,no3)values('3','2',@noa,RIGHT('0000000000'+CAST(@n as nvarchar),3))
				set @n = @n + 1
			end
			
			insert into @tmp(gno,pno,accy,noa,no3,no4,odate,partno,part,sales,tggno
					,tgg,addr,tel,fax,kind,paytype,trantype,total,memos)
			select top 1 '3','3',pno,noa,no3,no4,odate,partno,part,sales,tggno,tgg
				,addr,tel,fax,kind,paytype,trantype,total,@memo1
				from @tmp where noa=@noa and gno='1' order by no3 desc
		end
			
		fetch next from cursor_table
		into @noa,@n
	end
	close cursor_table
	deallocate cursor_table
	
	update @tmp set aa=ceiling(cast(b.recno as float)/@t_pageline),bb=ceiling(c.n/@t_pageline)
	from @tmp a
	left join (select ROW_NUMBER()over(PARTITION by isnull(noa,'') order by pno,isnull(accy,char(255)),isnull(no3,''),isnull(no4,'')) recno,* from @tmp) b 
		on isnull(a.noa,'')=isnull(b.noa,'') and isnull(a.accy,char(255))=isnull(b.accy,char(255)) and isnull(a.no3,'')=isnull(b.no3,'') and isnull(a.no4,'')=isnull(b.no4,'')
	left join (select isnull(noa,'')noa,COUNT(1) n from @tmp group by isnull(noa,'')) c on isnull(a.noa,'')=c.noa
		
	select ROW_NUMBER()over(partition by isnull(noa,'') order by isnull(accy,char(255)),isnull(no3,''),isnull(no4,''))rr
	,productno ppno
	,tggno tno
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) ctotal
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) cmount
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) cprice
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,amoney),1)),4,12)) amoney
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,atax),1)),4,12)) atax
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,atotal),1)),4,12)) atotal
	,(select worker from view_ordb where noa=a.noa)worker,*
	from @tmp a
	order by isnull(noa,''),isnull(no3,''),pno,isnull(accy,char(255)),isnull(no4,'');
--*****************************************************************************************************
z_ordbpdc2:--z_ordbpdc2
declare @t_kind nvarchar(90) = case when '#non' = [3] then '' else [3] end
declare @t_bdate nvarchar(10) = case when '#non' = [4] then '' else [4] end
declare @t_edate nvarchar(10) = case when '#non' = [5] then char(255) else [5] end
declare @t_bcno nvarchar(90) = case when '#non' = [6] then '' else [6] end
declare @t_ecno nvarchar(90) = case when '#non' = [7] then char(255) else [7] end
declare @t_bpartno nvarchar(90) = case when '#non' = [8] then '' else [8] end
declare @t_epartno nvarchar(90) = case when '#non' = [9] then char(255) else [9] end
declare @t_btggno nvarchar(90) = case when '#non' = [10] then '' else [10] end
declare @t_etggno nvarchar(90) = case when '#non' = [11] then char(255) else [11] end
declare @t_bpno nvarchar(90) = case when '#non' = [12] then '' else [12] end
declare @t_epno nvarchar(90) = case when '#non' = [13] then char(255) else [13] end
declare @t_apv nvarchar(90) = case when '#non' = [14] then '' else [14] end
declare @t_enda nvarchar(90) = case when '#non' = [15] then '' else [15] end

declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(50),
	noq nvarchar(50),
	pno nvarchar(50),
	product nvarchar(100),
	unit nvarchar(20),
	tgg nvarchar(100),
	odate nvarchar(10),
	datea nvarchar(10),
	mount float,
	price float,
	total float,
	cmount float,
	rmount float,
	umount float,
	apv nvarchar(10),
	worker nvarchar(50)
)
	
	insert @tmp
	select '0',a.noa,b.no3,b.productno,b.product,b.unit,a.tgg,a.odate,a.datea,b.mount,b.price,b.total
	,isnull((select sum(mount) from view_ordcs where productno=b.productno and ordbno=b.noa and no3=b.no3),0)
	,isnull((select sum(c1) from view_ordcs where productno=b.productno and ordbno=b.noa and no3=b.no3),0)
	,isnull((select sum(notv) from view_ordcs where productno=b.productno and ordbno=b.noa and no3=b.no3),0)
	,a.apv,a.worker
	from view_ordb a left join view_ordbs b on a.noa=b.noa
	where (len(@t_kind)=0 or @t_kind=a.kind) 
	and a.odate between @t_bdate and @t_edate
	and a.cno between @t_bcno and @t_ecno
	and a.partno between @t_bpartno and @t_epartno
	and a.tggno between @t_btggno and @t_etggno
	and b.productno between @t_bpno and @t_epno
	and (len(@t_apv)=0 or @t_apv=a.apv) 
	and (len(@t_enda)=0 or @t_enda=a.enda) 


select gno,RANK() OVER(ORDER BY noa,noq,pno) rr,(case when len(@t_kind)=0 then '全部' else @t_kind end) kind
,noa,pno,product,unit,tgg,odate,datea,apv aa,worker
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),4,30)) mount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,price),1)),0,30)) price
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total),1)),4,30)) total
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,cmount),1)),4,30)) cmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,rmount),1)),4,30)) rmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,umount),1)),4,30)) umount
from @tmp order by noa,noq,pno;
----**************************************************************************************
