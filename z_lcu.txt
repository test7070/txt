z_lcu1:--z_lcu1
	declare @t_lcno nvarchar(50)
	declare @t_typea nvarchar(50)
	declare @t_bcustno nvarchar(50)
	declare @t_ecustno nvarchar(50)
	declare @t_bcno nvarchar(50)
	declare @t_ecno nvarchar(50)
	declare @t_bidate nvarchar(10)
	declare @t_eidate nvarchar(10)
	declare @t_bedate nvarchar(10)
	declare @t_eedate nvarchar(10)
	declare @t_bndate nvarchar(10)
	declare @t_endate nvarchar(10)
	
	set @t_lcno = case when '#non'=[2] then '' else [2] end
	set @t_typea = case when '#non'=[3] then '' else [3] end
	set @t_bcustno = case when '#non'=[4] then '' else [4] end
	set @t_ecustno = case when '#non'=[5] then char(255) else [5] end
	set @t_bcno = case when '#non'=[6] then '' else [6] end
	set @t_ecno = case when '#non'=[7] then char(255) else [7] end
	set @t_bidate = case when '#non'=[8] then '' else [8] end
	set @t_eidate = case when '#non'=[9] then char(255) else [9] end
	set @t_bedate = case when '#non'=[10] then '' else [10] end
	set @t_eedate = case when '#non'=[11] then char(255) else [11] end
	set @t_bndate = case when '#non'=[12] then '' else [12] end
	set @t_endate = case when '#non'=[13] then char(255) else [13] end
	
	--*****************************************************************************************	
declare @tmp table(
	gno nvarchar(2),
	lcno nvarchar(50),
	typea nvarchar(50),
	custno nvarchar(50),
	custcomp nvarchar(50),
	cno nvarchar(50),
	acomp nvarchar(50),
	ibankno nvarchar(50),
	ibanks nvarchar(50),
	abankno nvarchar(50),
	abanks nvarchar(50),
	nbankno nvarchar(50),
	nbanks nvarchar(50),
	coin nvarchar(50),
	floata float,
	money float,
	unpay float,
	idate nvarchar(10),
	edate nvarchar(10),
	odate nvarchar(10),
	ndate nvarchar(10),
	ummno nvarchar(50),
	ummdate nvarchar(10),
	vccno nvarchar(50),
	vccdate nvarchar(10),
	vcctotal float,
	zcount float
)
	
insert @tmp
select '0'gno,a.lcno,case when a.typea='1' then '即期' else '遠期' end typea 
,a.custno,a.comp custcomp 
,a.cno,a.acomp 
,a.issuingbankno ibankno,a.issuingbank ibanks 
,a.advisingbankno abankno,a.advisingbank abanks 
,a.negotiatingbankno nbankno,a.negotiatingbank nbanks 
,a.coin,a.floata 
,a.money,a.money-isnull((select SUM(money) from lcv where lcno=a.lcno),0) unpay 
,a.issuedate idate,a.edate 
,a.onboarddate odate,a.negotiatingdate ndate 
,d.noa ummno,d.datea ummdate 
,c.noa vccno,c.datea vccdate,isnull(c.total,0) vcctotal,0
from lcu a left join ordei[1] b on a.lcno=b.lcno 
left join vcc[1] c on c.ordeno=b.noa 
left join umms d on d.vccno=c.noa 
where (len(@t_lcno)=0 or @t_lcno=a.lcno) and (len(@t_typea)=0 or a.typea=@t_typea ) 
and (a.custno between @t_bcustno and @t_ecustno) 
and (a.cno between @t_bcno and @t_ecno) 
and (a.issuedate between @t_bidate and @t_eidate) 
and (a.edate between @t_bedate and @t_eedate) 
and (a.negotiatingdate between @t_bndate and @t_endate)

insert @tmp(gno,lcno,coin,ummno,vccno,vcctotal)
select '1',lcno,coin,ummno,vccno,SUM(vcctotal) from @tmp
group by lcno,coin,ummno,vccno 

insert @tmp(gno,lcno,coin,money,unpay,zcount)
select '2','ZZZZZZZZZZZZZZZZZZ',coin,SUM(money),SUM(unpay),COUNT(*) from @tmp
where gno='0'
group by coin

select gno,lcno,typea,custno,custcomp,cno,acomp,ibankno,ibanks,abankno,abanks,nbankno,nbanks,coin
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,floata),1)),0,30)) floata
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay
	,idate,edate,odate,ndate,ummno,ummdate,vccno,vccdate
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,vcctotal),1)),4,12)) vcctotal
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,zcount),1)),4,12)) zcount 
from @tmp order by coin,lcno,gno,ummno,vccno

;
--*********************************************************************************************
z_lcu2:--z_lcu2
	declare @t_lcno nvarchar(50)
	declare @t_typea nvarchar(50)
	declare @t_bcustno nvarchar(50)
	declare @t_ecustno nvarchar(50)
	declare @t_bcno nvarchar(50)
	declare @t_ecno nvarchar(50)
	declare @t_bidate nvarchar(10)
	declare @t_eidate nvarchar(10)
	declare @t_bedate nvarchar(10)
	declare @t_eedate nvarchar(10)
	declare @t_bndate nvarchar(10)
	declare @t_endate nvarchar(10)
	
	set @t_lcno = case when '#non'=[2] then '' else [2] end
	set @t_typea = case when '#non'=[3] then '' else [3] end
	set @t_bcustno = case when '#non'=[4] then '' else [4] end
	set @t_ecustno = case when '#non'=[5] then char(255) else [5] end
	set @t_bcno = case when '#non'=[6] then '' else [6] end
	set @t_ecno = case when '#non'=[7] then char(255) else [7] end
	set @t_bidate = case when '#non'=[8] then '' else [8] end
	set @t_eidate = case when '#non'=[9] then char(255) else [9] end
	set @t_bedate = case when '#non'=[10] then '' else [10] end
	set @t_eedate = case when '#non'=[11] then char(255) else [11] end
	set @t_bndate = case when '#non'=[12] then '' else [12] end
	set @t_endate = case when '#non'=[13] then char(255) else [13] end
	
	--*****************************************************************************************	
declare @tmp table(
	gno nvarchar(2),
	lcno nvarchar(50),
	typea nvarchar(50),
	custno nvarchar(50),
	custcomp nvarchar(50),
	cno nvarchar(50),
	acomp nvarchar(50),
	ibankno nvarchar(50),
	ibanks nvarchar(50),
	abankno nvarchar(50),
	abanks nvarchar(50),
	nbankno nvarchar(50),
	nbanks nvarchar(50),
	coin nvarchar(50),
	floata float,
	money float,
	unpay float,
	idate nvarchar(10),
	edate nvarchar(10),
	odate nvarchar(10),
	ndate nvarchar(10),
	ordeno nvarchar(50),
	pno nvarchar(50),
	product nvarchar(50),
	unit nvarchar(50),
	price float,
	c1 float,
	notv float,
	ordestotal float,
	zcount float
)

insert @tmp
select '0'gno,a.lcno,case when a.typea='1' then '即期' else '遠期' end typea 
,a.custno,a.comp custcomp 
,a.cno,a.acomp 
,a.issuingbankno ibankno,a.issuingbank ibanks 
,a.advisingbankno abankno,a.advisingbank abanks 
,a.negotiatingbankno nbankno,a.negotiatingbank nbanks 
,a.coin,a.floata 
,a.money,a.money-isnull((select SUM(money) from lcv where lcno=a.lcno),0) unpay 
,a.issuedate idate,a.edate 
,a.onboarddate odate,a.negotiatingdate ndate 
,c.noa ordeno,c.productno pno,c.product,c.unit,c.price,c.c1,c.notv
,c.total ordestotal,0
from lcu a left join ordei[1] b on a.lcno=b.lcno 
left join ordes[1] c on c.noa=b.noa 
where (len(@t_lcno)=0 or @t_lcno=a.lcno) and (len(@t_typea)=0 or a.typea=@t_typea ) 
and (a.custno between @t_bcustno and @t_ecustno) 
and (a.cno between @t_bcno and @t_ecno) 
and (a.issuedate between @t_bidate and @t_eidate) 
and (a.edate between @t_bedate and @t_eedate) 
and (a.negotiatingdate between @t_bndate and @t_endate) 

insert @tmp(gno,lcno,coin,money,unpay,zcount)
select '1','ZZZZZZZZZZZZZZZZZZ',coin,SUM(money),SUM(unpay),COUNT(*) from @tmp
group by coin

select gno,lcno,typea,custno,custcomp,cno,acomp,ibankno,ibanks,abankno,abanks,nbankno,nbanks,coin
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,floata),1)),0,30)) floata
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay
	,idate,edate,odate,ndate,ordeno,pno,product,unit
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,price),1)),0,30)) price
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,c1),1)),4,12)) c1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,notv),1)),4,12)) notv
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ordestotal),1)),4,12)) ordestotal
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,zcount),1)),4,12)) zcount
from @tmp order by coin,lcno,ordeno,pno
;
--*****************************************************************************************	
z_lcu3:--z_lcu3
	declare @t_lcno nvarchar(50)
	declare @t_typea nvarchar(50)
	declare @t_bcustno nvarchar(50)
	declare @t_ecustno nvarchar(50)
	declare @t_bcno nvarchar(50)
	declare @t_ecno nvarchar(50)
	declare @t_bidate nvarchar(10)
	declare @t_eidate nvarchar(10)
	declare @t_bedate nvarchar(10)
	declare @t_eedate nvarchar(10)
	declare @t_bvdate nvarchar(10)
	declare @t_evdate nvarchar(10)
	
	set @t_lcno = case when '#non'=[2] then '' else [2] end
	set @t_typea = case when '#non'=[3] then '' else [3] end
	set @t_bcustno = case when '#non'=[4] then '' else [4] end
	set @t_ecustno = case when '#non'=[5] then char(255) else [5] end
	set @t_bcno = case when '#non'=[6] then '' else [6] end
	set @t_ecno = case when '#non'=[7] then char(255) else [7] end
	set @t_bidate = case when '#non'=[8] then '' else [8] end
	set @t_eidate = case when '#non'=[9] then char(255) else [9] end
	set @t_bedate = case when '#non'=[10] then '' else [10] end
	set @t_eedate = case when '#non'=[11] then char(255) else [11] end
	set @t_bvdate = case when '#non'=[14] then '' else [14] end
	set @t_evdate = case when '#non'=[15] then char(255) else [15] end
	
	--*****************************************************************************************	
	
declare @tmp table( 
	gno nvarchar(2), 
	lcno nvarchar(50), 
	typea nvarchar(50), 
	custno nvarchar(50), 
	custs nvarchar(50), 
	cno nvarchar(50), 
	acomp nvarchar(50), 
	bankno nvarchar(50), 
	banks nvarchar(50), 
	vdate nvarchar(10), 
	edate nvarchar(10), 
	money float, 
	payed float,
	unpay float 
) 

insert @tmp
select '0'gno,a.lcno,case when a.typea='1' then '即期' else '遠期' end typea 
,a.custno,a.comp custs
,a.cno,a.acomp 
,a.bankno,a.bank 
,a.vdate,a.edate 
,a.money
,isnull((select SUM(money) from lcv where lcno=a.lcno),0)
,a.money-isnull((select SUM(money) from lcv where lcno=a.lcno),0) unpay 
from lcu a  
where (len(@t_lcno)=0 or @t_lcno=a.lcno) and (len(@t_typea)=0 or a.typea=@t_typea ) 
and (a.custno between @t_bcustno and @t_ecustno) 
and (a.cno between @t_bcno and @t_ecno) 
and (a.issuedate between @t_bidate and @t_eidate) 
and (a.edate between @t_bedate and @t_eedate) 
and (a.vdate between @t_bvdate and @t_evdate)

insert @tmp(gno,money,payed,unpay)
select '1',sum(money),sum(payed),SUM(unpay) from @tmp

select gno,lcno,typea,custno,custs,cno,acomp,bankno,banks,vdate,edate
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,payed),1)),4,12)) payed
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay
from @tmp order by gno,lcno;