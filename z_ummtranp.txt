z_ummtranp:--z_ummtranp	
	SET QUOTED_IDENTIFIER OFF
	declare @t_bnoa nvarchar(20)
	declare @t_enoa nvarchar(20)

	set @t_bnoa = case when '#non'=[1] then '' else [1] end
	set @t_enoa = case when '#non'=[2] then CHAR(255) else [2] end
	
	----------------------------------------------------------------------------------
	declare @tmp table(
		noa nvarchar(20),
		datea nvarchar(10),
		mon nvarchar(10),
		custno nvarchar(20),
		comp nvarchar(50),
		sale float,
		total float,
		paysale float,
		opay float,
		unopay float,
		unpay float,
		accno nvarchar(20),
		worker nvarchar(20),
		memo nvarchar(max)
	)
	declare @tmps table(
		noa nvarchar(20),
		noq nvarchar(10),
		acc1 nvarchar(20),
		acc2 nvarchar(max),
		[money] float,
		checkno nvarchar(20),
		account nvarchar(max),
		bank nvarchar(max),
		indate nvarchar(10),
		memo nvarchar(max)
	)
	insert into @tmp(noa,datea,mon,custno,comp,sale,total,paysale,opay,unopay,unpay,accno,worker,memo)
	select noa,datea,mon,custno,comp,sale,total,paysale,opay,unopay,unpay,accno,worker,replace(memo,'chr(10)','') 
	from umm
	where noa between @t_bnoa and @t_enoa
	
	insert into @tmps(noa,noq,acc1,acc2,[money],checkno,account,bank,indate,memo)
	select a.noa,a.noq,a.acc1,a.acc2,a.[money],a.checkno,a.account,a.bank,a.indate
		,case when c.nick is not null then c.nick else '' end + a.memo
	from umms a
	left join view_vcc b on a.vccno=b.noa
	left join view_trd c on a.vccno=c.noa
	left join cust d on b.custno=d.noa or c.custno=d.noa
	where a.noa between @t_bnoa and @t_enoa
	and (len(isnull(a.acc1,''))>0 or len(isnull(a.acc2,''))>0
		or ISNULL(a.[money],0)!=0 or len(isnull(a.memo,''))>0
		or len(isnull(a.checkno,''))>0 or len(isnull(a.title,''))>0
		or len(isnull(a.account,''))>0 
		or len(isnull(a.bankno,''))>0 or len(isnull(a.bank,''))>0
		or len(isnull(a.indate,''))>0 or ISNULL(a.chgs,0)!=0)
	--------------------------------------------------------------------------------------------------
	
	--摘要太長分多行
	declare @tmp2 table(
		noa nvarchar(20),
		noq nvarchar(10),
		acc1 nvarchar(20),
		acc2 nvarchar(max),
		[money] float,
		checkno nvarchar(20),
		account nvarchar(max),
		bank nvarchar(max),
		indate nvarchar(10),
		memo nvarchar(max),
		cn1 int,
		cn2 int
	)
	declare @tmpString nvarchar(max)
	declare @maxcount int
	set @maxcount = 14
	declare @n int
	declare @string nvarchar(max)
	
	declare @noa nvarchar(20)
	declare @noq nvarchar(10)
	declare @acc1 nvarchar(20)
	declare @acc2 nvarchar(max)
	declare @money float
	declare @checkno nvarchar(20)
	declare @account nvarchar(max)
	declare @bank nvarchar(max)
	declare @indate nvarchar(10)
	declare @memo nvarchar(max)
	declare @cn1 int
	declare @cn2 int
	
	declare cursor_table cursor for
	select noa,noq,acc1,acc2,[money],checkno,account,bank,indate,memo
	,row_number()over(order by noa,noq)
	from @tmps
	open cursor_table
	fetch next from cursor_table
	into @noa,@noq,@acc1,@acc2,@money,@checkno,@account,@bank,@indate,@memo,@cn1
	while(@@FETCH_STATUS <> -1)
	begin	
		set @memo=REPLACE(@memo,'  ','')
		select @n=0,@string=@memo,@tmpString="",@cn2=0
		if(LEN(@string)=0)
		begin
			insert into @tmp2(noa,noq,acc1,acc2,[money],checkno,account,bank,indate,memo,cn1,cn2)
					values(@noa,@noq,@acc1,@acc2,@money,@checkno,@account,@bank,@indate,@memo,@cn1,@cn2)
		end
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = substring(@string,2,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount)
			begin
				if(@cn2=0)
				begin
					insert into @tmp2(noa,noq,acc1,acc2,[money],checkno,account,bank,indate,memo,cn1,cn2)
					values(@noa,@noq,@acc1,@acc2,@money,@checkno,@account,@bank,@indate,@tmpString,@cn1,@cn2)
				end
				else
				begin
					insert into @tmp2(noa,noq,memo,cn1,cn2)
					values(@noa,@noq,@tmpString,@cn1,@cn2)
				end
				set @n = 0
				set @tmpString = ""
				set @cn2 = @cn2 + 1
			end		
		end
		fetch next from cursor_table
		into @noa,@noq,@acc1,@acc2,@money,@checkno,@account,@bank,@indate,@memo,@cn1
	end
	close cursor_table
	deallocate cursor_table
	----------------------------------------------------------------------------------------------
	--分頁
	declare @tmp3 table(
		page int,
		nn int,
		gno nvarchar(10),
	
		noa nvarchar(20),
		datea nvarchar(10),
		mon nvarchar(10),
		custno nvarchar(20),
		comp nvarchar(50),
		sale float,
		total float,
		paysale float,
		opay float,
		unopay float,
		unpay float,
		accno nvarchar(20),
		worker nvarchar(20),
		a_memo nvarchar(MAX),
		
		noq nvarchar(10),
		acc1 nvarchar(20),
		acc2 nvarchar(max),
		[money] float,
		checkno nvarchar(20),
		account nvarchar(max),
		bank nvarchar(max),
		indate nvarchar(10),
		memo nvarchar(max)
	)
	
	declare @rowline int -- 每頁可用行數
	declare @endline int -- 頁尾行數
	declare @page int
	declare @recno int
	declare @curline int -- 當前行數
	set @rowline = 10
	set @endline = 1
	
	declare @gno nvarchar(10)
	declare @datea nvarchar(10)
	declare @mon nvarchar(10)
	declare @custno nvarchar(20)
	declare @comp nvarchar(50)
	declare @sale float
	declare @total float
	declare @paysale float
	declare @opay float
	declare @unopay float
	declare @unpay float
	declare @accno nvarchar(20)
	declare @worker nvarchar(20)
	declare @a_memo nvarchar(MAX)
	
	
	set @curline = 0
	declare cursor_table cursor for
	select noa,datea,mon,custno,comp,sale,total,paysale,opay,unopay,unpay,accno,worker,memo from @tmp 
	open cursor_table
	fetch next from cursor_table
	into @noa,@datea,@mon,@custno,@comp,@sale,@total,@paysale,@opay,@unopay,@unpay,@accno,@worker,@a_memo
	while(@@FETCH_STATUS <> -1)
	begin		
		select @page = 0
		
		declare cursor_table2 cursor for
		select noq,acc1,acc2,[money],checkno,account,bank,indate,memo,cn1,cn2 from @tmp2 where noa=@noa
		open cursor_table2
		fetch next from cursor_table2
		into @noq,@acc1,@acc2,@money,@checkno,@account,@bank,@indate,@memo,@cn1,@cn2
		while(@@FETCH_STATUS <> -1)
		begin			
			select @n=MAX(cn2) from @tmp2 where noa=@noa and noq=@noq
			
			set @gno = case when @n = 0 then '1' when @cn2=0 then '2' when @cn2=@n then '4' else '3' end		
			
			insert into @tmp3(page,nn,gno
				,noa,datea,mon,custno,comp,sale,total,paysale,opay,unopay,unpay,accno,worker,a_memo
				,noq,acc1,acc2,[money],checkno,account,bank,indate,memo)
			select @page,@curline%@rowline,@gno		
				,@noa,@datea,@mon,@custno,@comp,@sale,@total,@paysale,@opay,@unopay,@unpay,@accno,@worker,@a_memo
				,@noq,@acc1,@acc2,@money,@checkno,@account,@bank,@indate,@memo
			set @curline = @curline + 1
			--是否換頁
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
			
			fetch next from cursor_table2
			into @noq,@acc1,@acc2,@money,@checkno,@account,@bank,@indate,@memo,@cn1,@cn2
		end
		close cursor_table2
		deallocate cursor_table2
		
		while(@rowline-@curline%@rowline != @endline)
		begin
			insert into @tmp3(page,nn,gno
				,noa,datea,mon,custno,comp,sale,total,paysale,opay,unopay,unpay,accno,worker,a_memo)
			select @page,@curline%@rowline,'6'
				,@noa,@datea,@mon,@custno,@comp,@sale,@total,@paysale,@opay,@unopay,@unpay,@accno,@worker,@a_memo
			set @curline = @curline + 1
			if(@curline%@rowline=0)
			begin
				set @page = @page + 1
			end
		end
		--頁尾
		insert into @tmp3(page,nn,gno
			,noa,datea,mon,custno,comp,sale,total,paysale,opay,unopay,unpay,accno,worker,a_memo)
		select @page,@curline%@rowline,'5'
			,@noa,@datea,@mon,@custno,@comp,@sale,@total,@paysale,@opay,@unopay,@unpay,@accno,@worker,@a_memo
		set @curline = @curline + 1
		
		fetch next from cursor_table
		into @noa,@datea,@mon,@custno,@comp,@sale,@total,@paysale,@opay,@unopay,@unpay,@accno,@worker,@a_memo
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	--銀行帳號只顯示後面的碼數
	declare @m int
	
	declare cursor_table cursor for
	select noa,page,nn,acc1,rtrim(ltrim(acc2)) from @tmp3 where len(isnull(acc2,''))>0
	open cursor_table
	fetch next from cursor_table
	into @noa,@page,@n,@acc1,@acc2
	while(@@FETCH_STATUS <> -1)
	begin		
		if(LEFT(@acc1,4)='1112')
		begin
			if(@acc2 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@acc2)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@acc2)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp3 set acc2 = SUBSTRING(@acc2,1,@m) + right(@acc2,6) where noa=@noa and page=@page and nn=@n
				end
			end	
			if(@acc2 LIKE '%-[0-9][0-9][0-9][0-9][0-9][0-9][0-9]' ESCAPE '/')
			begin
				set @m = CHARINDEX(' ',@acc2)
				if(@m=0)
				begin
					set @m = patindex('%-[0-9]%',@acc2)
					set @m = case when @m>0 then @m-1 else @m end
				end
				if(@m>0)
				begin
					update @tmp3 set acc2 = SUBSTRING(@acc2,1,@m) + right(@acc2,7) where noa=@noa and page=@page and nn=@n
				end
			end	
		end

		fetch next from cursor_table
		into @noa,@page,@n,@acc1,@acc2
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------
	select a.* 
	,dbo.getComma(a.sale,0) tsale
	,dbo.getComma(a.total,0) ttotal
	,dbo.getComma(a.paysale,0) tpaysale
	,dbo.getComma(a.opay,0) topay
	,dbo.getComma(a.unopay,0) tunopay
	,dbo.getComma(a.unpay,0) tunpay
	,dbo.getComma(a.[money],0) tmoney
	,CAST(a.page+1 as varchar(2))+'/'+CAST(b.page+1 as varchar(2)) tpage
	from @tmp3 a
	outer apply (select max(page) page from @tmp3 b where noa=a.noa) b
	order by a.noa,a.page,a.nn;
	
	
z_ummp_old:--z_ummp
SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @pagecount int
	declare @t_bxnoa nvarchar(20)
	declare @t_exnoa nvarchar(20)
	set @pageCount = 6
	set @t_bxnoa = case when '#non'=[1] then '' else [1] end
	set @t_exnoa = case when '#non'=[2] then CHAR(255) else [2] end
	declare @tmp table( 
			gno nvarchar(1), 
			noa nvarchar(30), 
			noq nvarchar(20), 
			datea nvarchar(10), 
			mon nvarchar(6), 
			unpay float, 
			custno nvarchar(10), 
			comp nvarchar(50), 
			[money] float, 
			chgs float, 
			paysale float, 
			checkno nvarchar(32), 
			account nvarchar(23), 
			bankno nvarchar(28), 
			bank nvarchar(52), 
			indate nvarchar(10), 
			acc2 nvarchar(50), 
			sale float, 
			total float, 
			opay float, 
			unopay float, 
			memo nvarchar(max),
			accno nvarchar(10), 
			w nvarchar(20), 
			recno int, 
			currecno int, 
			curpage int, 
			totpage int 
		) 
		set @cmd =	"select a.*,ROW_NUMBER()over(order by gno),0,0,0"+ 
		" from("+ 
		" select '0' gno,a.noa,b.noq,a.datea,a.mon,a.unpay,a.custno,a.comp,b.money,b.chgs,"+ 
		"a.paysale,b.checkno,b.account,b.bankno,b.bank,b.indate,b.acc2,a.sale,a.total,a.opay,a.unopay,b.memo,a.accno,(case when a.worker2!='' then a.worker2 else a.worker end) worker"+ 
		" from umm a "+ 
		" left join umms b on a.noa = b.noa " + 
		" where (b.money != 0 or len(b.memo) != 0)and "+ 
		" a.noa between @t_bxnoa and @t_exnoa"+ 
		" ) a" 
		insert into @tmp 
		execute sp_executesql @cmd,N'@t_bxnoa nvarchar(20),@t_exnoa nvarchar(20)', 
		@t_bxnoa=@t_bxnoa,@t_exnoa=@t_exnoa 
	
		declare @noa nvarchar(30) 
		declare @count int 
		declare @t_count int 
		declare @recno int 
		declare @currecno int 
		declare @curpage int 
		declare @totpage int 
		declare @accno nvarchar(20) 
		declare @w nvarchar(20) 

		declare cursor_table cursor for 
		select noa,min(recno) from @tmp group by noa 
		open cursor_table 
		fetch next from cursor_table 
		into @noa,@recno 
		while(@@FETCH_STATUS <> -1) 
		begin 
			update @tmp set currecno = recno - @recno +1 where noa=@noa 
			fetch next from cursor_table 
			into @noa,@recno 
		end 
		close cursor_table 
		deallocate cursor_table 

		declare cursor_table cursor for 
		select noa,max(currecno) from @tmp group by noa 
		open cursor_table 
		fetch next from cursor_table 
		into @noa,@currecno 
		while(@@FETCH_STATUS <> -1) 
		begin 
			update @tmp set totpage = (@currecno-@currecno%@pagecount)/@pagecount+1 where noa=@noa 
			fetch next from cursor_table 
			into @noa,@currecno 
		end 
		close cursor_table 
		deallocate cursor_table 

		declare cursor_table cursor for 
		select noa,recno,currecno from @tmp 
		open cursor_table 
		fetch next from cursor_table 
		into @noa,@recno,@currecno 
		while(@@FETCH_STATUS <> -1) 
		begin 
			update @tmp set curpage = FLOOR((@currecno-1)/@pagecount)+1 where noa=@noa and recno=@recno 
			fetch next from cursor_table 
			into @noa,@recno,@currecno 
		end 
		close cursor_table 
		deallocate cursor_table 

		declare cursor_table cursor for 
		select noa,accno,w,curpage,@pagecount-[count]%@pagecount,([count]-[count]%@pagecount)/@pagecount+1 
		from(select noa,max(accno) accno,max(w) w,COUNT(1) [count], max(curpage) curpage from @tmp group by noa) a 
		where not[count]%@pagecount=0 
		open cursor_table 
		fetch next from cursor_table 
		into @noa,@accno,@w,@curpage,@count,@totpage 
		while(@@FETCH_STATUS <> -1) 
		begin 
			set @t_count = @count 
			while(@t_count>0) 
			begin 
				insert into @tmp(gno,noa,noq,accno,w,curpage,totpage)values('0',@noa,CHAR(255),@accno,@w,@curpage,@totpage) 
				set @t_count = @t_count - 1 
			end 
			fetch next from cursor_table 
			into @noa,@accno,@w,@curpage,@count,@totpage 
		end 
		close cursor_table 
		deallocate cursor_table 

		insert into @tmp 
		select '1' gno,noa,MAX(noq),'','',0,'','',0,0,0,'','','','','','',0,0,0,0,'',MAX(accno),MAX(w),0,0,curpage,MAX(totpage)
		from @tmp
		group by noa,curpage

		select gno,noa,noq,datea,mon,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unpay),1)),4,12)) unpay, 
		custno,comp,case when money = 0 then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) end money, 
		case when chgs = 0 then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12))end chgs,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysale),1)),4,12)) paysale, 
		checkno,account,bankno,bank,indate,acc2, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,sale),1)),4,12)) sale, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unopay),1)),4,12)) unopay, memo,
		accno,w,CONVERT(nvarchar(5),curpage)+'/'+CONVERT(nvarchar(5),totpage) page from @tmp order by noa,noq,curpage,gno;