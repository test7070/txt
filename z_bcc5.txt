z_bcc5a:--z_bcc5a
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bbccno nvarchar(50)
	declare @t_ebccno nvarchar(50)
	declare @t_store nvarchar(max)
	declare @t_part nvarchar(max)
	declare @t_typea nvarchar(max)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bbccno = case when '#non'=[3] then '' else [3] end
	set @t_ebccno = case when '#non'=[4] then char(255) else [4] end
	set @t_store = case when '#non'=[5] then '' else [5] end
	set @t_part = case when '#non'=[6] then '' else [6] end
	set @t_typea = case when '#non'=[8] then '' else [8] end
	-----------------------------------------------------------------------------
	declare @string nvarchar(max)
	declare @n int
	IF OBJECT_ID('tempdb..#store')is not null
	BEGIN
		set @cmd = 'drop table #store'
		EXECUTE sp_executesql @cmd
	END
	create table #store(
		noa nvarchar(20)
	)
	set @string = @t_store
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #store select @string
			end
			break
		end
		insert into #store select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	
	IF OBJECT_ID('tempdb..#part')is not null
	BEGIN
		set @cmd = 'drop table #part'
		EXECUTE sp_executesql @cmd
	END
	create table #part(
		noa nvarchar(20)
	)
	set @string = @t_part
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #part select @string
			end
			break
		end
		insert into #part select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	-----------------------------------------------------------------------------
	declare @noa nvarchar(20)
	declare @noq nvarchar(10)
	declare @typea nvarchar(10)
	declare @storeno nvarchar(20)
	declare @bccno nvarchar(50)
	declare @datea nvarchar(20)
	declare @mount float
	declare @price float
	declare @total float
	declare @mount2 float
	
	declare @tmp table(
		gno nvarchar(3),
		typea nvarchar(10),
		datea nvarchar(20),
		noa nvarchar(20),
		noq nvarchar(10),
		storeno nvarchar(20),
		bccno nvarchar(50),	
		bccname nvarchar(max),
		mount float,
		price float,
		total float,
		mount2 float
	)
	insert into @tmp
	select '0','A',ISNULL(b.datea,''),a.noa+'盤點',a.noq,isnull(a.storeno,''),isnull(a.bccno,''),a.bccname,isnull(a.mount,0),ISNULL(a.price,0),ISNULL(a.total,0),0
	from bcces a
	left join bcce b on a.noa=b.noa
	left join #store c on a.storeno=c.noa
	where (ISNULL(a.bccno,'') between @t_bbccno and @t_ebccno)
	and (ISNULL(b.datea,'')<=@t_edate)
	insert into @tmp
	select '0','B',ISNULL(b.datea,''),a.noa+'入料',a.noq,isnull(a.storeno,''),isnull(a.bccno,''),a.bccname,isnull(a.mount,0),ISNULL(a.price,0),ISNULL(a.total,0),0
	from bccins a
	left join bccin b on a.noa=b.noa
	left join #store c on a.storeno=c.noa
	where (ISNULL(a.bccno,'') between @t_bbccno and @t_ebccno)
	and (ISNULL(b.datea,'')<=@t_edate)
	insert into @tmp
	select '0','C',ISNULL(b.datea,''),a.noa+'領料',a.noq,isnull(a.storeno,''),isnull(a.bccno,''),a.bccname,isnull(a.mount-a.bkbcc,0),null,null,0
	from bccouts a
	left join bccout b on a.noa=b.noa
	left join #store c on a.storeno=c.noa
	where (ISNULL(a.bccno,'') between @t_bbccno and @t_ebccno)
	and (ISNULL(b.datea,'')<=@t_edate)
	
	delete @tmp where bccno=''

	declare @bmount float
	
	declare cursor_table cursor for
	select storeno,bccno from @tmp group by storeno,bccno
	open cursor_table
	fetch next from cursor_table
	into @storeno,@bccno
	while(@@FETCH_STATUS <> -1)
	begin
		select @bmount=0 ,@mount2=0
	
		declare cursor_table2 cursor for
		select noa,noq,typea,datea,isnull(mount,0) from @tmp where storeno=@storeno and bccno=@bccno order by datea,typea,noa,noq
		open cursor_table2
		fetch next from cursor_table2
		into @noa,@noq,@typea,@datea,@mount
		while(@@FETCH_STATUS <> -1)
		begin
			if(@typea='A')
				set @mount2 = @mount
			else
			begin
				set @mount2 = @mount2 + case when @typea='B' then @mount else -@mount end
			end
			update @tmp set mount2=@mount2 where noa=@noa and noq=@noq
			if(@datea<@t_bdate)
			begin
				set @bmount=@mount2
			end
			fetch next from cursor_table2
			into @noa,@noq,@typea,@datea,@mount
		end
		close cursor_table2
		deallocate cursor_table2	
		insert into @tmp(gno,typea,storeno,bccno,noa,mount2)values('1','',@storeno,@bccno,'庫存量',@mount2)

		insert into @tmp(gno,typea,storeno,bccno,noa,mount2)values('0','',@storeno,@bccno,'前期存量',@bmount)

		fetch next from cursor_table
		into @storeno,@bccno
	end
	close cursor_table
	deallocate cursor_table
	
	delete @tmp where datea<@t_bdate and len(typea)>0
	select a.*
	,a.storeno sa 
	,b.store sb
	,a.bccno ba
	,c.product bb
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount),1)),4,12)) mt1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) tt
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount2),1)),4,12)) mt2
	from @tmp a
	left join store b on a.storeno=b.noa
	left join bcc c on c.noa=a.bccno
	where  (len(@t_store)=0 or b.noa=@t_store) and (len(@t_typea)=0 or c.typea=@t_typea)
	order by a.storeno,a.bccno,a.gno,a.datea,a.typea,a.noa,a.noq;
--***********************************************************************************************
z_bcc5b:--z_bcc5b
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_bbccno nvarchar(50)
	declare @t_ebccno nvarchar(50)
	declare @t_store nvarchar(max)
	declare @t_part nvarchar(max)
	declare @t_all nvarchar(max)
	declare @t_typea nvarchar(max)
	declare @t_xdate nvarchar(max)
	set @t_bbccno = case when '#non'=[3] then '' else [3] end
	set @t_ebccno = case when '#non'=[4] then char(255) else [4] end
	set @t_store = case when '#non'=[5] then '' else [5] end
	set @t_part = case when '#non'=[6] then '' else [6] end
	set @t_all = case when '#non'=[7] then '' else [7] end
	set @t_typea = case when '#non'=[8] then '' else [8] end
	set @t_xdate = case when '#non'=[9] then '' else [9] end
	-----------------------------------------------------------------------------
	declare @string nvarchar(max)
	declare @n int
	IF OBJECT_ID('tempdb..#store')is not null
	BEGIN
		set @cmd = 'drop table #store'
		EXECUTE sp_executesql @cmd
	END
	create table #store(
		noa nvarchar(20)
	)
	set @string = @t_store
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #store select @string
			end
			break
		end
		insert into #store select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	
	IF OBJECT_ID('tempdb..#part')is not null
	BEGIN
		set @cmd = 'drop table #part'
		EXECUTE sp_executesql @cmd
	END
	create table #part(
		noa nvarchar(20)
	)
	set @string = @t_part
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #part select @string
			end
			break
		end
		insert into #part select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	-----------------------------------------------------------------------------
	declare @noa nvarchar(20)
	declare @noq nvarchar(10)
	declare @typea nvarchar(10)
	declare @storeno nvarchar(20)
	declare @bccno nvarchar(50)
	declare @datea nvarchar(20)
	declare @mount float
	declare @price float
	declare @total float
	declare @mount2 float
	
	declare @tmp table(
		gno nvarchar(3),
		typea nvarchar(10),
		datea nvarchar(20),
		noa nvarchar(20),
		noq nvarchar(10),
		storeno nvarchar(20),
		bccno nvarchar(50),	
		bccname nvarchar(max),
		mount float,
		price float,
		total float,
		mount2 float
	)
	insert into @tmp
	select '0','A',ISNULL(b.datea,''),a.noa+'盤點',a.noq,isnull(a.storeno,''),isnull(a.bccno,''),a.bccname,isnull(a.mount,0),ISNULL(a.price,0),ISNULL(a.total,0),0
	from bcces a
	left join bcce b on a.noa=b.noa
	left join #store c on a.storeno=c.noa
	where (ISNULL(a.bccno,'') between @t_bbccno and @t_ebccno)
	and (ISNULL(b.datea,'')<=@t_xdate)
	insert into @tmp
	select '0','B',ISNULL(b.datea,''),a.noa+'入料',a.noq,isnull(a.storeno,''),isnull(a.bccno,''),a.bccname,isnull(a.mount,0),ISNULL(a.price,0),ISNULL(a.total,0),0
	from bccins a
	left join bccin b on a.noa=b.noa
	left join #store c on a.storeno=c.noa
	where (ISNULL(a.bccno,'') between @t_bbccno and @t_ebccno)
	and (ISNULL(b.datea,'')<=@t_xdate)
	insert into @tmp
	select '0','C',ISNULL(b.datea,''),a.noa+'領料',a.noq,isnull(a.storeno,''),isnull(a.bccno,''),a.bccname,isnull(a.mount-a.bkbcc,0),null,null,0
	from bccouts a
	left join bccout b on a.noa=b.noa
	left join #store c on a.storeno=c.noa
	where (ISNULL(a.bccno,'') between @t_bbccno and @t_ebccno)
	and (ISNULL(b.datea,'')<=@t_xdate)
	
	delete @tmp where bccno=''
	
	declare @bmount float
	
	declare cursor_table cursor for
	select storeno,bccno from @tmp group by storeno,bccno
	open cursor_table
	fetch next from cursor_table
	into @storeno,@bccno
	while(@@FETCH_STATUS <> -1)
	begin
		select @bmount=0 ,@mount2=0
	
		declare cursor_table2 cursor for
		select noa,noq,typea,datea,isnull(mount,0) from @tmp where storeno=@storeno and bccno=@bccno order by datea,typea,noa,noq
		open cursor_table2
		fetch next from cursor_table2
		into @noa,@noq,@typea,@datea,@mount
		while(@@FETCH_STATUS <> -1)
		begin
			if(@typea='A')
				set @mount2 = @mount
			else
			begin
				set @mount2 = @mount2 + case when @typea='B' then @mount else -@mount end
			end
			update @tmp set mount2=@mount2 where noa=@noa and noq=@noq
			if(@datea<@t_xdate)
			begin
				set @bmount=@mount2
			end
			fetch next from cursor_table2
			into @noa,@noq,@typea,@datea,@mount
		end
		close cursor_table2
		deallocate cursor_table2	
		insert into @tmp(gno,typea,storeno,bccno,noa,mount2)values('1','',@storeno,@bccno,'庫存量',@mount2)

		insert into @tmp(gno,typea,storeno,bccno,noa,mount2)values('0','',@storeno,@bccno,'前期存量',@bmount)

		fetch next from cursor_table
		into @storeno,@bccno
	end
	close cursor_table
	deallocate cursor_table
	
	delete @tmp where gno='0'
	update @tmp set gno='0'
	
	if(@t_all='剩餘量')
		delete @tmp where mount2=0
	if(@t_all='無存量')
		delete @tmp where mount2>0
	
	select a.*
	,a.storeno sa 
	,b.store sb
	,a.bccno ba
	,c.product bb
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount),1)),4,12)) mt1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) tt
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.mount2),1)),4,12)) mt2
	from @tmp a
	left join store b on a.storeno=b.noa
	left join bcc c on c.noa=a.bccno
	where (len(@t_store)=0 or b.noa=@t_store) and (len(@t_typea)=0 or c.typea=@t_typea)
	order by a.storeno,a.bccno,a.gno,a.datea,a.typea,a.noa,a.noq;
	
--********************************************************************************************
z_bcc5c:--z_bcc5c
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bbccno nvarchar(50)
	declare @t_ebccno nvarchar(50)
	declare @t_storeno nvarchar(max)
	declare @t_all nvarchar(max)
	declare @t_typea nvarchar(max)
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then '' else [2] end
	set @t_bbccno = case when '#non'=[3] then '' else [3] end
	set @t_ebccno = case when '#non'=[4] then char(255) else [4] end
	set @t_storeno = case when '#non'=[5] then '' else [5] end
	set @t_all = case when '#non'=[7] then '' else [7] end
	set @t_typea = case when '#non'=[8] then '' else [8] end
	--*****************************************************************************************	
declare @tmp table( 
	storeno nvarchar(20), 
	gno nvarchar(1), 
	datea nvarchar(10), 
	bccno nvarchar(50), 
	bccname nvarchar(MAX),
	inmount decimal (14,2), 
	outmount decimal (14,2), 
	stkmount decimal (14,2), 
	usename nvarchar(20), 
	memo nvarchar (200),
	total float,
	price float
) 
--盤點的資料 
declare @t_result table( 
	storeno nvarchar(20), 
	bccno nvarchar(50), 
	datea nvarchar(10), 
	mount float,
	total float
) 

--插入盤點的資料
insert @t_result(storeno,bccno,datea,mount,total)
select b.storeno,b.bccno,a.datea,b.mount,b.total 
from bcce a left join bcces b on a.noa=b.noa where
b.storeno+'_'+b.bccno+'_'+a.datea in
(select b.storeno+'_'+b.bccno+'_'+MAX(a.datea)
from bcce a left join bcces b on a.noa=b.noa 
where b.bccno between @t_bbccno and @t_ebccno
and a.datea < @t_bdate and (len(@t_storeno)=0 or b.storeno=@t_storeno) group by b.storeno,b.bccno
)

update t_result
set mount=mount
+isnull((select sum(b.mount) mount from bccin a left join bccins b on a.noa=b.noa 
where b.bccno=t_result.bccno and a.datea > t_result.datea and a.datea< @t_bdate and b.storeno=t_result.storeno),0) 
-isnull((select sum(b.mount-b.bkbcc) mount from bccout a left join bccouts b on a.noa=b.noa 
where b.bccno=t_result.bccno and a.datea > t_result.datea and a.datea< @t_bdate and b.storeno=t_result.storeno),0)
,total=total+isnull((select sum(b.total) mount from bccin a left join bccins b on a.noa=b.noa 
where b.bccno=t_result.bccno and a.datea > t_result.datea and a.datea< @t_bdate and b.storeno=t_result.storeno),0) 
from @t_result t_result

--插入沒有盤點的資料
insert @tmp(gno,storeno,datea,bccno,bccname,inmount,outmount,stkmount,usename,memo,total)
select '0',b.noa,'庫存',a.noa,a.product,0,0,0,'','',0
from bcc a,(select noa,store from store union all select ''noa,''store ) b 
where a.noa between @t_bbccno and @t_ebccno
and (len(@t_storeno)=0 or b.noa=@t_storeno) 
and a.noa+'-'+b.noa not in (select bccno+'-'+storeno from @t_result) 

--避免品號空白
insert @tmp(gno,storeno,datea,bccno,bccname,inmount,outmount,stkmount,usename,memo,total) 
select '0',storeno,'庫存',bccno,'',0,0,0,'','',0 
from bccins where bccno not in(select bccno from @tmp) 
and bccno between @t_bbccno and @t_ebccno
and (len(@t_storeno)=0 or storeno=@t_storeno) 
and datea<@t_bdate group by storeno,bccno

update t_tmp
set stkmount=stkmount+isnull((select sum(b.mount) mount from bccin a left join bccins b on a.noa=b.noa 
where b.bccno=t_tmp.bccno and a.datea< @t_bdate and b.storeno=t_tmp.storeno),0) 
-isnull((select sum(b.mount-b.bkbcc) mount from bccout a left join bccouts b on a.noa=b.noa 
where b.bccno=t_tmp.bccno and a.datea< @t_bdate and b.storeno=t_tmp.storeno),0)
,total=total+isnull((select sum(b.total) mount from bccin a left join bccins b on a.noa=b.noa 
where b.bccno=t_tmp.bccno and a.datea< @t_bdate and b.storeno=t_tmp.storeno),0) 
from @tmp t_tmp

--將盤存資料寫到要輸出的資料表
insert @tmp(gno,storeno,datea,bccno,bccname,inmount,outmount,stkmount,usename,memo,total)
select '0',a.storeno,'庫存',a.bccno ,b.product,0,0,a.mount,'','',a.total
from @t_result a left join bcc b on a.bccno=b.noa

update @tmp
set price=total/nullif(stkmount,0)


--插入進出貨明細 
insert into @tmp 
select b.storeno,'0',a.datea,b.bccno,b.bccname,b.mount,null,null,null,b.memo,b.total,b.price
from bccin a left join bccins b on a.noa=b.noa 
where a.datea between @t_bdate and @t_edate and b.bccno between @t_bbccno and @t_ebccno 
and (len(@t_storeno)=0 or b.storeno=@t_storeno) 

insert into @tmp 
select b.storeno,'0',a.datea,b.bccno,b.bccname,null,b.mount-b.bkbcc,null,a.sname,b.memo,0,null
from bccout a left join bccouts b on a.noa=b.noa 
where a.datea between @t_bdate and @t_edate and b.bccno between @t_bbccno and @t_ebccno 
and (len(@t_storeno)=0 or b.storeno=@t_storeno) 

declare @result table( 
	idno int IDENTITY(1,1),
	storeno nvarchar(20), 
	gno nvarchar(1), 
	datea nvarchar(10), 
	bccno nvarchar(50), 
	bccname nvarchar(MAX), 
	inmount decimal (14,2), 
	outmount decimal (14,2), 
	stkmount decimal (14,2), 
	usename nvarchar(20), 
	memo nvarchar (200), 
	total float,
	price float,
	sp nvarchar (1),
	idno2 int
) 

insert into @result 
select *,'2',0 from @tmp order by storeno,bccno,datea 

--更新庫存量 
declare @idno int
declare @datea nvarchar(10)
declare @inmount decimal (14,2) 
declare @outmount decimal (14,2) 
declare @stkmount decimal (14,2) 
declare @t_stkmount decimal (14,2) 
declare @bccno nvarchar(50) 
declare @t_bccno nvarchar(50) ='XXXX'
declare	@storeno nvarchar(50) 
declare	@x_storeno nvarchar(50) ='XXXX'

set @t_stkmount=0 

declare bcc_table cursor for 
select idno,storeno,datea,bccno,inmount,outmount,stkmount from @result 
order by storeno,bccno,case when datea='庫存'then '000/00/00' else datea end
open bcc_table 
fetch next from bcc_table 
into @idno,@storeno,@datea,@bccno,@inmount,@outmount,@stkmount 
while(@@FETCH_STATUS <> -1) 
begin 
	if(@datea='庫存') 
	begin 
		set @t_stkmount=@stkmount 
	end 
	else 
	begin 
		update @result 
		set stkmount=@t_stkmount+isnull(@inmount,0)-isnull(@outmount,0)	where idno=@idno
		set @t_stkmount=@t_stkmount+isnull(@inmount,0)-isnull(@outmount,0) 
	end 

	fetch next from bcc_table 
	into @idno,@storeno,@datea,@bccno,@inmount,@outmount,@stkmount 
end 
close bcc_table 
deallocate bcc_table 

delete @result where stkmount=0 and bccno+'_'+storeno in(select bccno+'_'+storeno from @result group by bccno,storeno having count(*)=1)

insert into @result 
select a.storeno,'1',null,a.bccno,b.product,null,null,null,null,null,0,null,'0',0 from @result a left join bcc b on a.bccno=b.noa group by a.storeno,a.bccno,b.product 
insert into @result 
select storeno,'0',null,bccno,null,null,null,null,null,null,0,null,'3',0 from @result group by storeno,bccno 
insert into @result 
select storeno,'0',null,bccno,null,null,null,null,null,null,0,null,'3',0 from @result group by storeno,bccno 
update @result 
set bccname=null,sp='1',price=case when stkmount=0 then 0 else price end where datea='庫存'

-------------不要讓同一個資材拆成兩頁
declare @space bit	
declare	@sp nvarchar(10)
declare @count int
declare @count2 int
declare	@t_bccno2 nvarchar(50)
declare	@t_bccno33 nvarchar(50)
declare	@bccname nvarchar(120)
declare	@gno nvarchar(1)
declare	@t_gno nvarchar(1)
set @space=1
set @t_bccno='XXXX'
set @t_bccno2='YYYY'
set @x_storeno='ZZZZZ'

	set @count=0
	set @count2=0
	declare bcc_table cursor for 
	select storeno,gno,bccno,idno,bccname,sp from @result order by storeno,bccno,gno desc ,sp
	open bcc_table 
	fetch next from bcc_table 
	into @storeno,@gno,@bccno,@idno,@bccname,@sp
	while(@@FETCH_STATUS <> -1) 
	begin
		set @count2=@count2+1
		if (@x_storeno='ZZZZZ')
			set @x_storeno=@storeno
		set @count=@count+1
		
		if(@gno='1')
			set @count=@count+1
			
		update @result
		set idno2=@count2
		where idno=@idno
		
		if(@count>39 or @storeno!=@x_storeno)and @sp!='3'
		begin
			set @count2=@count2+1
			insert into @result 
			select @storeno,'2',null,@bccno,null,null,null,null,null,null,null,null,'1',@count2-case when @sp='1' then 2 else 1 end
			
			if(@count>39 and @sp='2')
			begin
				insert into @result 
				select @storeno,'1',null,@bccno,@bccname,null,null,null,null,null,null,null,'0',@count2-1
			end
			
			set @count=0
		end
		else
		begin
			if(@sp='3' and @count>39)
				set @count=38
		end
		
		if (@x_storeno!=@storeno)
			set @x_storeno=@storeno
		fetch next from bcc_table 
		into @storeno,@gno,@bccno,@idno,@bccname,@sp
	end 
	close bcc_table 
	deallocate bcc_table 

insert into @result 
select @storeno,'2',null,@bccno,null,null,null,null,null,null,null,null,'1',@count2+1
------------------- 
select b.store,gno,a.datea,a.bccno,a.bccname,a.usename,a.memo, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.inmount),1)),4,12)) inmount, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.outmount),1)),4,12)) outmount, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.stkmount),1)),4,12)) stkmount,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.price),1)),4,12)) price
from @result a left join store b on a.storeno=b.noa 
left join bcc c on a.bccno=c.noa where (len(@t_typea)=0 or c.typea=@t_typea)
order by a.storeno,a.bccno,idno2,gno desc,sp;
------------------------------------------------------------------------------------------------------------------------------------------------	
--早期程式(跑比較慢)
--declare @tmp table( 
--	storeno nvarchar(20),
--	gno nvarchar(1), 
--	datea nvarchar(10), 
--	bccno nvarchar(50), 
--	bccname nvarchar(max), 
--	price float, 
--	inmount decimal (14,2), 
--	outmount decimal (14,2), 
--	stkmount decimal (14,2), 
--	usename nvarchar(20), 
--	memo nvarchar (200) 
--) 
----盤點的資料 
--declare @t_result table( 
--	storeno nvarchar(20),
--	bccno nvarchar(50), 
--	bccname nvarchar(max), 
--	datea nvarchar(10), 
--	mount decimal (14,2), 
--	total decimal (14,2) 
--) 

--declare @storeno nvarchar(20)
--declare @bccno nvarchar(50) 
--declare @bccname nvarchar(50) 
--declare @datea nvarchar(10) 
--declare @mount decimal (14,2) 
--declare @total decimal (14,2) 
--declare @t_mount decimal (14,2) 
--declare @t_total decimal (14,2) 
--declare @t_price float
--set @t_total=0 
--set @t_mount=0 

----計算有盤存的庫存 
----取最後一筆有盤存的資料 

--declare bcc_table cursor for 
--select b.storeno,b.bccno from bcce a left join bcces b on a.noa=b.noa where b.bccno between @t_bbccno and @t_ebccno and a.datea < @t_bdate group by b.storeno,b.bccno 
--open bcc_table 
--fetch next from bcc_table 
--into @storeno,@bccno 
--while(@@FETCH_STATUS <> -1) 
--begin 
--insert into @t_result 
--select top 1 b.storeno,b.bccno,b.bccname,a.datea,b.mount,b.total 
--from bcce a left join bcces b on a.noa=b.noa 
--where b.bccno =@bccno and a.datea < @t_bdate and b.storeno=@storeno
--order by a.datea desc 
--fetch next from bcc_table 
--into @storeno,@bccno 

--end 
--close bcc_table 
--deallocate bcc_table 

----計算盤存到資料之前的入領料 
--declare bcc_table cursor for 
--select storeno,bccno,bccname,datea,mount,total from @t_result 
--open bcc_table 
--fetch next from bcc_table 
--into @storeno,@bccno,@bccname,@datea,@mount,@total 
--while(@@FETCH_STATUS <> -1) 
--begin 
----計算入庫平均單價
--set @t_price=isnull((select sum(b.total)
--from bccin a left join bccins b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea > @datea and a.datea< @t_bdate and b.storeno=@storeno
--group by b.bccno),0)  /nullif(isnull((select sum(b.mount) mount 
--from bccin a left join bccins b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea > @datea and a.datea< @t_bdate and b.storeno=@storeno
--group by b.bccno),0) ,0)

----計算價錢 
--set @t_total=@total+ 
----入料 
--isnull((select sum(b.total) total 
--from bccin a left join bccins b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea > @datea and a.datea< @t_bdate and b.storeno=@storeno
--group by b.bccno),0) 
---
--isnull((select sum((b.mount-b.bkbcc)*@t_price) total 
--from bccout a left join bccouts b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea > @datea and a.datea< @t_bdate and b.storeno=@storeno
--group by b.bccno),0) 


----計算庫存 
--set @t_mount=@mount+ 
----入料 
--isnull((select sum(b.mount) mount 
--from bccin a left join bccins b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea > @datea and a.datea< @t_bdate and b.storeno=@storeno
--group by b.bccno),0) 
----領料&繳回 
---isnull((select sum(b.mount-b.bkbcc) mount1 
--from bccout a left join bccouts b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea > @datea and a.datea< @t_bdate and b.storeno=@storeno
--group by b.bccno),0) 

----存入有盤存的庫存 
--insert into @tmp 
--select @storeno,'0',' 庫存',@bccno,@bccname,round(@t_total/nullif(@t_mount,0),0),0,0,@t_mount,'','' 
--set @t_total=0 
--set @t_mount=0 
--fetch next from bcc_table 
--into @storeno,@bccno,@bccname,@datea,@mount,@total 
--end 
--close bcc_table 
--deallocate bcc_table 

----***************************************************************

----計算沒有盤存的庫存 

--declare bcc_table cursor for 
--select b.noa,a.noa,a.product from bcc a,store b where a.noa between @t_bbccno and @t_ebccno and a.noa+'-'+b.noa not in 
--(select bccno+'-'+storeno from @tmp) 
--and a.noa between @t_bbccno and @t_ebccno 
--open bcc_table 
--fetch next from bcc_table 
--into @storeno,@bccno,@bccname
--while(@@FETCH_STATUS <> -1) 
--begin 
----計算入庫平均單價
--set @t_price=isnull((select sum(b.total)  
--from bccin a left join bccins b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea < @t_bdate and b.storeno=@storeno
--group by b.bccno),0) /nullif(isnull((select sum(b.mount)  
--from bccin a left join bccins b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea < @t_bdate and b.storeno=@storeno
--group by b.bccno),0) ,0)


----計算價錢 
--set @t_total= 
----入料 
--isnull((select sum(b.total) total 
--from bccin a left join bccins b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea < @t_bdate and b.storeno=@storeno
--group by b.bccno),0) 
---
--isnull((select sum((b.mount-b.bkbcc)*@t_price) total 
--from bccout a left join bccouts b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea < @t_bdate and b.storeno=@storeno
--group by b.bccno),0) 

----計算庫存 
--set @t_mount= 
----入料 
--isnull((select sum(b.mount) mount 
--from bccin a left join bccins b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea < @t_bdate and b.storeno=@storeno
--group by b.bccno),0) 
----領料&繳回 
---isnull((select sum(b.mount-b.bkbcc) mount1 
--from bccout a left join bccouts b on a.noa=b.noa 
--where b.bccno=@bccno and a.datea < @t_bdate and b.storeno=@storeno
--group by b.bccno),0) 
----存入沒有盤存的庫存 
--insert into @tmp 
--select @storeno,'0',' 庫存',@bccno,@bccname,round(@t_total/nullif(@t_mount,0),0),0,0,@t_mount,'','' 

--set @t_total=0 
--set @t_mount=0 

--fetch next from bcc_table 
--into @storeno,@bccno,@bccname

--end 
--close bcc_table 
--deallocate bcc_table 


----插入進出貨明細 
--insert into @tmp 
--select b.storeno,'0',a.datea,b.bccno,b.bccname,b.price,b.mount,null,null,null,b.memo 
--from bccin a left join bccins b on a.noa=b.noa 
--where a.datea between @t_bdate and @t_edate and  b.bccno between @t_bbccno and @t_ebccno

--insert into @tmp 
--select b.storeno,'0',a.datea,b.bccno,b.bccname,null,null,b.mount-b.bkbcc,null,a.sname,b.memo 
--from bccout a left join bccouts b on a.noa=b.noa 
--where a.datea between @t_bdate and @t_edate and  b.bccno between @t_bbccno and @t_ebccno

--declare @result table(
--	storeno nvarchar(20),
--	gno nvarchar(1), 
--	datea nvarchar(10), 
--	bccno nvarchar(20), 
--	bccname nvarchar(max), 
--	price float, 
--	inmount decimal (14,2), 
--	outmount decimal (14,2), 
--	stkmount decimal (14,2), 
--	usename nvarchar(20), 
--	memo nvarchar (200),
--	sp nvarchar (1)
--) 
--insert into @result 
--select a.*,'0' from @tmp a  left join bcc b on a.bccno=b.noa 
--where (@t_typea='全部' or b.typea=@t_typea) 
--order by a.storeno,a.bccno,a.datea 


----更新庫存量 

--declare @inmount decimal (14,2) 
--declare @outmount decimal (14,2) 
--declare @stkmount decimal (14,2) 
--declare @t_stkmount decimal (14,2) 

--set @t_stkmount=0 

--declare bcc_table cursor for 
--select datea,bccno,inmount,outmount,stkmount from @result 
--open bcc_table 
--fetch next from bcc_table 
--into @datea,@bccno,@inmount,@outmount,@stkmount 
--while(@@FETCH_STATUS <> -1) 
--begin 
--if(@datea=' 庫存') 
--begin 
--set @t_stkmount=@stkmount 
--end 
--else 
--begin 
--update @result 
--set stkmount=@t_stkmount+isnull(@inmount,0)-isnull(@outmount,0)	where current of bcc_table	
--set @t_stkmount=@t_stkmount+isnull(@inmount,0)-isnull(@outmount,0) 
--end 

--fetch next from bcc_table 
--into @datea,@bccno,@inmount,@outmount,@stkmount 
--end 
--close bcc_table 
--deallocate bcc_table 

--insert into @result 
--select a.storeno,'1',null,a.bccno,b.product,null,null,null,null,null,null,'0' from @result a left join bcc b on a.bccno=b.noa group by a.storeno,a.bccno,b.product

--insert into @result 
--select storeno,'0',null,bccno,null,null,null,null,null,null,null,'1' from @result group by storeno,bccno
--insert into @result 
--select storeno,'0',null,bccno,null,null,null,null,null,null,null,'1' from @result group by storeno,bccno
--update @result 
--set bccname=null where datea=' 庫存'


---------------不要讓同一個資材拆成兩頁
--declare @space bit	
--declare @count int
--declare	@t_bccno nvarchar(20)
--declare	@t_bccno2 nvarchar(20)
--declare	@t_bccno33 nvarchar(20)
--declare	@gno nvarchar(1)
--declare	@t_gno nvarchar(1)
--declare	@x_storeno nvarchar(20)
--set @space=1
--set @t_bccno='XXXX'
--set @t_bccno2='YYYY'
--set @x_storeno='ZZZZZ'

--	set @count=0
--	declare bcc_table cursor for 
--	select storeno,gno,bccno from @result order by storeno,bccno,gno desc ,sp
--	open bcc_table 
--	fetch next from bcc_table 
--	into @storeno,@gno,@bccno
--	while(@@FETCH_STATUS <> -1) 
--	begin
--		if (@x_storeno='ZZZZZ')
--			set @x_storeno=@storeno
--		set @count=@count+1
--		if(@gno='1')
--			set @count=@count+1
--		if(@count>39 or @storeno!=@x_storeno)
--		begin
--			insert into @result 
--			select @storeno,'2',null,@bccno,null,null,null,null,null,null,null,'1'
--			set @count=0
--		end
--		if (@x_storeno!=@storeno)
--			set @x_storeno=@storeno
--		fetch next from bcc_table 
--		into @storeno,@gno,@bccno
--	end 
--	close bcc_table 
--	deallocate bcc_table 


---------------------
--if(@t_storeno='99')
--select store,gno,a.datea,bccno,bccname,usename,memo,
--reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) price,
--reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmount),1)),4,12)) inmount,
--reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,outmount),1)),4,12)) outmount,
--reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,stkmount),1)),4,12)) stkmount
--from @result a left join store b on a.storeno=b.noa order by storeno,bccno,gno desc,sp
--else
--begin

--delete @result
--where  gno+'_'+bccno+'_'+storeno in (select top 1 gno+'_'+bccno+'_'+storeno from @result
--where storeno=@t_storeno and gno='2'
--order by storeno,bccno,gno desc,sp )

--select store,gno,a.datea,bccno,bccname,usename,memo,
--reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) price,
--reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,inmount),1)),4,12)) inmount,
--reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,outmount),1)),4,12)) outmount,
--reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,stkmount),1)),4,12)) stkmount
--from @result a left join store b on a.storeno=b.noa where storeno=@t_storeno order by storeno,bccno,gno desc,sp
--end
--;