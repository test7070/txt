z_acczs1:--z_acczs1
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_bdate = case when '#non' = [2] then '' else [2] end
set @t_edate = case when '#non' = [3] then CHAR(255) else [3] end
declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(20),
		n nvarchar(20),
		noq nvarchar(5),
		acczno nvarchar(30),
		namea nvarchar(100),
		saledate nvarchar(20),
		m float,
		u nvarchar(30),
		salemoney float,
		indate nvarchar(20),
		buymoney float,
		years nvarchar(20),
		depl float,
		accumulat float,
		atotal float,
		btotal float
)
insert into @tmp
select '0' gno,a.noa,left(a.acczno,5),a.noq,a.acczno,a.namea,a.sale_date,a.mount,b.unit,a.sale_money,
b.indate,a.buy_money,b.year,a.depl,a.accumulat,a.c4,a.c5
from acczs[1] a
left join accz[1] b on a.acczno = b.noa
where a.typea='出售' --(isnull(a.sale_money,0) > 0) 
and (a.sale_date between @t_bdate and @t_edate)

insert into @tmp
select '1' gno,'',a.n,'',a.n,b.acc2,'',sum(a.m),'',SUM(salemoney),'',SUM(buymoney),'',SUM(depl),SUM(accumulat),SUM(atotal),SUM(btotal)
from @tmp a
left join acc[1] b on LEFT(a.acczno,5) = b.acc1
group by a.n,b.acc2

select gno,noa,n,noq,acczno,namea,saledate,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m),1)),4,12))m,u,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,salemoney),1)),4,12)) salemoney,indate,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,buymoney),1)),4,12)) buymoney,years,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,depl),1)),4,12)) depl,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,accumulat),1)),4,12)) accumulat,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,atotal),1)),4,12)) atotal,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,btotal),1)),4,12)) btotal
from @tmp
order by n,gno,acczno;
----------------------------------------------------------------------------------------------------------
z_acczs2:--z_acczs2
declare @t_bxacc1 nvarchar(20)
declare @t_exacc1 nvarchar(20)
set @t_bxacc1 = case when '#non' = [4] then '' else [4] end 
set @t_exacc1 = case when '#non' = [5] then CHAR(255) else [5] end
declare @tmpa table(
		acc1 nvarchar(30),
		accumulat float,---沖銷前累
		depl float,--------本期提列
		buymonry float-----沖銷成本
)
insert into @tmpa
select a.acc1,isnull(SUM(b.accumulat),0),isnull(SUM(b.depl),0),isnull(SUM(b.buy_money),0)
from accz[1] a
left join acczs[1] b on a.noa = b.acczno
where ((a.acc1 between @t_bxacc1 and @t_exacc1) or (len(@t_bxacc1)=4 and (left(a.acc1,4) between @t_bxacc1 and @t_exacc1)))
group by a.acc1

declare @tmpb table(
		acc1 nvarchar(30),
		[money] float,-----取得成本
		accumulat float,---前期累折
		year_depl float,---本期提列
		fdepl float,-------期末累折
		total float--------未折減餘額
)
insert into @tmpb 
select acc1,SUM(money),SUM(accumulat),SUM(year_depl),sum(accumulat+year_depl),
SUM(money-accumulat-year_depl)
from accz[1]
where ((acc1 between @t_bxacc1 and @t_exacc1) or (len(@t_bxacc1)=4 and (left(acc1,4) between @t_bxacc1 and @t_exacc1)))
group by acc1

declare @tmp table(
		gno nvarchar(1),
		acc1 nvarchar(30),
		moneys float,-----取得成本
		buymoney float,---沖銷成本
		accumulat float,----前期累計折舊
		yeardepl float,-----本期提列折舊
		saledepl float,-----本期沖銷折舊
		fdepl float,---------期末累計折舊
		total float----------未折減餘額
)
insert into @tmp
select '0' gno,b.acc1,a.buymonry+b.money,a.buymonry,a.accumulat+b.accumulat-a.depl,
a.depl+b.year_depl,a.accumulat,b.fdepl,b.money-b.fdepl
from @tmpa a
left join @tmpb b on a.acc1 = b.acc1
where ((b.acc1 between @t_bxacc1 and @t_exacc1) or (len(@t_bxacc1)=4 and (left(b.acc1,4) between @t_bxacc1 and @t_exacc1)))

insert into @tmp
select '1' gno,CHAR(255),SUM(a.moneys),SUM(a.buymoney),SUM(a.accumulat),SUM(a.yeardepl),
SUM(a.saledepl),SUM(a.fdepl),SUM(a.total)
from @tmp a

select gno,acc1,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) moneys,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,buymoney),1)),4,12)) buymoney,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,accumulat),1)),4,12)) accumulat,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,yeardepl),1)),4,12)) yeardepl,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,saledepl),1)),4,12)) saledepl,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,fdepl),1)),4,12)) fdepl,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
from @tmp
order by acc1,gno;
----------------------------------------------------------------------------------
z_acczs3:--z_acczs3
declare @t_bsdate nvarchar(20)
declare @t_esdate nvarchar(20)
set @t_bsdate = case when '#non' = [6] then '' else [6] end
set @t_esdate = case when '#non' = [7] then CHAR(255) else [7] end
declare @tmp table(
		gno  nvarchar(1),
		n nvarchar(20),
		acc1  nvarchar(20),
		namea nvarchar(100),
		saledate nvarchar(30),
		m float,
		u nvarchar(20),
		indate nvarchar(20),
		moneys float,
		years nvarchar(20),
		depl float,
		accumulat float,
		total float,
		memo nvarchar(max)
)
insert into @tmp
select '0' gno,LEFT(a.acczno,5),a.acczno,a.namea,a.sale_date,a.mount,b.unit,b.indate,a.buy_money,
b.year,a.depl,a.accumulat,a.buy_money-a.depl-a.accumulat,a.memo
from acczs[1] a
left join accz[1] b on b.noa = a.acczno
where a.typea!='出售' --isnull(a.sale_money,0) = 0
and (a.sale_date between @t_bsdate and @t_esdate)

insert into @tmp
select '1' gno,n,n,b.acc2,'',SUM(m),'','',SUM(moneys),'',SUM(depl),SUM(accumulat),SUM(total),''
from @tmp a
left join acc[1] b on a.n = b.acc1
group by n,b.acc2

select gno,n,acc1,namea,saledate,m,u,indate,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,moneys),1)),4,12)) moneys,years,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,depl),1)),4,12)) depl,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,accumulat),1)),4,12)) accumulat,
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
memo
from @tmp
order by n,gno,acc1;