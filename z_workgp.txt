z_workgp1:--z_workgp1
declare @t_date nvarchar(30)
declare @t_bpno nvarchar(50)
declare @t_epno nvarchar(50)
declare @t_monweek nvarchar(50)
declare @isordes nvarchar(50)
set @t_date = case when '#non' = [2] then CHAR(255) else  [2] end
set @t_bpno = case when '#non' = [3] then '' else  [3] end
set @t_epno = case when '#non' = [4] then CHAR(255) else  [4] end
set @t_monweek = case when '#non' = [5] then '' else  [5] end
set @isordes = case when '#non' = [6] then '' else  [6] end

--分週(取最小和最大預交日)
declare @tmp table(
	idno int identity(1,1),
	week int,
	bweek nvarchar(50),
	eweek nvarchar(50)
)

--今天日期
declare @now_date nvarchar(30)
set @now_date=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @now_date=left(@now_date,3)+'/'+substring(@now_date,4,2)+'/'+right(@now_date,2)

declare @minday nvarchar(10)=(select MIN(datea)minday from view_ordes[1] where (datea between @now_date and @t_date) and productno in (select noa from uca) and (productno between @t_bpno and @t_epno))
declare @maxday nvarchar(10)=(select MAX(datea)maxday from view_ordes[1] where (datea between @now_date and @t_date) and productno in (select noa from uca) and (productno between @t_bpno and @t_epno) )
declare @t_minday nvarchar(10)

if(@t_monweek='1')
begin
	--取當週的第一天
	declare @mindayweeks int=-1*(select DATEPART(WEEKDAY, CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)))-1)
	set @minday=left(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,@mindayweeks,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)) ),12 )+0890000),7),3)+'/'
					+right(left(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,@mindayweeks,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)) ),12 )+0890000),7),5),2)+'/'
					+right(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,@mindayweeks,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)) ),12 )+0890000),7),2)
	
	while(@minday<=@maxday)
	begin
		set @t_minday=left(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,6,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)) ),12 )+0890000),7),3)+'/'
					+right(left(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,6,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)) ),12 )+0890000),7),5),2)+'/'
					+right(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,6,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)) ),12 )+0890000),7),2)
		
		insert into @tmp
		select datepart(week,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2))-datepart(week,dateadd(month,datediff(month,0,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)),0))+1 
		,@minday,@t_minday
		
		set @minday=left(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,7,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)) ),12 )+0890000),7),3)+'/'
					+right(left(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,7,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)) ),12 )+0890000),7),5),2)+'/'
					+right(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,7,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)) ),12 )+0890000),7),2)
	end
end
else
begin
	while(@minday<=@maxday) 
	begin 
		set @t_minday=left(right('0'+CONVERT(nvarchar(7),CONVERT (VARCHAR(7),DATEADD(day, -1, convert(datetime,(convert(char(7),dateadd(month,1,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)),111)+'/1'))) ,12 )+0890000),7),3)+'/' 
		+right(left(right('0'+CONVERT(nvarchar(7),CONVERT (VARCHAR(7),DATEADD(day, -1, convert(datetime,(convert(char(7),dateadd(month,1,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)),111)+'/1'))) ,12 )+0890000),7),5),2)+'/' 
		+right(right('0'+CONVERT(nvarchar(7),CONVERT (VARCHAR(7),DATEADD(day, -1, convert(datetime,(convert(char(7),dateadd(month,1,CONVERT(nvarchar(10),CONVERT(int,left(@minday,3))+1911)+right(left(@minday,6),2)+right(@minday,2)),111)+'/1'))) ,12 )+0890000),7),2) 
		
		insert into @tmp 
		select '',@minday,@t_minday 
		
		set @minday=left(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,1,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@t_minday,3))+1911)+right(left(@t_minday,6),2)+right(@t_minday,2)) ),12 )+0890000),7),3)+'/' 
		+right(left(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,1,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@t_minday,3))+1911)+right(left(@t_minday,6),2)+right(@t_minday,2)) ),12 )+0890000),7),5),2)+'/' 
		+right(right('0'+CONVERT (nvarchar(7),CONVERT (VARCHAR(7),dateadd(d,1,CONVERT(datetime ,CONVERT(nvarchar(10),CONVERT(int,left(@t_minday,3))+1911)+right(left(@t_minday,6),2)+right(@t_minday,2)) ),12 )+0890000),7),2)
	end 
end

--判斷資料的第一周的日期>今天日期
if((select bweek from @tmp where idno=1)<@now_date)
begin
	update @tmp
	set bweek=@now_date
	where idno=1
end

--判斷資料的最後一周的日期<終止日期
if(@t_date!=CHAR(255) and (select bweek from @tmp where idno=(select top 1 idno from @tmp order by idno desc))<@t_date)
begin
	update @tmp
	set eweek=@t_date
	where idno=(select top 1 idno from @tmp order by idno desc)
end

--每週應排程
declare @tmpa table(
	gno nvarchar(2),
	weeks nvarchar(50),
	idno int identity(1,1),
	bday nvarchar(50),
	eday nvarchar(50),
	productno nvarchar(100),
	products nvarchar(250),
	ordemount float,
	planmount float,
	stkmount float,
	intmount float,
	purmount float,
	ordenos nvarchar(MAX),
	availmount float,
	bornmount float, 
	ordenoa nvarchar(50),
	ordenoq nvarchar(20),
	omount float, 
	oc1 float, 
	onotv float, 
	odate nvarchar(10),
	custno nvarchar(50),
	custs nvarchar(50)
)

declare @weeks int

declare cursor_table cursor for 
select week,bweek,eweek from @tmp order by idno
open cursor_table 
fetch next from cursor_table 
into @weeks,@minday,@maxday
while(@@FETCH_STATUS <> -1) 
begin 
	insert into @tmpa
	select '0',case when left(@minday,6)=left(@maxday,6) then @weeks else '1' end,@minday,@maxday,a.productno,MAX(a.product)product
	,SUM(a.mount-a.c1)-isnull((select SUM(c.mount-c.c1) from view_ordes[1] c left join view_orde[1] d on c.noa=d.noa where (c.datea between @minday and @maxday) and d.stype='5' and c.productno=a.productno and c.enda!='1'),0) ordemount
	,isnull((select SUM(c.mount-c.c1) from view_ordes[1] c left join view_orde[1] d on c.noa=d.noa where (c.datea between @minday and @maxday) and d.stype='5' and c.productno=a.productno and c.enda!='1'),0) planmount
	,isnull((select SUM(mount) from stkucc (@now_date,'','') where productno=a.productno),0) stkmount
	,isnull((select SUM(mount-inmount) from view_work[1] where productno=a.productno),0) inmount
	,isnull((select sum(mount-c1) from view_ordcs[1] where productno=a.productno),0) purmount
	--,MAX(ucastation.pretime)pretime,MAX(ucastation.ucahours)ucahours,MAX(ucastation.stationgen)stationgen,MAX(ucastation.stationhours)stationhours
	,(select e.noa+'-'+e.no2+',' from view_ordes[1] e left join view_orde[1] f on e.noa=f.noa where e.enda!='1' and e.productno=a.productno and (e.datea between @minday and @maxday)  and e.productno in (select noa from uca)  FOR XML PATH('')) ordeno
	,0,0,'','','','','','','',''
	from view_ordes[1] a left join view_orde[1] b on a.noa=b.noa
	--left join (select a.noa ucapno,a.hours ucahours,a.pretime,b.hours stationhours,b.gen stationgen from uca a left join station b on a.stationno=b.noa)ucastation on a.productno=ucastation.ucapno
	where a.enda!='1' 
	and (a.datea between @minday and @maxday)
	and a.productno in (select noa from uca) and (a.productno between @t_bpno and @t_epno)
	--and charindex(a.noa+'-'+a.no2,(select ordeno+',' from workgs[1] FOR XML PATH('')))=0 
	group by productno
	
	--if((select COUNT(*) from @tmpa where bday=@minday)=0)
	--begin
	--	insert into @tmpa(gno,weeks,bday,eday)
	--	select '0',case when left(@minday,6)=left(@maxday,6) then @weeks else '1' end,@minday,@maxday
	--end
	
	if(len(@isordes)>0)
	begin
		insert into @tmpa(gno,bday,eday,productno,ordenoa,ordenoq,omount,oc1,onotv,odate,custno,custs)
		select '2',@minday,@maxday,a.productno,a.noa,a.no2,a.mount,a.c1,a.notv,a.datea,a.custno,left(a.comp,4)
		from view_ordes[1] a left join view_orde[1] b on a.noa=b.noa
		where CHARINDEX(a.noa+'-'+a.no2,(select ordenos+',' from @tmpa where bday=@minday FOR XML PATH('')))>0
	end
	
	fetch next from cursor_table 
	into @weeks,@minday,@maxday
end 
close cursor_table 
deallocate cursor_table 

--update @tmpa
--set ordenos=LEFT(ordenos,len(ordenos)-1)
--,availmount=-1*(ordemount+planmount-stkmount-intmount-purmount)

--可用庫存計算
--儲存起始庫存
declare @tmpb table( 
	productno nvarchar(50),
	edy nvarchar(50), 
	mount float,
	intmount float,
	purmount float,
	bornmount float
) 
insert into @tmpb
select productno,(select top 1 eday from @tmpa where productno=a.productno order by bday)eday
,(select top 1 stkmount from @tmpa where productno=a.productno order by bday)mount
,(select top 1 intmount from @tmpa where productno=a.productno order by bday)mount
,(select top 1 purmount from @tmpa where productno=a.productno order by bday)mount
,(select top 1 intmount+purmount+stkmount from @tmpa where productno=a.productno order by bday)mount
from @tmpa a where productno!='' group by productno

declare @idnos int 
declare cursor_table cursor for 
select idno from @tmpa where productno!='' order by idno 
open cursor_table 
fetch next from cursor_table 
into @idnos
while(@@FETCH_STATUS <> -1) 
begin 
	update a
	set a.stkmount=b.mount,a.intmount=b.intmount,a.purmount=b.purmount,a.bornmount=b.bornmount
	from @tmpa a left join @tmpb b on a.productno=b.productno
	where idno=@idnos
	
	update @tmpa 
	set availmount=-1*(ordemount+planmount-stkmount)
	,bornmount= (case when -1*(ordemount+planmount)+bornmount>=0 then 0 else (ordemount+planmount)-bornmount end)
	where idno=@idnos
	
	update @tmpb 
	set mount=(select -1*(ordemount+planmount-stkmount) from @tmpa where idno=@idnos)
	,intmount=0,purmount=0
	,bornmount=bornmount+(select -1*(ordemount+planmount) from @tmpa where idno=@idnos)
	where productno=(select productno from @tmpa where idno=@idnos) 
	
	fetch next from cursor_table 
	into @idnos
end 
close cursor_table 
deallocate cursor_table 


if(len(@isordes)>0)
begin
	insert into @tmpa(gno,bday,eday,productno)
	select '1',bday,eday,productno from @tmpa where gno='2' group by bday,eday,productno
	insert into @tmpa(gno,bday,eday,productno)
	select '3',bday,eday,productno from @tmpa where gno='2' group by bday,eday,productno
end

select gno,left(eday,6) mons,case when @t_monweek='1' then '週' else '' end isweeks,case when @t_monweek='1' then weeks else '' end weeks,bday,eday,productno,products
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,ordemount),1)),4,12)) ordemount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,planmount),1)),4,12)) planmount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,stkmount),1)),4,12)) stkmount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,intmount),1)),4,12)) intmount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,purmount),1)),4,12)) purmount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,availmount),1)),4,12)) avaimount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bornmount),1)),4,12)) bornmount 
,ordenos,ordenoa,ordenoq
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,omount),1)),4,12)) omount 
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,oc1),1)),4,12)) oc1
,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,onotv),1)),4,12)) onotv
,odate,custno,custs from @tmpa
order by bday,productno,gno
;

