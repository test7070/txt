z_accc04:--z_accc04 日記帳
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bacc1 nvarchar(10)
	declare @t_eacc1 nvarchar(10)
	declare @t_part nvarchar(max)
	declare @t_option04 nvarchar(max)
	
	set @t_bdate = case when '#non'=[14] then '' else [14] end
	set @t_edate = case when '#non'=[15] then char(255) else [15] end
	set @t_bacc1 = case when '#non'=[16] then '' else [16] end
	set @t_eacc1 = case when '#non'=[17] then char(255) else [17] end
	set @t_part = case when '#non'=[18] then '' else [18] end
	----------------------------------------------------------------------------------------------
	declare @string nvarchar(max)
	declare @n int
	--解析要計算的種類
	IF OBJECT_ID('tempdb..#part')is not null
	BEGIN
		set @cmd = 'drop table #part'
		EXECUTE sp_executesql @cmd
	END
	create table #part(
		noa nvarchar(20)
	)
	set @string = @t_part
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #part select @string
			end
			break
		end
		insert into #part select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	----------------------------------------------------------------------------------------------
	declare @listaccc table(
		tablea nvarchar(20),
		accy nvarchar(20),
		yy nvarchar(10)
	)
	insert into @listaccc(tablea,accy,yy)
	SELECT TABLE_NAME 
	,replace(TABLE_NAME,'accc','')
	,substring(replace(TABLE_NAME,'accc',''),1,CHARINDEX('_',replace(TABLE_NAME,'accc',''))-1)
	FROM INFORMATION_SCHEMA.TABLES 
	where TABLE_NAME like 'accc[0-9][0-9][0-9]%' 
	
	delete @listaccc where not(yy between LEFT(@t_bdate,3) and LEFT(@t_edate,3))
	----------------------------------------------------------------------------------------------
	declare @tmp table(
		accy nvarchar(10),
		datea nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10)
	)
	----------------------------------------------------------------------------------------------
	declare @tablea nvarchar(20)
	declare @tableas nvarchar(20)
	declare @accy nvarchar(10)
	declare @yy nvarchar(10)

	declare cursor_table cursor for
	select tablea,replace(tablea,'accc','acccs'),accy,yy from @listaccc
	open cursor_table
	fetch next from cursor_table
	into @tablea,@tableas,@accy,@yy
	while(@@FETCH_STATUS <> -1)
	begin		
		set @cmd =
		" select @accy,@yy+'/'+b.accc2,a.accc1,a.accc2,a.accc3,a.accc4,a.accc5,a.accc6,a.accc7,a.dmoney,a.cmoney "+
		" ,a.part,d.part,a.noq"+
		" from "+@tableas+" a"+
		" left join "+@tablea+" b on a.accc3=b.accc3"+
		" left join #part c on isnull(a.part,'')=c.noa"+
		" left join part d on c.noa=d.noa"+
		" where @yy+'/'+b.accc2 between @t_bdate and @t_edate"+
		" and a.accc5 between @t_bacc1 and @t_eacc1"
		insert into @tmp(accy,datea,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq)
		execute sp_executesql @cmd,N'@accy nvarchar(10),@yy nvarchar(10),@t_bdate nvarchar(10),@t_edate nvarchar(10),@t_bacc1 nvarchar(20),@t_eacc1 nvarchar(20)'
		,@accy=@accy,@yy=@yy,@t_bdate=@t_bdate,@t_edate=@t_edate,@t_bacc1=@t_bacc1,@t_eacc1=@t_eacc1
		
		fetch next from cursor_table
		into @tablea,@tableas,@accy,@yy
	end
	close cursor_table
	deallocate cursor_table
	-----------------------------------------------------------------------------------------------
	declare @tmp2 table(
		accy nvarchar(10),
		datea nvarchar(10),
	
		accc1 nvarchar(10),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		
		accc4 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(max),
		accc7 nvarchar(max),	
		dmoney float,
		cmoney float,
		partno nvarchar(20),
		part nvarchar(20),
		noq nvarchar(10),
		zz nvarchar(10)
	)
	declare @flag int 
	declare @tmpString nvarchar(max)
	declare @maxcount int
	set @maxcount = 32
	--declare @accy nvarchar(10)
	declare @datea  nvarchar(10)
	declare @accc1 nvarchar(20)
	declare @accc2 nvarchar(20)
	declare @accc3 nvarchar(20)
	declare @accc4 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(max)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float
	declare @partno  nvarchar(20)
	declare @part  nvarchar(20)
	declare @noq  nvarchar(20)
	
	declare cursor_table cursor for
	select accy,datea,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq
	from @tmp
	open cursor_table
	fetch next from cursor_table
	into @accy,@datea,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq
	while(@@FETCH_STATUS <> -1)
	begin		
		select @n=0,@string=@accc7,@flag=0,@tmpString=""
		if(LEN(@string)=0)
		begin
			insert into @tmp2(accy,datea,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zz)
					values(@accy,@datea,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq
					,'1')
		end
		while(LEN(@string)>0)
		begin
			set @n = @n + case when UNICODE(LEFT(@string,1))>5000 then 2 else 1 end	
			set @tmpString = @tmpString + LEFT(@string,1)
			set @string = right(@string,len(@string)-1)
			if(LEN(@string)=0 or @n>=@maxcount)
			begin
				if(@flag=0)
				begin
					insert into @tmp2(accy,datea,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zz)
					values(@accy,@datea,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@tmpString,@dmoney,@cmoney,@partno,@part,@noq
					,case when LEN(@string)=0 and @flag=0 then '1' else '2' end)
					set @flag = 1
				end
				else
				begin
					insert into @tmp2(accy,datea,accc1,accc2,accc3,accc4,accc5,accc6,accc7,dmoney,cmoney,partno,part,noq,zz)
					values(@accy,@datea,@accc1,@accc2,@accc3,@accc4,null,null,@tmpString,null,null,@partno,@part,@noq
					,case when LEN(@string)=0 then '4' else '3' end)
				end
				set @n = 0
				set @tmpString = ""
			end
		end
		
		fetch next from cursor_table
		into @accy,@datea,@accc1,@accc2,@accc3,@accc4,@accc5,@accc6,@accc7,@dmoney,@cmoney,@partno,@part,@noq
	end
	close cursor_table
	deallocate cursor_table
	
	select * 
	,reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,dmoney),1)),4,17)) dd
	,reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,cmoney),1)),4,17)) cc
	from(
	select case when a.recno=1 then (case when a.zz='1' then '1' else '2' end)
		when a.recno=b.n then '7'
		else (case when a.zz='1' then '3' 
				when a.zz='2' then '4'
				when a.zz='3' then '5'
				else '6' end) end gno
	,a.*
	from(
		select ROW_NUMBER()over(partition by a.datea,a.accc3 order by a.datea,a.accc3) recno
		,a.*
		from @tmp2 a)a
	outer apply (select COUNT(1) n from @tmp2 where accc3=a.accc3 and datea=a.datea)b
	union all
	select '8','','','','','','','','','','',SUM(ISNULL(dmoney,0)),SUM(ISNULL(cmoney,0)),'','','',''
	from @tmp2) a;
	
z_acc:  --z_acc 
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	
	select
		'0' gno,S1.a1 a1,S1.b1 b1,S2.a1 a2,S2.b1 b2,S3.a1 a3,S3.b1 b3
	from
		(select
			ROW_NUMBER()over(order by R1.recno)as recno,R1.acc1 a1,R1.acc2 b1
		from
			(select ROW_NUMBER()over(order by acc1)as recno, acc1,acc2 from acc[1] where acc1 between @t_baccno and @t_eaccno)as R1
		where R1.recno%3=1) as S1
	left join
		(select
			ROW_NUMBER()over(order by R1.recno)as recno,R1.acc1 a1,R1.acc2 b1
		from
			(select ROW_NUMBER()over(order by acc1)as recno, acc1,acc2 from acc[1] where acc1 between @t_baccno and @t_eaccno)as R1
		where R1.recno%3=2) As s2
	on s1.recno=s2.recno
	left join
		(select
			ROW_NUMBER()over(order by R1.recno)as recno,R1.acc1 a1,R1.acc2 b1
		from
			(select ROW_NUMBER()over(order by acc1)as recno, acc1,acc2 from acc[1] where acc1 between @t_baccno and @t_eaccno)as R1
		where R1.recno%3=0) as s3
	on s1.recno=s3.recno
	order by S1.recno;
	
z_acc2: --z_acc2
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	
	select '0' gno, acc1,acc2,acc3,acc4,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney,
	acc7,oacc,lok,yeara
	from acc[1]
	where acc1 between @t_baccno and @t_eaccno 
	order by acc1;

z_actot1:--z_actot1
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_acclen int 
	set @t_acclen = 5 
	declare @t_accy nvarchar(10)
	declare @t_bdate nvarchar(10) 
	declare @t_edate nvarchar(10) 
	declare @t_baccno nvarchar(25) 
	declare @t_eaccno nvarchar(25) 
	declare @t_bpart nvarchar(18) 
	declare @t_epart nvarchar(18) 
	set @t_accy = '[1]'
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	------------------------------------------------------------------------------------
	IF OBJECT_ID('tempdb..#z_actot1')is not null
	BEGIN
		set @cmd = 'drop table #z_actot1'
		EXECUTE sp_executesql @cmd
	END
	create table #z_actot1(
		acc1 nvarchar(20),
		acc2 nvarchar(50),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(40),
		accc7 nvarchar(max),
		dmoney float,
		cmoney float,
		total float
	)
	IF OBJECT_ID('tempdb..#acc')is not null
	BEGIN
		set @cmd = 'drop table #acc'
		EXECUTE sp_executesql @cmd
	END
	create table #acc(
		acc1 nvarchar(20),
		acc2 nvarchar(50)
	)
	
	set @cmd=
		" select left(a.acc1,@t_acclen),ISNULL(b.acc2,'') from acc"+@t_accy+" a"+
		" left join acc"+@t_accy+" b on left(a.acc1,@t_acclen)=b.acc1 "+
		" group by left(a.acc1,@t_acclen),ISNULL(b.acc2,'')"
	insert into #acc
	execute sp_executesql @cmd,N'@t_acclen int',@t_acclen=@t_acclen
	
	update #acc
	set acc2=(select top 1 acc2 from acc[1] where left(acc1,@t_acclen)=#acc.acc1 order by acc1 )
	where acc2=''

	set @cmd = 
	" select left(isnull(a.accc5,''),@t_acclen),c.acc2,isnull(b.accc2,''),isnull(b.accc3,''),a.accc5,a.accc6,a.accc7+' '+(case when PATINDEX('%-%',a.accc6)=0 then '' else substring(a.accc6,PATINDEX('%-%',a.accc6)+1,len(a.accc6)) end),a.dmoney,a.cmoney,0"+
	" from acccs"+@t_accy+" a"+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join #acc c on c.acc1=left(isnull(a.accc5,''),@t_acclen)"+
	" where (left(isnull(a.accc5,''),@t_acclen) between @t_baccno and @t_eaccno)"+
	" and (isnull(b.accc2,'') <= @t_edate)"+
	" and (isnull(a.part,'') between @t_bpart and @t_epart) "+
	" order by left(isnull(a.accc5,''),@t_acclen),isnull(b.accc2,''),isnull(b.accc3,''),isnull(a.noq,'')"
	insert into #z_actot1
	execute sp_executesql @cmd,N'@t_acclen int,@t_bdate nvarchar(10),@t_edate nvarchar(10),@t_bpart nvarchar(10),@t_epart nvarchar(10),@t_baccno nvarchar(20),@t_eaccno nvarchar(20)'
	,@t_acclen=@t_acclen,@t_bdate=@t_bdate,@t_edate=@t_edate,@t_bpart=@t_bpart,@t_epart=@t_epart,@t_baccno=@t_baccno,@t_eaccno=@t_eaccno
	
	IF OBJECT_ID('tempdb..#begin')is not null
	BEGIN
		set @cmd = 'drop table #begin'
		EXECUTE sp_executesql @cmd
	END
	create table #begin(
		acc1 nvarchar(20),
		acc2 nvarchar(50),
		accc5 nvarchar(50),
		accc6 nvarchar(50),
		dmoney float,
		cmoney float
	)
	set @cmd = 
	" select left(a.acc1,@t_acclen),b.acc2,a.acc1,a.acc2"+
	" ,case when substring(a.acc1,1,1)='1'or substring(a.acc1,1,1)='5' or substring(a.acc1,1,1)='6' or substring(a.acc1,1,1)='8' or substring(a.acc1,1,2)='73' then isnull(beginmoney,0) else 0 end"+
	" ,case when substring(a.acc1,1,1)='1'or substring(a.acc1,1,1)='5' or substring(a.acc1,1,1)='6' or substring(a.acc1,1,1)='8' or substring(a.acc1,1,2)='73' then 0 else isnull(beginmoney,0) end"+
	" from acc"+@t_accy+" a"+
	" left join #acc b on b.acc1=left(a.acc1,@t_acclen)"+
	" where isnull(beginmoney,0)!=0 and (left(a.acc1,@t_acclen) between @t_baccno and @t_eaccno)"
	insert into #begin
	execute sp_executesql @cmd,N'@t_acclen int,@t_baccno nvarchar(20),@t_eaccno nvarchar(20)'
	,@t_acclen=@t_acclen,@t_baccno=@t_baccno,@t_eaccno=@t_eaccno
	
	insert into #z_actot1
	select acc1,acc2,'','期初',accc5,accc6,accc5+'期初',dmoney,cmoney,0
	from #begin
	--==================================================================
	--上期結餘
	declare @tmp table(
		acc1 nvarchar(20),
		acc2 nvarchar(40),
		dmoney float,
		cmoney float
	)
	insert into @tmp
	select acc1,acc2,SUM(dmoney),SUM(cmoney) from #z_actot1 where accc2<@t_bdate group by acc1,acc2
	if(@t_bdate>'01/01')
	begin
		delete #z_actot1 where accc2<@t_bdate
		insert into #z_actot1
		select acc1,acc2,'','上期結餘','','','',dmoney,cmoney,0  from @tmp 
	end
	--==================================================================
	--結餘
	declare @tmp2 table(
		gno nvarchar(3),
		acc1 nvarchar(20),
		acc2 nvarchar(50),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(40),
		accc7 nvarchar(max),
		dmoney float,
		cmoney float,
		total float
	)
	
	declare @acc1 nvarchar(20)
	declare @acc2 nvarchar(40)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(40)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float
	
	declare @total float

	declare cursor_table cursor for
	select acc1,acc2 from #z_actot1 group by acc1,acc2
	open cursor_table
	fetch next from cursor_table
	into @acc1,@acc2
	while(@@FETCH_STATUS <> -1)
	begin
		set @total = 0
		declare cursor_table2 cursor for
		select accc2,accc3,accc5,accc6,accc7,dmoney,cmoney from #z_actot1 where acc1=@acc1 order by accc2,accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc2,@accc3,@accc5,@accc6,@accc7,@dmoney,@cmoney
		while(@@FETCH_STATUS <> -1)
		begin
			set @total = @total + case when substring(@acc1,1,1)='1'or substring(@acc1,1,1)='5' or substring(@acc1,1,1)='6' or substring(@acc1,1,1)='8' or substring(@acc1,1,2)='73' then isnull(@dmoney,0)-isnull(@cmoney,0) else isnull(@cmoney,0)-isnull(@dmoney,0) end
			insert into @tmp2
			select '0',@acc1,@acc2,@accc2,@accc3,@accc5,@accc6,@accc7,@dmoney,@cmoney,@total
			
			fetch next from cursor_table2
			into @accc2,@accc3,@accc5,@accc6,@accc7,@dmoney,@cmoney
		end
		close cursor_table2
		deallocate cursor_table2
		
		insert into @tmp2
		select '1',@acc1,@acc2,'','','','','',SUM(dmoney),SUM(cmoney),@total	
		from @tmp2 where acc1=@acc1
			
		fetch next from cursor_table
		into @acc1,@acc2
	end
	close cursor_table
	deallocate cursor_table
	
	select * 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(dmoney,0)),1)),4,12)) dm
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(cmoney,0)),1)),4,12)) cm 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(total,0)),1)),4,12)) tt
	from @tmp2 order by acc1,gno,accc2,accc3
	
	drop table #begin
	drop table #acc
	drop table #z_actot1;

z_actot2:--z_actot2
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_acclen int 
	set @t_acclen = 5 
	declare @t_accy nvarchar(10)
	declare @t_bdate nvarchar(10) 
	declare @t_edate nvarchar(10) 
	declare @t_baccno nvarchar(25) 
	declare @t_eaccno nvarchar(25) 
	declare @t_bpart nvarchar(18) 
	declare @t_epart nvarchar(18) 
	set @t_accy = '[1]'
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	------------------------------------------------------------------------------------
	IF OBJECT_ID('tempdb..#z_actot2')is not null
	BEGIN
		set @cmd = 'drop table #z_actot2'
		EXECUTE sp_executesql @cmd
	END
	create table #z_actot2(
		acc1 nvarchar(20),
		acc2 nvarchar(50),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(40),
		accc7 nvarchar(max),
		dmoney float,
		cmoney float,
		total float
	)
	IF OBJECT_ID('tempdb..#acc')is not null
	BEGIN
		set @cmd = 'drop table #acc'
		EXECUTE sp_executesql @cmd
	END
	create table #acc(
		acc1 nvarchar(20),
		acc2 nvarchar(50)
	)
	
	set @cmd=
		" select a.acc1,ISNULL(b.acc2,'') from acc"+@t_accy+" a"+
		" left join acc"+@t_accy+" b on a.acc1=b.acc1 "+
		" group by a.acc1,ISNULL(b.acc2,'')"
	insert into #acc
	execute sp_executesql @cmd

	set @cmd = 
	" select isnull(a.accc5,''),c.acc2,isnull(b.accc2,''),isnull(b.accc3,''),a.accc5,a.accc6,a.accc7,a.dmoney,a.cmoney,0"+
	" from acccs"+@t_accy+" a"+
	" left join accc"+@t_accy+" b on a.accc3=b.accc3"+
	" left join #acc c on c.acc1=isnull(a.accc5,'')"+
	" where (isnull(a.accc5,'') between @t_baccno and @t_eaccno)"+
	" and (isnull(b.accc2,'') <= @t_edate)"+
	" and (isnull(a.part,'') between @t_bpart and @t_epart) "+
	" order by isnull(a.accc5,''),isnull(b.accc2,''),isnull(b.accc3,''),isnull(a.noq,'')"
	insert into #z_actot2
	execute sp_executesql @cmd,N'@t_bdate nvarchar(10),@t_edate nvarchar(10),@t_bpart nvarchar(10),@t_epart nvarchar(10),@t_baccno nvarchar(20),@t_eaccno nvarchar(20)'
	,@t_bdate=@t_bdate,@t_edate=@t_edate,@t_bpart=@t_bpart,@t_epart=@t_epart,@t_baccno=@t_baccno,@t_eaccno=@t_eaccno
	
	IF OBJECT_ID('tempdb..#begin')is not null
	BEGIN
		set @cmd = 'drop table #begin'
		EXECUTE sp_executesql @cmd
	END
	create table #begin(
		acc1 nvarchar(20),
		acc2 nvarchar(50),
		accc5 nvarchar(50),
		accc6 nvarchar(50),
		dmoney float,
		cmoney float
	)
	set @cmd = 
	" select a.acc1,b.acc2,a.acc1,a.acc2"+
	" ,case when substring(a.acc1,1,1)='1'or substring(a.acc1,1,1)='5' or substring(a.acc1,1,1)='6' or substring(a.acc1,1,1)='8' or substring(a.acc1,1,2)='73' then isnull(beginmoney,0) else 0 end"+
	" ,case when substring(a.acc1,1,1)='1'or substring(a.acc1,1,1)='5' or substring(a.acc1,1,1)='6' or substring(a.acc1,1,1)='8' or substring(a.acc1,1,2)='73' then 0 else isnull(beginmoney,0) end"+
	" from acc"+@t_accy+" a"+
	" left join #acc b on b.acc1=a.acc1"+
	" where isnull(beginmoney,0)!=0 and (a.acc1 between @t_baccno and @t_eaccno)"
	insert into #begin
	execute sp_executesql @cmd,N'@t_baccno nvarchar(20),@t_eaccno nvarchar(20)'
	,@t_baccno=@t_baccno,@t_eaccno=@t_eaccno
	
	insert into #z_actot2
	select acc1,acc2,'','期初',accc5,accc6,accc5+'期初',dmoney,cmoney,0
	from #begin
	--==================================================================
	--上期結餘
	declare @tmp table(
		acc1 nvarchar(20),
		acc2 nvarchar(40),
		dmoney float,
		cmoney float
	)
	insert into @tmp
	select acc1,acc2,SUM(dmoney),SUM(cmoney) from #z_actot2 where accc2<@t_bdate group by acc1,acc2
	if(@t_bdate>'01/01')
	begin
		delete #z_actot2 where accc2<@t_bdate
		insert into #z_actot2
		select acc1,acc2,'','上期結餘','','','',dmoney,cmoney,0  from @tmp 
	end
	--==================================================================
	--結餘
	declare @tmp2 table(
		gno nvarchar(3),
		p nvarchar(3),
		acc1 nvarchar(20),
		acc2 nvarchar(50),
		accc2 nvarchar(10),
		accc3 nvarchar(20),
		accc5 nvarchar(20),
		accc6 nvarchar(40),
		accc7 nvarchar(max),
		dmoney float,
		cmoney float,
		total float
	)
	
	declare @acc1 nvarchar(20)
	declare @acc2 nvarchar(40)
	declare @accc2 nvarchar(10)
	declare @accc3 nvarchar(20)
	declare @accc5 nvarchar(20)
	declare @accc6 nvarchar(40)
	declare @accc7 nvarchar(max)
	declare @dmoney float
	declare @cmoney float
	
	declare @total float

	declare cursor_table cursor for
	select acc1,acc2 from #z_actot2 group by acc1,acc2
	open cursor_table
	fetch next from cursor_table
	into @acc1,@acc2
	while(@@FETCH_STATUS <> -1)
	begin
		set @total = 0
		declare cursor_table2 cursor for
		select accc2,accc3,accc5,accc6,accc7,dmoney,cmoney from #z_actot2 where acc1=@acc1 order by accc2,accc3
		open cursor_table2
		fetch next from cursor_table2
		into @accc2,@accc3,@accc5,@accc6,@accc7,@dmoney,@cmoney
		while(@@FETCH_STATUS <> -1)
		begin
			set @total = @total + case when substring(@acc1,1,1)='1'or substring(@acc1,1,1)='5' or substring(@acc1,1,1)='6' or substring(@acc1,1,1)='8' or substring(@acc1,1,2)='73' then isnull(@dmoney,0)-isnull(@cmoney,0) else isnull(@cmoney,0)-isnull(@dmoney,0) end
			insert into @tmp2
			select '0','',@acc1,@acc2,@accc2,@accc3,@accc5,@accc6,@accc7,@dmoney,@cmoney,@total
			
			fetch next from cursor_table2
			into @accc2,@accc3,@accc5,@accc6,@accc7,@dmoney,@cmoney
		end
		close cursor_table2
		deallocate cursor_table2
		
		insert into @tmp2
		select '1','',@acc1,@acc2,'','','','','',SUM(dmoney),SUM(cmoney),@total	
		from @tmp2 where acc1=@acc1
			
		fetch next from cursor_table
		into @acc1,@acc2
	end
	close cursor_table
	deallocate cursor_table
	
	insert into @tmp2
	select '0','z',acc1,acc2,LEFT(isnull(accc2,''),2),'月小計','','','',SUM(dmoney),SUM(cmoney),null
	from @tmp2
	where len(isnull(accc2,''))>0
	group by acc1,acc2,LEFT(isnull(accc2,''),2)
	
	select * 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(dmoney,0)),1)),4,12)) dm
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(cmoney,0)),1)),4,12)) cm 
	,case when total is null then null else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(total,0)),1)),4,12)) end tt
	from @tmp2 order by acc1,gno,LEFT(isnull(accc2,''),2),p,accc2,accc3
	
	drop table #begin
	drop table #acc
	drop table #z_actot2;

z_actot3:--z_actot3
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
declare @tmp table( 
gno nvarchar(1), 
accc5 nvarchar(20), 
dmoney int, 
cmoney int, 
[money] int, 
acc2 nvarchar(50), 
beginmoney int, 
lastmoney int 
) 
insert into @tmp 
select S1.gno,s1.accc5,s1.dmoney,s1.cmoney,s1.money, acc.acc2, isNull(acc.beginmoney,0) + isNull(s2.money,0) as beginMoney, isNull(acc.beginmoney,0) + isNull(s1.money,0) + isNull(s2.money,0) as lastMoney 
from( 
select 
'0' gno, accc5, 
SUM(dmoney) dmoney, SUM(cmoney) cmoney, SUM((dmoney-Cmoney)*n) money 
from( 
select b.* , 
case when substring(b.accc5,1,1)='1' or substring(b.accc5,1,1)='5' or substring(b.accc5,1,1)='6' or substring(b.accc5,1,1)='8' or substring(b.accc5,1,2)='73' then 1 else -1 end n 
from acccs[1] b where (b.accc5 between @t_baccno and @t_eaccno) and (isnull(b.part,'') between @t_bpart and @t_epart) and (b.accc2 between @t_bdate and @t_edate)) as R1 
group by accc5 
) AS s1 
left join acc[1] acc on acc.acc1=s1.accc5 
left join 
(select accc5,SUM(dmoney) dmoney, SUM(cmoney) cmoney, SUM((dmoney-Cmoney)*n) money 
from 
(select b.* , 
case when substring(b.accc5,1,1)='1' or substring(b.accc5,1,1)='5' or substring(b.accc5,1,1)='6' or substring(b.accc5,1,1)='8' or substring(b.accc5,1,2)='73' then 1 else -1 end n 
from acccs[1] b where (b.accc5 between @t_baccno and @t_eaccno) and (isnull(b.part,'') between @t_bpart and @t_epart) and b.accc2<@t_bdate) as R2 
group by accc5 
)as S2 
on s1.accc5 = S2.accc5 

insert into @tmp 
select '1'gno,'',sum(dmoney),sum(cmoney),0,'',SUM(beginmoney),SUM(lastmoney) 
from @tmp 

select gno,accc5, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney, 
acc2,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,beginmoney),1)),4,12)) beginmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,lastmoney),1)),4,12)) lastmoney 
from @tmp 
order by gno,accc5 ;



z_acday1原本的:--z_acday1原本的
	declare @t_chk1 nvarchar(1)
	set @t_chk1 = 'Y'--是否顯示現金傳票
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	declare @result table(
		gno nvarchar(1),
		p nvarchar(1),
		typea nvarchar(1) not null,
		accc1  nvarchar(10),
		accc2  nvarchar(10) ,
		accc3  nvarchar(25) ,
		oaccc3  nvarchar(25) not null,
		accc4  nvarchar(12),
		accc5  nvarchar(25),
		accc6  nvarchar(86),
		accc7  nvarchar(340),
		accc8  decimal(16,2),
		zno  nvarchar(20),
		ver  varchar(50),
		noq  nvarchar(3) not null,
		part  nvarchar(18),
		coin  nvarchar(30),
		floata  decimal(10,5),
		dmoney  decimal(20,0),
		cmoney  decimal(20,0)
		primary key (oaccc3,noq,typea) 
	)
	
	insert @result
	select '0' gno, '1' p, '0' typea, b.accc1,b.accc2,b.accc3,b.accc3,b.accc4,b.accc5,b.accc6,b.accc7,b.accc8,b.zno,b.ver,
	b.noq,b.part,b.coin,b.floata,b.dmoney,b.cmoney
	from acccs[1] b 
	where (b.accc1='3' or b.accc1!='3' and @t_chk1='Y') and
		  (b.accc5 between @t_baccno and @t_eaccno) and 
		  (isnull(b.part,'') between @t_bpart and @t_epart) and 
		  (b.accc2 between @t_bdate and @t_edate)
	--**************************************************************************************
	declare @typea  nvarchar(1)
	declare @accc1  nvarchar(10)
	declare @accc2  nvarchar(10)
	declare @accc3  nvarchar(25)
	declare @oaccc3  nvarchar(25)
	declare @accc4  nvarchar(12)
	declare @accc5  nvarchar(25)
	declare @accc6  nvarchar(86)
	declare @accc7  nvarchar(340)
	declare @accc8  decimal(16,2)
	declare @zno  nvarchar(20)
	declare @ver  varchar(50)
	declare @noq  nvarchar(3)
	declare @part  nvarchar(18)
	declare @coin  nvarchar(30)
	declare @floata  decimal(10,5)
	declare @t_accc3 nvarchar(20)
	declare @t_accc2 nvarchar(20)
	set @t_accc2= 'qqqqq'
	set @t_accc3 = 'qqqqqq'
	declare cursor_table cursor for
	select typea,accc1,accc2,accc3,oaccc3,accc4,accc5,accc6,accc7,accc8,zno,ver,noq,part,coin,floata
	from @result order by oaccc3,noq,typea
	open cursor_table 
	fetch next from cursor_table
	into @typea,@accc1,@accc2,@accc3,@oaccc3,@accc4,@accc5,@accc6,@accc7,@accc8,@zno,@ver,@noq,@part,@coin,@floata
	while(@@FETCH_STATUS <> -1)
	begin

		if @accc1 = '1' and @typea!='1'
		begin
			insert @result
			select '0' gno, '1' p, '1' typea,@accc1 accc1,@accc2 accc2,@accc3 accc3,@oaccc3 oaccc3,'借' accc4,@accc5 accc5,
			       '現金' accc6,@accc7 accc7,@accc8 accc8,'' zno,@ver ver,@noq noq,@part part,@coin coin,
			       @floata float,@accc8 dmoney,0 cmoney
		end
		
		if @accc1 = '2' and @typea!='2'
		begin
			insert @result
			select '0' gno, '1' p, '2' typea,@accc1 accc1,@accc2 accc2,@accc3 accc3,@oaccc3 oaccc3,'貸' accc4,@accc5 accc5,
			       '現金' accc6,@accc7 accc7,@accc8 accc8,@zno zno,@ver ver,@noq noq,@part part,@coin coin,
			       @floata float,0 dmoney,@accc8 cmoney
		end
	fetch next from cursor_table
	into @typea,@accc1,@accc2,@accc3,@oaccc3,@accc4,@accc5,@accc6,@accc7,@accc8,@zno,@ver,@noq,@part,@coin,@floata
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select typea,accc1,accc2,accc3,oaccc3,accc4,accc5,accc6,accc7,accc8,zno,ver,noq,part,coin,floata
	from @result order by oaccc3,noq,typea
	open cursor_table 
	fetch next from cursor_table
	into @typea,@accc1,@accc2,@accc3,@oaccc3,@accc4,@accc5,@accc6,@accc7,@accc8,@zno,@ver,@noq,@part,@coin,@floata
	while(@@FETCH_STATUS <> -1)
	begin
		if (@accc3 =  @t_accc3) and (@accc2 = @t_accc2) and (@t_accc2 != 'qqqqq') and (@t_accc3 != 'qqqqqq')
		begin
			update @result set accc3 = '' , accc2 = '' where current of cursor_table
		end
		else
		begin
			set @t_accc2 = @accc2
			set @t_accc3 = @accc3
		end
	fetch next from cursor_table
	into @typea,@accc1,@accc2,@accc3,@oaccc3,@accc4,@accc5,@accc6,@accc7,@accc8,@zno,@ver,@noq,@part,@coin,@floata
	end
	close cursor_table
	deallocate cursor_table
	
	--**************************************************************************************
	select gno,p,typea,accc1,accc2,accc3,oaccc3,accc4,accc5,accc6,accc7,accc8,zno,ver,noq,part,coin,floata,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney
	from @result
	order by oaccc3,noq,typea;
	
	
	
z_acday1:--z_acday1
declare @t_chk1 nvarchar(1) 
set @t_chk1 = 'Y'--是否顯示現金傳票 
declare @t_bdate nvarchar(10) 
declare @t_edate nvarchar(10) 
declare @t_baccno nvarchar(25) 
declare @t_eaccno nvarchar(25) 
declare @t_bpart nvarchar(18) 
declare @t_epart nvarchar(18)
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
set @t_baccno = case when '#non'=[4] then '' else [4] end
set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
set @t_bpart = case when '#non'=[6] then '' else [6] end
set @t_epart = case when '#non'=[7] then char(255) else [7] end
declare @result table( 
gno nvarchar(1), 
p nvarchar(1), 
typea nvarchar(1) not null, 
accc1 nvarchar(10), 
accc2 nvarchar(10) , 
accc3 nvarchar(25) , 
oaccc3 nvarchar(25) not null, 
accc4 nvarchar(12), 
accc5 nvarchar(25), 
accc6 nvarchar(86), 
accc7 nvarchar(340), 
accc8 decimal(16,2), 
zno nvarchar(20), 
ver varchar(50), 
noq nvarchar(3) not null, 
part nvarchar(18), 
coin nvarchar(30), 
floata decimal(10,5), 
dmoney decimal(20,0), 
cmoney decimal(20,0) 
primary key (oaccc3,noq,typea) 
)

insert @result 
select '0' gno, '1' p, '0' typea, b.accc1,b.accc2,b.accc3,b.accc3,b.accc4,b.accc5,b.accc6,b.accc7,b.accc8,b.zno,b.ver, 
b.noq,b.part,b.coin,b.floata,b.dmoney,b.cmoney 
from acccs[1] b 
where (b.accc1='3' or b.accc1!='3' and @t_chk1='Y') and 
(b.accc5 between @t_baccno and @t_eaccno) and 
(isnull(b.part,'') between @t_bpart and @t_epart) and 
(b.accc2 between @t_bdate and @t_edate) 
--************************************************************************************** 
declare @typea nvarchar(1) 
declare @accc1 nvarchar(10) 
declare @accc2 nvarchar(10) 
declare @accc3 nvarchar(25) 
declare @oaccc3 nvarchar(25) 
declare @accc4 nvarchar(12) 
declare @accc5 nvarchar(25) 
declare @accc6 nvarchar(86) 
declare @accc7 nvarchar(340) 
declare @accc8 decimal(16,2) 
declare @zno nvarchar(20) 
declare @ver varchar(50) 
declare @noq nvarchar(3) 
declare @part nvarchar(18) 
declare @coin nvarchar(30) 
declare @floata decimal(10,5) 
declare @t_accc3 nvarchar(20) 
declare @t_accc2 nvarchar(20) 
set @t_accc2= 'qqqqq' 
set @t_accc3 = 'qqqqqq' 
declare cursor_table cursor for 
select typea,accc1,accc2,accc3,oaccc3,accc4,accc5,accc6,accc7,accc8,zno,ver,noq,part,coin,floata 
from @result order by oaccc3,noq,typea 
open cursor_table 
fetch next from cursor_table 
into @typea,@accc1,@accc2,@accc3,@oaccc3,@accc4,@accc5,@accc6,@accc7,@accc8,@zno,@ver,@noq,@part,@coin,@floata 
while(@@FETCH_STATUS <> -1) 
begin 

if @accc1 = '1' and @typea!='1' 
begin 
insert @result 
select '0' gno, '1' p, '1' typea,@accc1 accc1,@accc2 accc2,@accc3 accc3,@oaccc3 oaccc3,'借' accc4,@accc5 accc5, 
'現金' accc6,@accc7 accc7,@accc8 accc8,'' zno,@ver ver,@noq noq,@part part,@coin coin, 
@floata float,@accc8 dmoney,0 cmoney 
end 

if @accc1 = '2' and @typea!='2' 
begin 
insert @result 
select '0' gno, '1' p, '2' typea,@accc1 accc1,@accc2 accc2,@accc3 accc3,@oaccc3 oaccc3,'貸' accc4,@accc5 accc5, 
'現金' accc6,@accc7 accc7,@accc8 accc8,@zno zno,@ver ver,@noq noq,@part part,@coin coin, 
@floata float,0 dmoney,@accc8 cmoney 
end 
fetch next from cursor_table 
into @typea,@accc1,@accc2,@accc3,@oaccc3,@accc4,@accc5,@accc6,@accc7,@accc8,@zno,@ver,@noq,@part,@coin,@floata 
end 
close cursor_table 
deallocate cursor_table 

declare @resultA table( 
gno nvarchar(1), 
p nvarchar(1), 
typea nvarchar(1) not null, 
orderby int identity(0,1),
accc1 nvarchar(10), 
accc2 nvarchar(10) , 
accc3 nvarchar(25) , 
oaccc3 nvarchar(25) not null, 
accc4 nvarchar(12), 
accc5 nvarchar(25), 
accc6 nvarchar(86), 
accc7 nvarchar(340), 
accc8 decimal(16,2), 
zno nvarchar(20), 
ver varchar(50), 
noq nvarchar(3) not null, 
part nvarchar(18), 
coin nvarchar(30), 
floata decimal(10,5), 
dmoney decimal(20,0), 
cmoney decimal(20,0) 
primary key (oaccc3,noq,typea) 
) 

insert into @resultA
select * from @result b order by accc2,oaccc3,noq,typea

declare @i int
declare @tmp_accc2 nvarchar(20) 
declare @tmp_accc3 nvarchar(20) 
declare @tmp_t_accc2 nvarchar(20) 
declare @tmp_t_accc3 nvarchar(20) 
set @i = 0
set @tmp_accc2 = ''
set @tmp_accc3 = ''
set @tmp_t_accc2 = ''
set @tmp_t_accc3 = ''
while(@i < ((select MAX(orderby) from @resultA)+1))
begin
	select @tmp_accc2 = accc2 from @resultA where orderby = @i
	select @tmp_accc3 = accc3 from @resultA where orderby = @i
	if (@tmp_accc2 = @tmp_t_accc2) and (@tmp_accc3 = @tmp_t_accc3)
	begin
		update @resultA set accc2 = '' , accc3 = '' where orderby = @i
	end
	else
	begin
		set @tmp_t_accc2 = @tmp_accc2 
		set @tmp_t_accc3 = @tmp_accc3 
	end
	set @i +=1
end

--************************************************************************************** 
select gno,p,orderby,typea,accc1,accc2,accc3,oaccc3,accc4,accc5,accc6,accc7,accc8,zno,ver,noq,part,coin,floata, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney 
from @resultA order by orderby;
	

z_acin:--z_acin
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	
	declare @tmp table(
			gno nvarchar(1),
			acc1 nvarchar(20),
			acc2 nvarchar(50),
			dmoney int,
			cmoney int,
			[money] int
	)
	insert into @tmp
	select '0' gno, R1.acc1 acc1, R1.acc2 acc2, R2.dmoney dmoney, R2.cmoney cmoney, isnull(R2.cmoney,0)-isnull(R2.dmoney,0) money
	from
		(select acc1,acc2 from acc[1] where (acc1 between @t_baccno and @t_eaccno) and (LEFT(acc1,1)='4' or LEFT(acc1,2)='71')) as R1
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R2
	on R1.acc1 = R2.accc5 
	where isnull(R2.dmoney,0)-isnull(R2.cmoney,0)!=0
	
	select gno,acc1,acc2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(dmoney,0)),1)),4,12)) dmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(cmoney,0)),1)),4,12)) cmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(money,0)),1)),4,12)) money
	from @tmp
	order by acc1;

z_acin2:--z_acin2
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	
	declare @tmp table(
			gno nvarchar(1),
			acc1 nvarchar(20),
			acc2 nvarchar(50),
			m01 int,
			m02 int,
			m03 int,
			m04 int,
			m05 int,
			m06 int,
			m07 int,
			m08 int,
			m09 int,
			m10 int,
			m11 int,
			m12 int,
			total int
	)
	insert into @tmp
	select '0' gno, R0.acc1 acc1, R0.acc2 acc2, 
			isnull(R1.cmoney,0)-isnull(R1.dmoney,0) m01,
			isnull(R2.cmoney,0)-isnull(R2.dmoney,0) m02,
			isnull(R3.cmoney,0)-isnull(R3.dmoney,0) m03,
			isnull(R4.cmoney,0)-isnull(R4.dmoney,0) m04,
			isnull(R5.cmoney,0)-isnull(R5.dmoney,0) m05,
			isnull(R6.cmoney,0)-isnull(R6.dmoney,0) m06,
			isnull(R7.cmoney,0)-isnull(R7.dmoney,0) m07,
			isnull(R8.cmoney,0)-isnull(R8.dmoney,0) m08,
			isnull(R9.cmoney,0)-isnull(R9.dmoney,0) m09,
			isnull(R10.cmoney,0)-isnull(R10.dmoney,0) m10,
			isnull(R11.cmoney,0)-isnull(R11.dmoney,0) m11,
			isnull(R12.cmoney,0)-isnull(R12.dmoney,0) m12,
			isnull(R13.cmoney,0)-isnull(R13.dmoney,0) total
	from
		(select acc1,acc2 from acc[1] where (acc1 between @t_baccno and @t_eaccno) and (LEFT(acc1,1)='4' or LEFT(acc1,2)='71')) as R0
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='01' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R1
	on R0.acc1 = R1.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='02' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R2		   
	on R0.acc1 = R2.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='03' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R3
	on R0.acc1 = R3.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='04' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R4
	on R0.acc1 = R4.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='05' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R5
	on R0.acc1 = R5.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='06' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R6
	on R0.acc1 = R6.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='07' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R7
	on R0.acc1 = R7.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='08' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R8
	on R0.acc1 = R8.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='09' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R9
	on R0.acc1 = R9.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='10' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R10
	on R0.acc1 = R10.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='11' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R11
	on R0.acc1 = R11.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='12' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R12
	on R0.acc1 = R12.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R13
	on R0.acc1 = R13.accc5 
	where not(isnull(R1.dmoney-R1.cmoney,0)=0 and isnull(R2.dmoney-R2.cmoney,0)=0 and isnull(R3.dmoney-R3.cmoney,0)=0 and
			  isnull(R4.dmoney-R4.cmoney,0)=0 and isnull(R5.dmoney-R5.cmoney,0)=0 and isnull(R6.dmoney-R6.cmoney,0)=0 and
			  isnull(R7.dmoney-R7.cmoney,0)=0 and isnull(R8.dmoney-R8.cmoney,0)=0 and isnull(R9.dmoney-R9.cmoney,0)=0 and
			  isnull(R10.dmoney-R10.cmoney,0)=0 and isnull(R11.dmoney-R11.cmoney,0)=0 and isnull(R12.dmoney-R12.cmoney,0)=0)
	select gno,acc1,acc2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m01),1)),4,12)) m01,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m02),1)),4,12)) m02,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m03),1)),4,12)) m03,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m04),1)),4,12)) m04,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m05),1)),4,12)) m05,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m06),1)),4,12)) m06,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m07),1)),4,12)) m07,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m08),1)),4,12)) m08,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m09),1)),4,12)) m09,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m10),1)),4,12)) m10,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m11),1)),4,12)) m11,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m12),1)),4,12)) m12,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
	from @tmp
	order by acc1;

z_acout:--z_acout
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	
	declare @tmp table(
			gno nvarchar(1),
			acc1 nvarchar(20),
			acc2  nvarchaR(50),
			dmoney int,
			cmoney int,
			[money] int
	)
	insert into @tmp
	select '0' gno, R1.acc1 acc1, R1.acc2 acc2, R2.dmoney dmoney, R2.cmoney cmoney, isnull(R2.dmoney,0)-isnull(R2.cmoney,0) money
	from
		(select acc1,acc2 from acc[1] where (acc1 between @t_baccno and @t_eaccno) and (LEFT(acc1,1)>='5' and LEFT(acc1,2)!='71')) as R1
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R2
	on R1.acc1 = R2.accc5 
	where isnull(R2.dmoney,0)-isnull(R2.cmoney,0)!=0
	
	select gno,acc1,acc2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12))  dmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money
	from @tmp
	order by acc1;

z_acout2:--z_acout2
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end
	
	declare @tmp table(
			gno nvarchar(1),
			acc1 nvarchar(20),
			acc2 nvarchar(50),
			m01 int,
			m02 int,
			m03 int,
			m04 int,
			m05 int,
			m06 int,
			m07 int,
			m08 int,
			m09 int,
			m10 int,
			m11 int,
			m12 int,
			total int
	)
	insert into @tmp
	select '0' gno, R0.acc1 acc1, R0.acc2 acc2, 
			isnull(R1.dmoney,0)-isnull(R1.cmoney,0) m01,
			isnull(R2.dmoney,0)-isnull(R2.cmoney,0) m02,
			isnull(R3.dmoney,0)-isnull(R3.cmoney,0) m03,
			isnull(R4.dmoney,0)-isnull(R4.cmoney,0) m04,
			isnull(R5.dmoney,0)-isnull(R5.cmoney,0) m05,
			isnull(R6.dmoney,0)-isnull(R6.cmoney,0) m06,
			isnull(R7.dmoney,0)-isnull(R7.cmoney,0) m07,
			isnull(R8.dmoney,0)-isnull(R8.cmoney,0) m08,
			isnull(R9.dmoney,0)-isnull(R9.cmoney,0) m09,
			isnull(R10.dmoney,0)-isnull(R10.cmoney,0) m10,
			isnull(R11.dmoney,0)-isnull(R11.cmoney,0) m11,
			isnull(R12.dmoney,0)-isnull(R12.cmoney,0) m12,
			isnull(R13.dmoney,0)-isnull(R13.cmoney,0) total
	from
		(select acc1,acc2 from acc[1] where (acc1 between @t_baccno and @t_eaccno) and (LEFT(acc1,1)>='5' and LEFT(acc1,2)!='71')) as R0
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='01' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R1
	on R0.acc1 = R1.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='02' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R2		   
	on R0.acc1 = R2.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='03' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R3
	on R0.acc1 = R3.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='04' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R4
	on R0.acc1 = R4.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='05' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R5
	on R0.acc1 = R5.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='06' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R6
	on R0.acc1 = R6.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='07' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R7
	on R0.acc1 = R7.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='08' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R8
	on R0.acc1 = R8.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='09' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R9
	on R0.acc1 = R9.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='10' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R10
	on R0.acc1 = R10.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='11' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R11
	on R0.acc1 = R11.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where left(accc2,2)='12' and (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R12
	on R0.acc1 = R12.accc5 
	left join (select accc5, sum(dmoney) dmoney, sum(cmoney) cmoney 
			   from acccs[1] where (accc2 between @t_bdate and @t_edate) and (part between @t_bpart and @t_epart) group by accc5) as R13
	on R0.acc1 = R13.accc5 
	where not(isnull(R1.dmoney-R1.cmoney,0)=0 and isnull(R2.dmoney-R2.cmoney,0)=0 and isnull(R3.dmoney-R3.cmoney,0)=0 and
			  isnull(R4.dmoney-R4.cmoney,0)=0 and isnull(R5.dmoney-R5.cmoney,0)=0 and isnull(R6.dmoney-R6.cmoney,0)=0 and
			  isnull(R7.dmoney-R7.cmoney,0)=0 and isnull(R8.dmoney-R8.cmoney,0)=0 and isnull(R9.dmoney-R9.cmoney,0)=0 and
			  isnull(R10.dmoney-R10.cmoney,0)=0 and isnull(R11.dmoney-R11.cmoney,0)=0 and isnull(R12.dmoney-R12.cmoney,0)=0)
	select gno,acc1,acc2,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m01),1)),4,12))  m01,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m02),1)),4,12))  m02,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m03),1)),4,12))  m03,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m04),1)),4,12))  m04,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m05),1)),4,12))  m05,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m06),1)),4,12))  m06,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m07),1)),4,12))  m07,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m08),1)),4,12))  m08,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m09),1)),4,12))  m09,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m10),1)),4,12))  m10,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m11),1)),4,12))  m11,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,m12),1)),4,12))  m12,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12))  total
	from @tmp 
	order by acc1;

z_acash:--z_acash
   	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_baccno nvarchar(25)
	declare @t_eaccno nvarchar(25)
	declare @t_bpart nvarchar(18)
	declare @t_epart nvarchar(18)
	set @t_bdate = case when '#non'=[2] then '' else [2] end
	set @t_edate = case when '#non'=[3] then char(255) else [3] end
	set @t_baccno = case when '#non'=[4] then '' else [4] end
	set @t_eaccno = case when '#non'=[5] then char(255) else [5] end
	set @t_bpart = case when '#non'=[6] then '' else [6] end
	set @t_epart = case when '#non'=[7] then char(255) else [7] end

	
	declare @result table(
		p nvarchar(1),
		gno nvarchar(1),
		recno int,
		accc1  nvarchar(10),
		accc2  nvarchar(10),
		accc3  nvarchar(25),
		accc4  nvarchar(12),
		accc5  nvarchar(25),
		accc6  nvarchar(86),
		accc7  nvarchar(340),
		accc8  decimal(16,2),
		zno  nvarchar(20),
		ver  varchar(50),
		noq  nvarchar(3),
		part  nvarchar(18),
		coin  nvarchar(30),
		floata  decimal(10,5),
		dmoney  decimal(20,0),
		cmoney  decimal(20,0),
		money  decimal(20,0)
		primary key (accc5,recno) 
	)
	
	insert into @result
	select '1' p, '0' gno, ROW_NUMBER()over(order by accc5,accc2,accc3) recno,accc1,accc2,accc3,accc4,
	accc5,accc6,accc7,accc8,zno,ver,noq,part,coin,floata,
			dmoney dmoney,
			cmoney cmoney,
			0 money
	from acccs[1]
	where not(LEFT(accc5,4)!='1111' and accc1='3') and 
		  (accc5 between @t_baccno and @t_eaccno) and
	      (part between @t_bpart and @t_epart) and 
	      (accc2 between @t_bdate and @t_edate)
	         
	--**********************************************************************
	
	declare @recno as decimal(16)
	declare @accc2 as nvarchar(10)
	declare @accc5 as nvarchar(25)
	declare @dmoney as decimal(16,2)
	declare @cmoney as decimal(16,2)

	declare @t_dmoney as decimal(16,2)
	declare @t_cmoney as decimal(16,2)
	declare @t_money as decimal(18,2)
	set @t_dmoney = 0
	set @t_cmoney = 0
	set @t_money = 0		
	
	declare cursor_table cursor for
	select recno,accc2,accc5,dmoney,cmoney from @result order by accc5,recno
	open cursor_table
	fetch next from cursor_table
	into @recno,@accc2,@accc5,@dmoney,@cmoney
	while(@@FETCH_STATUS <> -1)
	begin
		set @t_dmoney = @t_dmoney + @dmoney
		set @t_cmoney = @t_cmoney + @cmoney
		set @t_money = @t_money + @dmoney - @cmoney
		
		update @result set money = @t_money where accc5=@accc5 and recno = @recno
		fetch next from cursor_table
		into @recno,@accc2,@accc5,@dmoney,@cmoney
	end
	close cursor_table
	deallocate cursor_table
	insert into @result
		select '1' p, '1' gno,0 recno, '' accc1, '' accc2, '' accc3, '' accc4,'' accc5, '' accc6, '' accc7, 0 accc8, '' zno, '' ver, '' noq, '' part,
		'' coin, 0 floata, @t_dmoney dmoney, @t_cmoney cmoney, @t_money money
	--**********************************************************************
	select p,gno,recno,accc1,accc2,accc3,accc4,accc5,accc6,accc7,accc8,zno,ver,noq,part,coin,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,floata),1)),4,12))  floata,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,dmoney),1)),4,12)) dmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,cmoney),1)),4,12)) cmoney,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money
	from @result order by p,gno,recno;
--***********************************************************************************

z_acbal1:--z_acbal1
declare @t_xbal nvarchar(10) 
declare @t_bdate nvarchar(20) 
declare @t_edate nvarchar(20) 
declare @t_xaccc5 nvarchar(20) 
declare @t_balance nvarchar(20) 
declare  @cmd nvarchar(max)
declare @string nvarchar(max)
declare @n int
declare @t_bpart nvarchar(18) 
declare @t_epart nvarchar(18) 
set @t_bdate = case when '#non' = [2] then '' else [2] end 
set @t_edate = case when '#non' = [3] then CHAR(255) else [3] end 
set @t_xbal = case when '#non' = [10] then '' else [10] end 
set @t_xaccc5 = case when '#non' = [11] then '' else [11] end 
set @t_balance = case when '#non' = [12] then '' else [12] end 
set @t_bpart = case when '#non'=[6] then '' else [6] end
set @t_epart = case when '#non'=[7] then char(255) else [7] end
IF OBJECT_ID('tempdb..#xaccc5')is not null 
BEGIN 
set @cmd = 'drop table #xaccc5' 
EXECUTE sp_executesql @cmd 
END 
create table #xaccc5( 
balacc1 nvarchar(20) 
) 
set @string = @t_xaccc5	while(1=1) 
begin 
set @n = PATINDEX('%,%',@string) 
if @n=0 
begin 
if LEN(@string)>0 
begin 
insert into #xaccc5 select @string 
end 
break 
end 
insert into #xaccc5 select LEFT(@string,@n-1)	
set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n) 
end 
declare @tmp table( 
gno nvarchar(1), 
recno int, 
typea nvarchar(20), 
noa nvarchar(30), 
datea nvarchar(10), 
accc5 nvarchar(20), 
accc6 nvarchar(50), 
accc7 nvarchar(340), 
part nvarchar(20), 
bal nvarchar(40), 
moneys float, 
payed float, 
total float 
) 
insert into @tmp 
select '0' gno,ROW_NUMBER()over(order by accc5,bal,accc2)as recno,R1.typea,R1.accc3,R1.accc2,R1.accc5,R1.accc6,R1.accc7,R1.part,R1.bal, 
R1.moneys,R1.payed,R1.total 
from( 
select 'A' typea,a.accc3,a.accc2,a.accc5,a.accc6,a.accc7,isnull(a.part,'') part,isnull(a.bal,'') bal, 
case LEFT(a.accc5,1) when '1' then a.dmoney when '2' then a.cmoney end moneys, 
case LEFT(a.accc5,1) when '1' then a.cmoney when '2' then a.dmoney end payed,0 total 
from acccs[1] a 
left join #xaccc5 b on a.accc5 like b.balacc1+'%' 
where b.balacc1 is not null and a.accc2<=@t_edate and (LEN(@t_xbal) = 0 or @t_xbal = a.bal ) and (a.part between @t_bpart and @t_epart) 
union 
select 'B' typea,'' accc3,'01/01' accc2,acc1 accc5,'' accc6,'期初金額' accc7,'' part,bal bal,0 moneys,0 payed,money 
from acbab[1] 
) as R1 
declare @t_bal nvarchar(50) 
declare @bal nvarchar(50) 
declare @recno nvarchar(50) 
declare @gno nvarchar(10) 
declare @accc5 nvarchar(20) 
declare @accc6 nvarchar(20) 
declare @noa nvarchar(20) 
declare @datea nvarchar(20) 
declare @t_accc5 nvarchar(20) 
declare @typea nvarchar(20) 
declare @moneys float 
declare @payed float 
declare @total float 
declare @t_moneys float 
declare @t_payed float 
declare @t_total float 
set @t_bal = 'zzzzzzz' 
set @t_accc5 = 'aaaaaaa' 
set @t_moneys = 0 
set @t_payed = 0 
set @t_total = 0 

declare cursor_table cursor for 
select datea,recno,accc5,accc6,bal,moneys,payed,total from @tmp order by accc5,bal 
open cursor_table 
fetch next from cursor_table 
into @datea,@recno,@accc5,@accc6,@bal,@moneys,@payed,@total 
while(@@FETCH_STATUS <> -1) 
begin 
if (@t_accc5 != @accc5 or @t_bal != @bal) 
begin 
set @t_bal = @bal 
set @t_accc5 = @accc5 
set @t_moneys = @moneys 
set @t_payed = @payed 
set @t_total = @moneys - @payed 
end 
else 
begin 
set @t_moneys = @t_moneys +@moneys 
set @t_payed = @t_payed +@payed 
set @t_total = @t_total + @moneys - @payed 
end 
update @tmp set total = @t_total where recno= @recno and bal = @bal 
fetch next from cursor_table 
into @datea,@recno,@accc5,@accc6,@bal,@moneys,@payed,@total	
end 
close cursor_table 
deallocate cursor_table 


declare @tmpa table( 
gno nvarchar(1), 
recno int, 
typea nvarchar(20), 
noa nvarchar(30), 
datea nvarchar(10), 
accc5 nvarchar(20), 
accc6 nvarchar(50), 
accc7 nvarchar(340), 
part nvarchar(20), 
bal nvarchar(40), 
moneys float, 
payed float, 
total float 
) 
insert into @tmpa 
select * 
from @tmp 
where datea between @t_bdate and @t_edate 
order by accc5,bal,recno 

declare cursor_table cursor for 
select accc5,bal from @tmp group by accc5,bal
open cursor_table 
fetch next from cursor_table 
into @accc5,@bal 
while(@@FETCH_STATUS <> -1) 
begin 
insert into @tmpa 
select top 1 * 
from @tmp 
where datea < @t_bdate and accc5=@accc5 and bal = @bal
order by recno desc 
update @tmpa set datea = '',noa = '',accc7 = '期初金額',moneys = 0,payed = 0 
where datea < @t_bdate and accc5=@accc5 and bal = @bal
fetch next from cursor_table 
into @accc5,@bal 
end 
close cursor_table 
deallocate cursor_table 

set @t_moneys = 0 
set @t_payed = 0 
set @t_total = 0 

declare cursor_table cursor for 
select datea,recno,accc5,accc6,bal,moneys,payed,total from @tmpa order by accc5,bal 
open cursor_table 
fetch next from cursor_table 
into @datea,@recno,@accc5,@accc6,@bal,@moneys,@payed,@total 
while(@@FETCH_STATUS <> -1) 
begin 
if (@t_accc5 != @accc5 or @t_bal != @bal) 
begin  
if @t_accc5 != 'aaaaaaa' or @t_bal != 'zzzzzzz' 
begin 
insert into @tmpa 
select '1' gno,'',0,'','',@t_accc5,'','','',@t_bal,@t_moneys,@t_payed,@t_total 
end
set @t_bal = @bal 
set @t_accc5 = @accc5 
set @t_moneys = @moneys 
set @t_payed = @payed 
set @t_total = @total 
end 
else 
begin 
set @t_moneys = @t_moneys +@moneys 
set @t_payed = @t_payed +@payed 
set @t_total = @total 
end  
fetch next from cursor_table 
into @datea,@recno,@accc5,@accc6,@bal,@moneys,@payed,@total	
end 
close cursor_table 
deallocate cursor_table 
if @t_accc5 != 'aaaaaaa' or @t_bal != 'zzzzzzz' 
begin 
insert into @tmpa 
select '1' gno,'',0,'','',@t_accc5,'','','',@t_bal,@t_moneys,@t_payed,@t_total 
end

insert into @tmpa 
select '2' gno,'',0,'','',accc5,'','','',CHAR(255),0,0,SUM(total) 
from @tmpa 
where gno != 1 
group by accc5 

drop table #xaccc5 
if @t_balance = '餘額' 
begin 
select '0' gno,''recno,''typea,'' noa,'' datea,accc5,accc6,'' accc7,'' part,bal,'' moneys, '' payed, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total 
from @tmpa 
where gno = 1 and total != 0 
union 
select '2' gno,''recno,''typea,'' noa,'' datea,accc5,accc6,'' accc7,'' part,bal,'' moneys, '' payed, 
reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total 
from @tmpa 
where gno = 2 and total != 0 
order by accc5,bal,gno 
end 
else 
begin	
select gno,recno,typea,noa,datea,accc5,accc6,accc7,part,bal, 
reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,moneys),1)),4,12)) moneys, 
reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,payed),1)),4,12)) payed, 
reverse(substring(reverse(convert(nvarchar(20),CONVERT(money,total),1)),4,12)) total 
from @tmpa 
where total != 0
order by accc5,bal,gno,recno 
end ;



