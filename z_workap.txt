z_workap1:--z_workap1
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_merger nvarchar(30)
declare @t_bnoa nvarchar(50)
declare @t_enoa nvarchar(50)

set @t_bdate = case when '#non' = [2] then '' else [2] end
set @t_edate = case when '#non' = [3] then CHAR(255) else [3] end
set @t_merger = case when '#non' = [5] then '' else [5] end
set @t_bnoa = case when '#non' = [14] then '' else [14] end
set @t_enoa = case when '#non' = [15] then CHAR(255) else [15] end
------------報表設定<<Start>>------------
declare @pageline int = case when len(@t_merger)>0 then 35 else 19 end--每頁幾行
------------報表設定<<End>>------------
declare @tmp table(
	gno nvarchar(10),
	idno int identity(0,1),
	pageno int,
	atypea nvarchar(15),
	adateb nvarchar(10),
	adatee nvarchar(10),
	adatea nvarchar(10),
	atimea nvarchar(15),
	anoa nvarchar(50),
	astationno nvarchar(50),
	astations nvarchar(90),
	aprocessno nvarchar(50),
	aprocesss nvarchar(90),
	astoreno nvarchar(50),
	astores nvarchar(90),
	amoldno nvarchar(50),
	amolds nvarchar(90),
	amemo nvarchar(max),
	amechno nvarchar(50),
	amechs nvarchar(90),
	aworkno nvarchar(max),
	bproductno nvarchar(max),
	bproducts nvarchar(90),
	bunit nvarchar(20),
	bmount float,
	bstoreno nvarchar(50),
	bstores nvarchar(90),
	bweight float,
	bmemo nvarchar(max),
	bworkno nvarchar(max),
	bworkmount float,
	wk_mount float,
	wk_gmount float
)
insert into @tmp
	select
		'0',0 pageno,a.typea,a.bdate,a.edate,a.datea,a.timea,a.noa,a.stationno,a.station,a.processno,a.process,a.storeno,a.store,
		a.moldno,a.mold,a.memo,a.mechno,a.mech,a.workno,b.productno,b.product,b.unit,b.mount,
		b.storeno,b.store,b.weight,b.memo,	b.workno,c.mount,isnull(d.mount,0),(isnull(d.gmount,0)-isnull(b.mount,0))
	from view_worka a
	left join view_workas b on (a.noa=b.noa)
	outer apply(select sum(mount) mount from view_work where (noa=b.workno)) c
	outer apply(select top 1 mount,gmount from view_works where noa=b.workno and productno=b.productno) d
	where (a.noa between @t_bnoa and @t_enoa) and (a.datea between @t_bdate and @t_edate)
------------更新頁數<<Start>>------------
declare @idno int
declare @pageno int
declare @recCount int = 1
declare @pageno_int int = 0
declare @noa nvarchar(max)
declare @lastnoa nvarchar(max) = ''
declare @nextidno int

declare cursor_table cursor for
	select
		a.idno,a.anoa
	from @tmp a order by a.anoa
open cursor_table
fetch next from cursor_table
into @idno,@noa
while(@@FETCH_STATUS <> -1)
begin
	if((@recCount > @pageline) or (@noa != @lastnoa))
	begin
		set @recCount = 1
		set @pageno_int = @pageno_int+1
	end
	if(@recCount = @pageline)
	begin
		set @nextidno = @idno+1
	end
	update @tmp set pageno=@pageno_int where idno=@idno
	set @lastnoa = @noa
	set @recCount = @recCount+1
	fetch next from cursor_table
	into @idno,@noa
end
close cursor_table
deallocate cursor_table
------------更新頁數<<End>>-------------
------------插入表頭及表尾<<Start>>-------------
if(len(@t_merger)=0) -----1,2,5
begin
	insert into @tmp(
		gno,anoa,pageno,atypea,adateb,adatee,adatea,atimea,astationno,astations,aprocessno,aprocesss,
		astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
	)
		select
			'1',anoa,pageno,atypea,adateb,adatee,adatea,atimea,astationno,astations,aprocessno,aprocesss,
			astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
		from @tmp a
		where (gno='0')
		group by anoa,pageno,atypea,adateb,adatee,adatea,atimea,anoa,astationno,astations,aprocessno,aprocesss,
					 astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
	insert into @tmp(
		gno,anoa,pageno,atypea,adateb,adatee,adatea,atimea,astationno,astations,aprocessno,aprocesss,
		astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
	)
		select
			'5',anoa,pageno,atypea,adateb,adatee,adatea,atimea,astationno,astations,aprocessno,aprocesss,
			astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
		from @tmp a
		where (gno='0')
		group by anoa,pageno,atypea,adateb,adatee,adatea,atimea,anoa,astationno,astations,aprocessno,aprocesss,
					 astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
	update @tmp set gno='2' where gno='0'
end
else -----3,4,6
begin
	insert into @tmp(
		gno,anoa,pageno,atypea,adateb,adatee,adatea,atimea,astationno,astations,aprocessno,aprocesss,
		astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
	)
		select
			'3',anoa,pageno,atypea,adateb,adatee,adatea,atimea,astationno,astations,aprocessno,aprocesss,
			astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
		from @tmp a
		where (gno='0')
		group by anoa,pageno,atypea,adateb,adatee,adatea,atimea,anoa,astationno,astations,aprocessno,aprocesss,
					 astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
	insert into @tmp(
		gno,anoa,pageno,atypea,adateb,adatee,adatea,atimea,astationno,astations,aprocessno,aprocesss,
		astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
	)
		select
			'6',anoa,pageno,atypea,adateb,adatee,adatea,atimea,astationno,astations,aprocessno,aprocesss,
			astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
		from @tmp a
		where (gno='0')
		group by anoa,pageno,atypea,adateb,adatee,adatea,atimea,anoa,astationno,astations,aprocessno,aprocesss,
					 astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno
	insert into @tmp(
		gno,pageno,atypea,adateb,adatee,adatea,atimea,anoa,astationno,astations,aprocessno,
		aprocesss,astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno,bproductno,bproducts,
		bunit,bmount,bstoreno,bstores,bweight,bworkmount
	)
		select
			'4',pageno,atypea,adateb,adatee,adatea,atimea,anoa,astationno,astations,aprocessno,aprocesss,
			astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno,bproductno,bproducts,bunit,sum(bmount),
			bstoreno,bstores,sum(bweight),sum(bworkmount)
		from @tmp where gno='0'
		group by pageno,atypea,adateb,adatee,adatea,atimea,anoa,astationno,astations,aprocessno,aprocesss,
		astoreno,astores,amoldno,amolds,amemo,amechno,amechs,aworkno,bproductno,bproducts,bunit,bstoreno,bstores
	delete @tmp where gno='0'
end
------------插入表頭及表尾<<End>>-------------
select 
	a.gno,a.pageno,(case when a.atypea = 1 then '發料' else '退料' end) atypea,a.adatea,a.atimea,
	a.anoa,a.astationno,a.astations,a.aprocessno,a.aprocesss,a.astoreno,a.astores,a.aworkno,
	a.amoldno,a.amolds,a.amemo,a.amechno,a.amechs,a.bproductno,a.bproducts,a.bunit,
	a.bmemo,a.bworkno,a.bstoreno,a.bstores,a.adateb,a.adatee,Convert(varchar(10),getdate(),111) wtoday,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bweight),1)),4,12)) bweight,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.bworkmount),1)),4,12)) bworkmount,
	a.wk_mount,a.wk_gmount,a.bmount
from @tmp a
order by a.pageno,a.anoa,a.gno;
-----------------------------------------------------------------------------------------------------------------------------------------------
z_workap2:--z_workap2
declare @t_xbdate nvarchar(10)
declare @t_xedate nvarchar(10)
declare @t_bsnno nvarchar(10)
declare @t_esnno nvarchar(10)
declare @t_bseno nvarchar(10)
declare @t_eseno nvarchar(10)
declare @t_bpno nvarchar(10)
declare @t_epno nvarchar(10)

set @t_xbdate = case when '#non' = [6] then '' else [6] end
set @t_xedate = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bsnno = case when '#non' = [8] then '' else [8] end
set @t_esnno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bseno = case when '#non' = [10] then '' else [10] end
set @t_eseno = case when '#non' = [11] then CHAR(255) else [11] end
set @t_bpno = case when '#non' = [12] then '' else [12] end
set @t_epno = case when '#non' = [13] then CHAR(255) else [13] end

declare @t_stkdate nvarchar(30) --倉庫運算日期
set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)

declare @tmpa table(
	pno nvarchar(50),
	product nvarchar(200),
	stationno nvarchar(50),
	station nvarchar(100),
	gmount float,
	inmount float,
	unmount float,
	stktmount float,
	diffmount float
)

declare @tmp table(
	gno nvarchar(2),
	pno nvarchar(50),
	product nvarchar(200),
	stationno nvarchar(50),
	station nvarchar(100),
	gmount float,
	inmount float,
	unmount float,
	stktmount float,
	diffmount float,
	storeno nvarchar(50),
	store nvarchar(100),
	stkmount float
)

insert @tmpa (pno,product,stationno,station,gmount,inmount,unmount,stktmount)
select b.productno,MAX(b.product),a.stationno,MAX(a.station),round(SUM(b.mount),2) mount,
round(SUM(b.gmount),2) inmount,round(SUM(b.emount),2) unmount,
(select SUM(mount) mount from stkucc(@t_stkdate,'','') where productno=b.productno and storeno between @t_bseno and @t_eseno)stktmount
from view_work a
left join view_works b on a.noa=b.noa 
where a.enda!='1' and a.stationno!=''
and (a.cuadate between @t_xbdate and @t_xedate)
and (a.stationno between @t_bsnno and @t_esnno)
and (b.productno between @t_bpno and @t_epno)
group by b.productno,a.stationno
order by b.productno,a.stationno

update @tmpa set diffmount=-1*(stktmount-gmount)
update @tmpa set diffmount=0 where diffmount<0

insert @tmp
select '0',a.pno,a.product,a.stationno,a.station,a.gmount,a.inmount,a.unmount,a.stktmount,a.diffmount,b.storeno,b.store,b.mount
from @tmpa a left join (select * from stkucc(@t_stkdate,'','') where mount!=0 and storeno between @t_bseno and @t_eseno) b 
on a.pno=b.productno 
order by a.pno,a.stationno,b.storeno

update @tmp set store='(無)' where store is null or store=''

select gno,pno,product,stationno,station,storeno,store
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gmount),1)),0,30)) gmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,inmount),1)),0,30)) inmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unmount),1)),0,30)) unmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stktmount),1)),0,30)) stktmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,diffmount),1)),0,30)) diffmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stkmount),1)),0,30)) stkmount
from @tmp order by gno,stationno,pno;
--********************************************************************************
z_workap3:--z_workap3
declare @t_xbdate nvarchar(10)
declare @t_xedate nvarchar(10)
declare @t_bsnno nvarchar(10)
declare @t_esnno nvarchar(10)
declare @t_bseno nvarchar(10)
declare @t_eseno nvarchar(10)
declare @t_bpno nvarchar(10)
declare @t_epno nvarchar(10)

set @t_xbdate = case when '#non' = [6] then '' else [6] end
set @t_xedate = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bsnno = case when '#non' = [8] then '' else [8] end
set @t_esnno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bseno = case when '#non' = [10] then '' else [10] end
set @t_eseno = case when '#non' = [11] then CHAR(255) else [11] end
set @t_bpno = case when '#non' = [12] then '' else [12] end
set @t_epno = case when '#non' = [13] then CHAR(255) else [13] end

declare @t_stkdate nvarchar(30) --倉庫運算日期
set @t_stkdate=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
set @t_stkdate=left(@t_stkdate,3)+'/'+substring(@t_stkdate,4,2)+'/'+right(@t_stkdate,2)
--****************************************************************************
declare @tmp table(
	gno nvarchar(2),
	pno nvarchar(50),
	product nvarchar(200),
	stationno nvarchar(50),
	station nvarchar(100),
	workno nvarchar(100),
	mount float,
	gmount float,
	emount float,
	stktmount float,
	diffmount float,
	storeno nvarchar(50),
	store nvarchar(100),
	stkmount float
)

insert @tmp (gno,pno,product,stationno,station,workno,mount,gmount,emount)
select '0',b.productno,b.product,a.stationno,a.station,a.noa
,round(b.mount,2)mount,round(b.gmount,2)mount,round(b.mount-b.gmount,2)mount
from view_work a left join view_works b on a.noa=b.noa 
where a.enda!='1' and a.stationno!=''
and round(b.mount-b.gmount,2)>0
and (a.cuadate between @t_xbdate and @t_xedate)
and (a.stationno between @t_bsnno and @t_esnno)
and (b.productno between @t_bpno and @t_epno)
order by a.stationno,b.productno

insert @tmp (gno,stationno,station,pno,product,mount,gmount,emount,stktmount)
select '1',stationno,MAX(station),pno,MAX(product),SUM(mount),SUM(gmount),SUM(emount)
,(select SUM(mount) from stkucc(@t_stkdate,'','') where productno=a.pno and storeno between @t_bseno and @t_eseno) 
from @tmp a group by stationno,pno

update @tmp set diffmount=-1*(stktmount-emount) where gno='1'
update @tmp set diffmount=0 where diffmount<0 and gno='1'

insert @tmp (gno,stationno,station,pno,product) 
select '2',stationno,MAX(station),pno,MAX(product) from @tmp a group by stationno,pno

insert @tmp (gno,stationno,station,pno,product,storeno,store,stkmount) 
select '3',stationno,station,a.pno,a.product,b.storeno,b.store,b.mount from (select * from @tmp where gno='2')a 
left join (select * from stkucc(@t_stkdate,'','') where mount!=0 and storeno between @t_bseno and @t_eseno) b 
on a.pno=b.productno 

insert @tmp (gno,stationno,station,pno,product) 
select '4',stationno,MAX(station),pno,MAX(product)from @tmp a group by stationno,pno 

--insert @tmp (gno,stationno,station,pno,product) 
--select '4',stationno,MAX(station),CHAR(255),CHAR(255) from @tmp a group by stationno 

update @tmp
set store='(無)'
where store is null or store='' and gno='3'

select gno,pno,product,stationno,station,storeno,store,workno
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) mount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gmount),1)),0,30)) gmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,emount),1)),0,30)) emount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stktmount),1)),0,30)) stktmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,diffmount),1)),0,30)) diffmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,stkmount),1)),0,30)) stkmount
from @tmp order by stationno,pno,gno,storeno;
---**********************************************************************************
z_workap4:--z_workap4
declare @t_xbdate nvarchar(10)
declare @t_xedate nvarchar(10)
declare @t_bsnno nvarchar(10)
declare @t_esnno nvarchar(10)
declare @t_bseno nvarchar(10)
declare @t_eseno nvarchar(10)
declare @t_bpno nvarchar(10)
declare @t_epno nvarchar(10)

set @t_xbdate = case when '#non' = [6] then '' else [6] end
set @t_xedate = case when '#non' = [7] then CHAR(255) else [7] end
set @t_bsnno = case when '#non' = [8] then '' else [8] end
set @t_esnno = case when '#non' = [9] then CHAR(255) else [9] end
set @t_bseno = case when '#non' = [10] then '' else [10] end
set @t_eseno = case when '#non' = [11] then CHAR(255) else [11] end
set @t_bpno = case when '#non' = [12] then '' else [12] end
set @t_epno = case when '#non' = [13] then CHAR(255) else [13] end

--****************************************************************************
declare @tmp table(
	gno nvarchar(2),
	pno nvarchar(50),
	product nvarchar(200),
	stationno nvarchar(50),
	station nvarchar(100),
	workno nvarchar(100),
	ordeno nvarchar(100),
	mount float,
	gmount float,
	smount float,
	memo nvarchar(50)
)

insert @tmp
select '0',b.productno,b.product,a.stationno,a.station,a.noa,a.ordeno,b.mount,b.gmount
,-1*(b.mount-b.gmount) smount
,STUFF((select ','+memo from(
	select memo from view_workas where a.noa=productno and b.productno=workno
	--union all
	--select memo from view_workcs where a.noa=productno and b.productno=workno
)tmp FOR xml path('')),1,1,'') memo
from view_work a left join view_works b on a.noa=b.noa
where (b.mount-b.gmount)<0 and a.stationno!=''
and (a.cuadate between @t_xbdate and @t_xedate)
and (a.stationno between @t_bsnno and @t_esnno)
and (b.productno between @t_bpno and @t_epno)

insert @tmp
select '1','','',stationno,MAX(station),'','',sum(mount),sum(gmount),sum(smount),''
from @tmp where gno='0' group by stationno

select gno,pno,product,stationno,station,workno,ordeno,memo
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) mount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,gmount),1)),0,30)) gmount
,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,smount),1)),0,30)) smount
from @tmp order by stationno,gno,pno;
---------------------------------------------------------------------------------------------------------------------------------
z_workap_jo01:--z_workap_jo01
declare @t_bnoa nvarchar(50)
declare @t_enoa nvarchar(50)
set @t_bnoa = case when '#non' = [14] then '' else [14] end
set @t_enoa = case when '#non' = [15] then CHAR(255) else [15] end

declare @tmp table (
	gno nvarchar(1),
	rr int,
	noa nvarchar(50),
	datea nvarchar(10),
	edatea nvarchar(10),
	productno nvarchar(50),
	product nvarchar(200),
	spec nvarchar(200),
	storeno nvarchar(50),
	store nvarchar(100),
	mount float,
	unit nvarchar(20),
	memo nvarchar(max),
	worker nvarchar(50)
)
insert @tmp
select '0','',a.noa,a.datea,edate,b.productno,b.product,b.spec,b.storeno,b.store,b.mount,b.unit,b.memo,a.worker
from view_worka a left join view_workas b on a.noa=b.noa
where (a.noa between @t_bnoa and @t_enoa)

insert @tmp(gno,noa,datea,worker)
select '1',noa,datea,worker
from @tmp
group by noa,datea,worker

insert @tmp(gno,noa)
select '2',noa
from @tmp
group by noa

select 
dbo.getComma(mount,2)mount
,* from @tmp
order by noa,gno
;