z_tran_sh1:--z_tran_sh1
declare @t_bdate nvarchar(20) = case when '#non'=[2] then '' else [2] end
declare @t_edate nvarchar(20) = case when '#non'=[3] then char(255) else [3] end
declare @t_bcustno nvarchar(20) = case when '#non'=[6] then '' else [6] end
declare @t_ecustno nvarchar(20) = case when '#non'=[7] then char(255) else [7] end
declare @t_baddr1 nvarchar(20) = case when '#non'=[8] then '' else [8] end 
declare @t_eaddr1 nvarchar(20) = case when '#non'=[9] then char(255) else [9] end
declare @t_baddr2 nvarchar(20) = case when '#non'=[10] then '' else [10] end 
declare @t_eaddr2 nvarchar(20) = case when '#non'=[11] then char(255) else [11] end
declare @t_bdriver nvarchar(20) = case when '#non'=[12] then '' else [12] end
declare @t_edriver nvarchar(20) = case when '#non'=[13] then char(255) else [13] end
declare @t_chk1 nvarchar(20) = case when '#non'=[14] then '' else [14] end
declare @t_chk2 nvarchar(20) = case when '#non'=[15] then '' else [15] end

declare @tmp table( 
	gno nvarchar(10), 
	rr int, 
	datea nvarchar(10), 
	custno nvarchar(50), 
	cust nvarchar(100), 
	mount nvarchar(50),  
	volume nvarchar(50), 
	addrno nvarchar(50), 
	addr nvarchar(100), 
	addrno2 nvarchar(50), 
	addr2 nvarchar(100), 
	total float, 
	driverno1 nvarchar(50), 
	driver1 nvarchar(50), 
	driverno2 nvarchar(50), 
	driver2 nvarchar(50), 
	driverno3 nvarchar(50), 
	driver3 nvarchar(50), 
	chk1 nvarchar(50), 
	chk2 nvarchar(50), 
	memo nvarchar(max), 
	total1 float, 
	total2 float, 
	total3 float,
	productno nvarchar(50),
	product nvarchar(50),
	tranno nvarchar(50),
	productno2 nvarchar(50),
	unit nvarchar(50)
) 
insert @tmp 
select '1',ROW_NUMBER()over(partition by time1,custno,productno,tranno,productno2,addrno,addrno2,mount,volume,unit order by time1,noa,noq)
,time1,custno,cust,mount,volume,addrno,addr,addrno2,addr2,total,driverno,driver,'','','',''
,case when chk1=1 then 'V' else '' end ,case when chk2=1 then 'V' else '' end,memo,total2,'','',
productno,product,tranno,productno2,unit
from view_tranvcces 
where (time1 between @t_bdate and @t_edate) 
and (custno between @t_bcustno and @t_ecustno) 
and ((addrno between @t_baddr1 and @t_eaddr1) or (addr between @t_baddr1 and @t_eaddr1))
and ((addrno2 between @t_baddr2 and @t_eaddr2) or (addr2 between @t_baddr2 and @t_eaddr2))
and (driverno between @t_bdriver and @t_edriver) 
and (len(@t_chk1)=0 or chk1=@t_chk1) 
and (len(@t_chk2)=0 or chk1=@t_chk2)
order by time1,noa,noq 

update @tmp 
set driverno2=b.driverno1,driver2=b.driver1,total2=b.total1 
from @tmp a 
outer apply(select * from @tmp where a.datea=datea and custno=a.custno and mount=a.mount and unit=a.unit and volume=a.volume and a.addrno=addrno and a.addrno2=addrno2 and a.productno=productno and a.tranno=tranno and a.productno2=productno2 and rr='2')b 

update @tmp 
set driverno3=b.driverno1,driver3=b.driver1,total3=b.total1 
from @tmp a 
outer apply(select * from @tmp where a.datea=datea and custno=a.custno and mount=a.mount and unit=a.unit and volume=a.volume and a.addrno=addrno and a.addrno2=addrno2 and a.productno=productno and a.tranno=tranno and a.productno2=productno2 and rr='3')b 

delete @tmp where rr!='1'

update a
set rr=rx
from (select ROW_NUMBER()over(partition by gno order by datea,custno)rx,rr from @tmp)a

select 
mount+unit mount
,* from @tmp 
order by datea,custno
;
--------------------------------------------------------------------------------------------------------
z_tran_sh2:--z_tran_sh2
declare @t_bdate nvarchar(20) = case when '#non'=[2] then '' else [2] end
declare @t_edate nvarchar(20) = case when '#non'=[3] then char(255) else [3] end
declare @t_bcustno nvarchar(20) = case when '#non'=[6] then '' else [6] end
declare @t_ecustno nvarchar(20) = case when '#non'=[7] then char(255) else [7] end
declare @t_baddr1 nvarchar(20) = case when '#non'=[8] then '' else [8] end 
declare @t_eaddr1 nvarchar(20) = case when '#non'=[9] then char(255) else [9] end
declare @t_baddr2 nvarchar(20) = case when '#non'=[10] then '' else [10] end 
declare @t_eaddr2 nvarchar(20) = case when '#non'=[11] then char(255) else [11] end
declare @t_bdriver nvarchar(20) = case when '#non'=[12] then '' else [12] end
declare @t_edriver nvarchar(20) = case when '#non'=[13] then char(255) else [13] end
declare @t_chk1 nvarchar(20) = case when '#non'=[14] then '' else [14] end
declare @t_chk2 nvarchar(20) = case when '#non'=[15] then '' else [15] end

declare @tmp table( 
	gno nvarchar(10), 
	custno nvarchar(50),
	cust nvarchar(50),							
	tel nvarchar(50),	
	datea nvarchar(10),
	productno nvarchar(50),						
	product nvarchar(50),
	mount float,
	volume float,
	addrno nvarchar(50), 
	addr nvarchar(50),
	addrno2 nvarchar(50),
	addr2 nvarchar(50),
	tranno nvarchar(50),
	productno2 nvarchar(50),
	total float,
	memo nvarchar(max),
	addrno3 nvarchar(50),
	addr3 nvarchar(50),
	te12 nvarchar(50),
	address nvarchar(max),							
	worker nvarchar(50),
	driverno nvarchar(50),
	driver nvarchar(200)
) 
insert @tmp 
select '0',custno,cust,c.tel,time1,productno,product,mount,volume,a.addrno,a.addr,addrno2
,addr2,tranno,productno2,total,a.memo,isnull(addrno3,''),addr3,d.tel,d.addr_comp,b.worker,driverno,driver
from view_tranvcces a
left join view_tranvcce b on a.noa=b.noa
left join cust c on a.custno=c.noa
left join cust d on a.addrno3=d.noa
where (time1 between @t_bdate and @t_edate) 
and (custno between @t_bcustno and @t_ecustno) 
and ((a.addrno between @t_baddr1 and @t_eaddr1) or (a.addr between @t_baddr1 and @t_eaddr1))
and ((addrno2 between @t_baddr2 and @t_eaddr2) or (addr2 between @t_baddr2 and @t_eaddr2))
and (driverno between @t_bdriver and @t_edriver)

insert @tmp(gno,custno,datea,addrno3,te12,address,driverno,worker,driver)
select '1',custno,datea,addrno3,te12,address,driverno,worker,driver
from @tmp
group by custno,datea,addrno3,te12,address,driverno,worker,driver

insert @tmp(gno,custno,datea,addrno3,driverno,worker,driver)
select '2',custno,datea,addrno3,driverno,worker,driver
from @tmp
group by custno,datea,addrno3,driverno,worker,driver

select 
* from @tmp
order by custno,datea,addrno3,driverno,gno
;
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
z_tran_sh7:--z_tran_sh7
declare @t_bdate nvarchar(20) = case when '#non'=[2] then '' else [2] end
declare @t_edate nvarchar(20) = case when '#non'=[3] then char(255) else [3] end
declare @t_bcustno nvarchar(20) = case when '#non'=[6] then '' else [6] end
declare @t_ecustno nvarchar(20) = case when '#non'=[7] then char(255) else [7] end
declare @t_baddr1 nvarchar(20) = case when '#non'=[8] then '' else [8] end 
declare @t_eaddr1 nvarchar(20) = case when '#non'=[9] then char(255) else [9] end
declare @t_baddr2 nvarchar(20) = case when '#non'=[10] then '' else [10] end 
declare @t_eaddr2 nvarchar(20) = case when '#non'=[11] then char(255) else [11] end
declare @t_bdriver nvarchar(20) = case when '#non'=[12] then '' else [12] end
declare @t_edriver nvarchar(20) = case when '#non'=[13] then char(255) else [13] end
declare @t_chk1 nvarchar(20) = case when '#non'=[14] then '' else [14] end
declare @t_chk2 nvarchar(20) = case when '#non'=[15] then '' else [15] end

declare @tmp table(
	gno nvarchar(1),
	dno nvarchar(50),
	driver nvarchar(50),
	datea nvarchar(10),
	custno nvarchar(50),
	nick nvarchar(50),
	productno nvarchar(50),
	product nvarchar(50),
	mount float,
	unit nvarchar(50),
	volume float,
	caseno nvarchar(50),
	po nvarchar(50),
	straddrno nvarchar(50),
	straddr nvarchar(50),
	endaddrno nvarchar(50),
	endaddr nvarchar(50),
	total2 float,
	money float,
	money2 float,
	memo nvarchar(max),
	money3 float,
	tax float,
	fee float,
	borrow float,
	bill float,
	rest float,
	total float
)
insert @tmp
select '0',a.driverno,a.driver,a.trandate,custno,nick,uccno,a.product,a.mount,a.unit,a.volume,a.caseno,po,straddrno,a.straddr,endaddrno
,a.endaddr,total2,'','',a.memo,'','','','','','',''
from view_trans a
left join view_tres b on a.noa=b.tranno and a.noq=b.trannoq
left join view_tre c on b.noa=c.noa
where (a.trandate between @t_bdate and @t_edate)
and (a.driverno between @t_bdriver and @t_edriver) 

insert @tmp(gno,dno,driver,datea,total2,money,money2,money3)
select '1',dno,driver,CHAR(255),SUM(total2),SUM(money),SUM(money2),SUM(total2)-SUM(money)-SUM(money2)
from @tmp a
group by dno,driver

--公費.利息.佣金
update @tmp
set fee=b.fee,bill=b.bill,rest=b.rest
from @tmp a
outer apply(select 
(case when minusitem like '%公費%' or plusitem like '%公費%' then SUM(minusmoney-plusmoney) end) bill, 
(case when minusitem like '%佣金%' or plusitem like '%佣金%' then SUM(minusmoney-plusmoney) end) fee, 
(case when minusitem like '%利息%' or plusitem like '%利息%' then SUM(minusmoney-plusmoney) end) rest 
from carchg where driverno=a.dno and (datea between @t_bdate and @t_edate) group by minusitem,plusitem)b
where gno='1'

--借支 
update @tmp 
set borrow=b.money 
from @tmp a 
outer apply(select sum(sb.money)money from carborr sa left join carborrs sb on sa.noa=sb.noa where driverno=a.dno and (sb.mon between left(@t_bdate,6) and left(@t_edate,6)))b 
where gno='1' 

update @tmp
set tax=money3*0.05,total=money3-money3*0.05-isnull(fee,0)-isnull(borrow,0)-isnull(bill,0)-isnull(rest,0)
from @tmp a
where gno='1'

insert @tmp(gno,dno,driver,datea)
select '2',dno,driver,CHAR(255)
from @tmp a
group by dno,driver

select 
dbo.getComma(mount,0)mount
,dbo.getComma(volume,0)volume
,dbo.getComma(total2,0)total2
,dbo.getComma(money,0)money
,dbo.getComma(money2,0)money2
,dbo.getComma(money3,0)money3
,dbo.getComma(tax,0)tax
,dbo.getComma(fee,0)fee
,dbo.getComma(borrow,0)borrow
,dbo.getComma(bill,0)bill
,dbo.getComma(rest,0)rest
,dbo.getComma(total,0)total
,* from @tmp 
order by dno,datea,gno
;
---------------------------------------------------------------------------------------------------
z_tran_sh8:--z_tran_sh8
declare @t_bdate nvarchar(20) = case when '#non'='#non' then '' else '#non' end 
declare @t_edate nvarchar(20) = case when '#non'='#non' then char(255) else '#non' end 
declare @t_bcustno nvarchar(20) = case when '#non'='#non' then '' else '#non' end 
declare @t_ecustno nvarchar(20) = case when '#non'='#non' then char(255) else '#non' end 
declare @t_baddr1 nvarchar(20) = case when '#non'='#non' then '' else '#non' end 
declare @t_eaddr1 nvarchar(20) = case when '#non'='#non' then char(255) else '#non' end 
declare @t_baddr2 nvarchar(20) = case when '#non'='#non' then '' else '#non' end 
declare @t_eaddr2 nvarchar(20) = case when '#non'='#non' then char(255) else '#non' end 
declare @t_bdriver nvarchar(20) = case when '#non'='#non' then '' else '#non' end 
declare @t_edriver nvarchar(20) = case when '#non'='#non' then char(255) else '#non' end 
declare @t_chk1 nvarchar(20) = case when '#non'='#non' then '' else '#non' end 
declare @t_chk2 nvarchar(20) = case when '#non'='#non' then '' else '#non' end 

declare @tmp table( 
	gno nvarchar(1),
	rr int,
	recno int,
	page int,
	dno nvarchar(50), 
	driver nvarchar(50), 
	total float
)
insert @tmp
select '0','','','',driverno,driver,SUM(total2)
from view_trans
where (trandate between @t_bdate and @t_edate)
and (driverno between @t_bdriver and @t_edriver)
group by driverno,driver

update a
set rr=rx,recno=case when rx%44=0 then rx/44-1 else rx/44 end,page=case when rx%88=0 then rx/88-1 else rx/88 end
from (select ROW_NUMBER()over(partition by gno order by dno)rx,rr,recno,page from @tmp)a

update a
set rr=rx
from (select ROW_NUMBER()over(partition by recno order by dno,page)rx,rr from @tmp)a

declare @result table( 
	gno nvarchar(1),
	rr int,
	recno int,
	page int,
	dno nvarchar(50), 
	driver nvarchar(50), 
	total float,
	dno2 nvarchar(50), 
	driver2 nvarchar(50), 
	total2 float
)
insert @result
select '0',rr,recno,page,dno,driver,total,'','',''
from @tmp
where recno%2=0

update @result
set dno2=b.dno,driver2=b.driver,total2=b.total
from @result a
outer apply(select * from @tmp where a.page=page and a.rr=rr and recno%2=1)b

insert @result(gno,rr,recno,page,total2)
select '1',MAX(rr),MAX(recno),MAX(page),sum(isnull(total2,0))+sum(isnull(total,0))
from @result

insert @result(gno,rr,recno,page)
select '2',MAX(rr)+1,MAX(recno),page
from @result
group by page

select * from @result
order by recno,page,rr,gno
;
